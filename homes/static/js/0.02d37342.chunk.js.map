{"version":3,"sources":["../node_modules/fast-xml-parser/src/util.js","../node_modules/@aws-sdk/client-s3/node_modules/tslib/tslib.es6.js","../node_modules/@aws-sdk/client-s3/dist/es/models/models_0.js","../node_modules/@aws-sdk/xml-builder/dist/es/XmlNode.js","../node_modules/@aws-sdk/xml-builder/dist/es/escape-attribute.js","../node_modules/@aws-sdk/xml-builder/dist/es/XmlText.js","../node_modules/@aws-sdk/xml-builder/dist/es/escape-element.js","../node_modules/@aws-sdk/client-s3/dist/es/protocols/Aws_restXml.js","../node_modules/@aws-sdk/util-arn-parser/dist/es/index.js","../node_modules/@aws-sdk/middleware-bucket-endpoint/dist/es/bucketHostnameUtils.js","../node_modules/@aws-sdk/middleware-bucket-endpoint/dist/es/bucketHostname.js","../node_modules/@aws-sdk/middleware-bucket-endpoint/dist/es/bucketEndpointMiddleware.js","../node_modules/@aws-sdk/middleware-bucket-endpoint/dist/es/configurations.js","../node_modules/@aws-sdk/middleware-ssec/dist/es/index.js","../node_modules/@aws-sdk/client-s3/dist/es/commands/GetObjectCommand.js","../node_modules/@aws-sdk/client-s3/dist/es/commands/DeleteObjectCommand.js","../node_modules/@aws-sdk/client-s3/dist/es/commands/ListObjectsCommand.js","../node_modules/@aws-sdk/eventstream-marshaller/dist/es/Int64.js","../node_modules/@aws-sdk/eventstream-marshaller/dist/es/HeaderMarshaller.js","../node_modules/@aws-sdk/eventstream-marshaller/dist/es/EventStreamMarshaller.js","../node_modules/@aws-sdk/eventstream-marshaller/dist/es/splitMessage.js","../node_modules/@aws-sdk/eventstream-serde-universal/dist/es/EventStreamMarshaller.js","../node_modules/@aws-sdk/eventstream-serde-universal/dist/es/getUnmarshalledStream.js","../node_modules/@aws-sdk/eventstream-serde-universal/dist/es/getChunkedStream.js","../node_modules/@aws-sdk/eventstream-serde-browser/dist/es/EventStreamMarshaller.js","../node_modules/@aws-sdk/eventstream-serde-browser/dist/es/utils.js","../node_modules/@aws-sdk/chunked-blob-reader/dist/es/index.js","../node_modules/@aws-sdk/hash-blob-browser/dist/es/index.js","../node_modules/@aws-sdk/md5-js/dist/es/constants.js","../node_modules/@aws-sdk/md5-js/dist/es/index.js","../node_modules/@aws-sdk/client-s3/dist/es/endpoints.js","../node_modules/@aws-sdk/client-s3/dist/es/runtimeConfig.shared.js","../node_modules/@aws-sdk/client-s3/dist/es/runtimeConfig.browser.js","../node_modules/@aws-sdk/eventstream-serde-browser/dist/es/provider.js","../node_modules/@aws-sdk/middleware-expect-continue/dist/es/index.js","../node_modules/@aws-sdk/middleware-sdk-s3/dist/es/validate-bucket-name.js","../node_modules/@aws-sdk/middleware-sdk-s3/dist/es/use-regional-endpoint.js","../node_modules/@aws-sdk/middleware-sdk-s3/dist/es/throw-200-exceptions.js","../node_modules/@aws-sdk/client-s3/dist/es/S3Client.js","../node_modules/@aws-sdk/eventstream-serde-config-resolver/dist/es/EventStreamSerdeConfig.js","../node_modules/@aws-sdk/util-format-url/dist/es/index.js","../node_modules/@aws-sdk/util-create-request/dist/es/index.js","../node_modules/@aws-sdk/s3-request-presigner/dist/es/presigner.js","../node_modules/@aws-sdk/s3-request-presigner/dist/es/constants.js","../node_modules/@aws-amplify/storage/lib-esm/providers/axios-http-handler.js","../node_modules/@aws-sdk/client-s3/dist/es/commands/PutObjectCommand.js","../node_modules/@aws-sdk/client-s3/dist/es/models/models_1.js","../node_modules/@aws-sdk/client-s3/dist/es/commands/CreateMultipartUploadCommand.js","../node_modules/@aws-sdk/client-s3/dist/es/commands/UploadPartCommand.js","../node_modules/@aws-sdk/client-s3/dist/es/commands/CompleteMultipartUploadCommand.js","../node_modules/@aws-sdk/client-s3/dist/es/commands/AbortMultipartUploadCommand.js","../node_modules/@aws-sdk/client-s3/dist/es/commands/ListPartsCommand.js","../node_modules/@aws-amplify/storage/lib-esm/providers/AWSS3ProviderManagedUpload.js","../node_modules/@aws-amplify/storage/lib-esm/providers/AWSS3Provider.js","../node_modules/@aws-amplify/storage/lib-esm/Storage.js","../node_modules/@aws-amplify/storage/lib-esm/index.js","../node_modules/@aws-amplify/ui-components/dist/esm-es5/storage-helpers-48c373a0.js","../node_modules/fast-xml-parser/src/xmlstr2xmlnode.js","../node_modules/events/events.js","../node_modules/@aws-crypto/crc32/build/index.js","../node_modules/fast-xml-parser/src/parser.js","../node_modules/fast-xml-parser/src/node2json.js","../node_modules/fast-xml-parser/src/xmlNode.js","../node_modules/fast-xml-parser/src/validator.js","../node_modules/fast-xml-parser/src/nimndata.js","../node_modules/fast-xml-parser/src/node2json_str.js","../node_modules/fast-xml-parser/src/json2xml.js"],"names":["nameStartChar","nameRegexp","regexName","RegExp","exports","isExist","v","isEmptyObject","obj","Object","keys","length","merge","target","a","arrayMode","len","i","getValue","buildOptions","options","defaultOptions","props","newOptions","undefined","isTagNameInArrayMode","tagName","parentTagName","test","isName","string","match","exec","getAllMatches","regex","matches","allmatches","index","push","_extendStatics","d","b","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","String","__","this","constructor","create","_assign","assign","t","s","n","arguments","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","Symbol","iterator","op","pop","AnalyticsFilter","LifecycleRuleFilter","MetricsFilter","ReplicationRuleFilter","filterSensitiveLog","SSEKMSKeyId","SSEKMSEncryptionContext","SSECustomerKey","CopySourceSSECustomerKey","visit","visitor","Prefix","Tag","And","$unknown","_a","Filter","AnalyticsConfiguration","KMSMasterKeyID","ApplyServerSideEncryptionByDefault","Rules","map","item","ServerSideEncryptionConfiguration","KeyId","SSEKMS","Encryption","S3BucketDestination","Destination","InventoryConfiguration","MetricsConfiguration","ReplicationConfiguration","AnalyticsConfigurationList","InventoryConfigurationList","MetricsConfigurationList","LifecycleConfiguration","KMSKeyId","XmlNode","name","children","attributes","withName","addAttribute","addChildNode","child","removeAttribute","toString","e_1","hasChildren","Boolean","xmlText","_b","_c","attributeName","attribute","replace","e_1_1","error","return","c","join","XmlText","output","context","parsedOutput","response","errorCode","parsedBody","message","_d","_e","concat","loadRestXmlErrorCode","$metadata","deserializeMetadata","code","Code","Message","$fault","Error","_f","contents","data","AccessTier","StorageClass","input","bodyNode","Parts","serializeAws_restXmlCompletedPartList","node","filter","entry","ETag","PartNumber","deserializeAws_restXmlCommonPrefixList","deserializeAws_restXmlCommonPrefix","deserializeAws_restXmlInitiator","ID","DisplayName","deserializeAws_restXmlObjectList","Key","LastModified","Size","Owner","Date","parseInt","deserializeAws_restXmlOwner","deserializeAws_restXml_Object","deserializeAws_restXmlParts","deserializeAws_restXmlPart","httpStatusCode","statusCode","requestId","headers","extendedRequestId","cfId","collectBody","streamBody","Uint8Array","streamCollector","isSerializableHeaderValue","getOwnPropertyNames","includes","size","utf8Encoder","collectBodyString","encoded","parsedObj","attributeNamePrefix","ignoreAttributes","parseNodeValue","tagValueProcessor","val","key","parsedObjToReturn","validate","str","indexOf","split","DOMAIN_PATTERN","IP_ADDRESS_PATTERN","DOTS_PATTERN","DOT_PATTERN","S3_HOSTNAME_PATTERN","S3_US_EAST_1_ALTNAME_PATTERN","getPseudoRegion","region","isFipsRegion","getRegionalSuffix","hostname","parts","startsWith","endsWith","isEqualRegions","regionA","regionB","validateDNSHostLabel","tlsCompatible","isCustomEndpoint","dualstackEndpoint","baseHostname","accelerateEndpoint","bucketName","isBucketNameOptions","clientRegion","hostnameSuffix","pathStyleEndpoint","useArnRegion","clientPartition","clientSigningRegion","validateArnEndpointOptions","service","partition","accountId","resource","validateService","validatePartition","validateAccountId","validateRegion","_g","delimiter","resourceType","rest","slice","accesspointName","outpostId","endpointRegion","signingRegion","validateOutpostService","validateNoDualstack","validateNoFIPS","bucketEndpoint","signingService","validateS3Service","isDnsCompatibleBucketName","args","replaceBucketInPath","request","bucketArn","modifiedSigningRegion","Bucket","isInstance","arn","segments","regionInfoProvider","useAccelerateEndpoint","useDualstackEndpoint","forcePathStyle","protocol","path","bucketEndpointMiddlewareOptions","tags","relation","toMiddleware","override","getBucketEndpointPlugin","applyToStack","clientStack","addRelativeTo","ssecMiddlewareOptions","getSsecPlugin","config","add","_this","properties","properties_1","properties_1_1","prop","valueView","hash","ArrayBuffer","isView","buffer","byteOffset","byteLength","utf8Decoder","base64Encoder","md5","update","digest","ssecMiddleware","_super","GetObjectCommand","resolveMiddleware","configuration","middlewareStack","use","serialize","deserialize","stack","handlerExecutionContext","logger","clientName","commandName","inputFilterSensitiveLog","outputFilterSensitiveLog","requestHandler","handle","resolvedPath","labelValue","query","port","IfMatch","IfModifiedSince","IfNoneMatch","IfUnmodifiedSince","Range","range","SSECustomerAlgorithm","SSECustomerKeyMD5","RequestPayer","ExpectedBucketOwner","segment","ResponseCacheControl","ResponseContentDisposition","ResponseContentEncoding","ResponseContentLanguage","ResponseContentType","ResponseExpires","toISOString","VersionId","versionId","partNumber","endpoint","method","AcceptRanges","Body","BucketKeyEnabled","CacheControl","ContentDisposition","ContentEncoding","ContentLanguage","ContentLength","ContentRange","ContentType","DeleteMarker","Expiration","Expires","Metadata","MissingMeta","ObjectLockLegalHoldStatus","ObjectLockMode","ObjectLockRetainUntilDate","PartsCount","ReplicationStatus","RequestCharged","Restore","ServerSideEncryption","TagCount","WebsiteRedirectLocation","forEach","header","substring","DeleteObjectCommand","MFA","BypassGovernanceRetention","ListObjectsCommand","Delimiter","EncodingType","Marker","marker","MaxKeys","prefix","CommonPrefixes","Contents","IsTruncated","Name","NextMarker","Int64","bytes","fromNumber","number","remaining","Math","abs","round","negate","valueOf","negative","HEADER_VALUE_TYPE","HeaderMarshaller","toUtf8","fromUtf8","format","e_2","chunks","headerName","from","formatHeaderValue","out","reduce","carry","position","chunks_1","chunks_1_1","chunk","set","e_2_1","type","shortView","DataView","setUint8","setInt16","intView","setInt32","longBytes","binView","setUint16","binBytes","utf8Bytes","strView","strBytes","tsBytes","UUID_PATTERN","uuidBytes","parse","nameLength","getUint8","BOOLEAN_TAG","BYTE_TAG","getInt8","SHORT_TAG","getInt16","INT_TAG","getInt32","LONG_TAG","binaryLength","getUint16","BINARY_TAG","stringLength","STRING_TAG","TIMESTAMP_TAG","UUID_TAG","subarray","EventStreamMarshaller","headerMarshaller","marshall","rawHeaders","view","checksum","setUint32","unmarshall","PRELUDE_LENGTH","messageLength","getUint32","headerLength","expectedPreludeChecksum","PRELUDE_MEMBER_LENGTH","expectedMessageChecksum","checksummer","splitMessage","formatHeaders","eventMarshaller","utfEncoder","deserializer","source","asyncIterator","source_1","source_1_1","messageType","unmodeledError","exception","deserializedException","event","deserialized","getUnmarshalledStream","currentMessageTotalLength","currentMessagePendingLength","currentMessage","messageLengthBuffer","allocateMessage","sourceIterator","chunkLength","currentOffset","bytesRemaining","numBytesForTotal","numBytesToWrite","min","getChunkedStream","serializer","self","input_1","input_1_1","payloadBuf","universalMarshaller","bodyIterable","isReadableStream","readableStream","reader","getReader","read","releaseLock","serialziedIterable","ReadableStream","asyncIterable","pull","controller","close","enqueue","blobReader","blob","onChunk","chunkSize","fileReader","FileReader","addEventListener","totalBytesRead","readAsArrayBuffer","INIT","Md5","state","Uint32Array","bufferLength","bytesHashed","finished","sourceData","isEmptyData","BYTES_PER_ELEMENT","convertToBuffer","hashBuffer","undecoratedLength","bitsHashed","BLOCK_SIZE","floor","ff","gg","hh","ii","cmn","q","x","AWS_REGIONS","Set","AWS_CN_REGIONS","AWS_ISO_REGIONS","AWS_ISO_B_REGIONS","AWS_US_GOV_REGIONS","ClientSharedValues","apiVersion","disableHostPrefix","regionInfo","has","serviceId","signingEscapePath","urlParser","ClientDefaultValues","runtime","base64Decoder","bodyLengthChecker","credentialDefaultProvider","defaultUserAgentProvider","clientVersion","version","eventStreamSerdeProvider","maxAttempts","sha256","streamHasher","hashCtor","addExpectContinueMiddlewareOptions","getAddExpectContinuePlugin","Expect","addExpectContinueMiddleware","validateBucketNameMiddlewareOptions","getValidateBucketNamePlugin","unused","err","validateBucketNameMiddleware","useRegionalEndpointMiddlewareOptions","getUseRegionalEndpointPlugin","throw200ExceptionsMiddlewareOptions","getThrow200ExceptionsPlugin","bodyBytes","bodyString","S3Client","_config_0","_config_1","_config_2","_config_3","_config_4","_config_6","resolveBucketEndpointConfig","_config_7","_config_8","eventStreamMarshaller","destroy","formatUrl","substr","charAt","queryString","createRequest","client","command","interceptMiddleware","clone","priority","handler","S3RequestPresigner","resolvedOptions","signingName","uriEscapePath","signer","presign","requestToSign","unsignableHeaders","unhoistableHeaders","toLowerCase","host","expiresIn","AxiosHttpHandler","httpOptions","emitter","requestTimeoutInMs","requestTimeout","url","axiosRequest","onUploadProgress","emit","debug","responseType","raceOfPromises","status","catch","race","timeoutInMs","setTimeout","timeoutError","FileHeaderInfo","JSONType","QuoteFields","RestoreRequestType","SelectObjectContentEventStream","PutObjectCommand","ACL","ContentMD5","expires","GrantFullControl","GrantRead","GrantReadACP","GrantWriteACP","Tagging","acc","suffix","CreateMultipartUploadCommand","uploads","AbortDate","AbortRuleId","UploadId","S3","OutputLocation","RestoreRequest","Records","Stats","Progress","Cont","End","Payload","UploadPartCommand","uploadId","CompleteMultipartUploadCommand","MultipartUpload","Location","AbortMultipartUploadCommand","ListPartsCommand","MaxParts","PartNumberMarker","Initiator","NextPartNumberMarker","Part","__assign","o","m","AWSS3ProviderManagedUpload","params","opts","minPartSize","queueSize","multiPartMap","cancel","bytesUploaded","totalBytesToUpload","upload","putObjectCommand","numberOfPartsToUpload","start","validateAndSanitizeBody","_createNewS3Client","send","createMultiPartUpload","ceil","checkIfUploadCancelled","createParts","uploadParts","finishMultiPartUpload","startPartNumber","bodyStart","bodyEnd","bodyPart","events","_lastUploadedBytes","createMultiPartUploadCommand","s3","promises","parts_1","parts_1_1","part","uploadPartCommandInput","uploadPartCommand","allResults","error_1","setupEventListener","all","cancelUpload","completeUploadCommand","error_2","errorMessage","error_3","cleanup","on","progress","progressChanged","loaded","incrementalUpdate","total","isGenericObject","JSON","stringify","isBlob","Platform","isReactNative","Blob","credentials","dangerouslyConnectToHttpEndpointForTesting","localTestingConfig","_getCredentials","tls","customUserAgent","remove","Credentials","get","cred","shear","warn","AMPLIFY_SYMBOL","for","track","attrs","metrics","Hub","dispatch","AWSS3Provider","_config","getCategory","CATEGORY","getProviderName","PROVIDER_NAME","configure","amplifyConfig","Parser","parseMobilehubConfig","Storage","bucket","opt","download","cacheControl","contentDisposition","contentEncoding","contentLanguage","contentType","final_key","getObjectCommand","_ensureCredentials","_prefix","fileSize","Number","put","object","progressCallback","metadata","tagging","acl","serverSideEncryption","uploader","deleteObjectCommand","error_4","list","maxKeys","final_path","listObjectsCommand","error_5","eTag","lastModified","level","customPrefix","identityId","privatePath","private","protectedPath","protected","publicPath","public","r","ar","_pluggables","bind","getModuleName","addPluggable","pluggable","getPluggable","providerName","find","removePluggable","storageKeysFromConfig","storageArrayKeys","isInStorageArrayKeys","k","some","entries","provider","prov","_instance","vault","old_configure","vaultConfig","Amplify","register","imageFileType","calcKey","file","fileToKey","encodeURI","getStorageObject","src","getTextSource","textSrc","onload","onerror","abort","readAsText","putStorageObject","util","xmlNode","window","parseFloat","attrNodeName","textNodeName","ignoreNameSpace","allowBooleanAttributes","parseAttributeValue","trimValues","cdataTagName","cdataPositionChar","attrValueProcessor","attrName","stopNodes","processTagValue","trim","parseValue","parseTrueNumberOnly","resolveNameSpace","tagname","shouldParse","parsed","isNaN","attrsRegx","buildAttributesMap","attrStr","attrCollection","closingIndexForOpeningTag","attrBoundary","tagExp","ch","findClosingIndex","xmlData","errMsg","closingIndex","getTraversalObj","xmlObj","currentNode","textData","closeIndex","colonIndex","attrsMap","startIndex","parent","_closeIndex","_closeIndex2","_tagExp","childNode","addChild","_tagExp2","_closeIndex3","separatorIndex","_tagName","shouldBuildAttributesMap","_colonIndex","lastIndexOf","_childNode","_childNode2","ReflectOwnKeys","R","Reflect","ReflectApply","receiver","Function","ownKeys","getOwnPropertySymbols","NumberIsNaN","EventEmitter","init","module","once","errorListener","removeListener","resolver","eventTargetAgnosticAddListener","flags","addErrorHandlerIfEventEmitter","_events","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","_getMaxListeners","that","_addListener","prepend","existing","warning","newListener","unshift","warned","w","count","console","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","arr","ret","unwrapListeners","arrayClone","listenerCount","copy","wrapListener","arg","removeEventListener","defineProperty","enumerable","RangeError","getPrototypeOf","setMaxListeners","getMaxListeners","doError","er","listeners","addListener","prependListener","prependOnceListener","originalListener","shift","spliceOne","off","removeAllListeners","rawListeners","eventNames","Crc32","crc32","tslib_1","data_1","__values","data_1_1","byte","lookupTable","nodeToJson","xmlToNodeobj","x2xmlnode","validator","validationOption","msg","traversableObj","convertToJson","convertTonimn","convert2nimn","convertToJsonString","j2xParser","parseToNimn","schema","jObj","asArray","tag","_asArray","isArray","readPI","getErrorObject","getLineNumberForPosition","readCommentAndCDATA","angleBracketsCount","tagFound","reachedRoot","closingTag","readAttributeStr","isValid","validateAttributeString","line","tagClosed","otg","_isValid","afterAmp","validateAmpersand","startChar","validAttrStrRegxp","attrNames","getPositionFromMatch","validateAttrName","re","validateNumberAmpersand","lineNumber","char","fromCharCode","chars","nilChar","missingChar","nilPremitive","missingPremitive","emptyChar","emptyValue","boundryChar","objStart","arrStart","arrayEnd","charsArr","e_schema","hasValidData","itemSchema","arr_len","arr_i","processValue","_arr_i","_r","_r2","isAppChar","x2j","_cToJsonStr","indentBy","supressEmptyNode","isAttribute","attrPrefixLen","isCDATA","replaceCDATAstr","replaceCDATAarr","indentate","tagEndChar","newLine","buildTextNode","buildEmptyTextNode","buildObjNode","buildEmptyObjNode","buildTextValNode","buildObjectNode","cdata","repeat","j2x","attr","arrLen","j","Ks","L","_j","_result"],"mappings":"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","file":"static/js/0.02d37342.chunk.js","sourcesContent":["'use strict';\n\nvar nameStartChar = \":A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD\";\nvar nameChar = nameStartChar + \"\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040\";\nvar nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*';\nvar regexName = new RegExp('^' + nameRegexp + '$');\n\nvar getAllMatches = function getAllMatches(string, regex) {\n  var matches = [];\n  var match = regex.exec(string);\n\n  while (match) {\n    var allmatches = [];\n    var len = match.length;\n\n    for (var index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n\n  return matches;\n};\n\nvar isName = function isName(string) {\n  var match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function (v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function (obj) {\n  return Object.keys(obj).length === 0;\n};\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\n\n\nexports.merge = function (target, a, arrayMode) {\n  if (a) {\n    var keys = Object.keys(a); // will return an array of own properties\n\n    var len = keys.length; //don't make it inline\n\n    for (var i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [a[keys[i]]];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\n\nexports.getValue = function (v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n}; // const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\n\nexports.buildOptions = function (options, defaultOptions, props) {\n  var newOptions = {};\n\n  if (!options) {\n    return defaultOptions; //if there are not options\n  }\n\n  for (var i = 0; i < props.length; i++) {\n    if (options[props[i]] !== undefined) {\n      newOptions[props[i]] = options[props[i]];\n    } else {\n      newOptions[props[i]] = defaultOptions[props[i]];\n    }\n  }\n\n  return newOptions;\n};\n/**\n * Check if a tag name should be treated as array\n *\n * @param tagName the node tagname\n * @param arrayMode the array mode option\n * @param parentTagName the parent tag name\n * @returns {boolean} true if node should be parsed as array\n */\n\n\nexports.isTagNameInArrayMode = function (tagName, arrayMode, parentTagName) {\n  if (arrayMode === false) {\n    return false;\n  } else if (arrayMode instanceof RegExp) {\n    return arrayMode.test(tagName);\n  } else if (typeof arrayMode === 'function') {\n    return !!arrayMode(tagName, parentTagName);\n  }\n\n  return arrayMode === \"strict\";\n};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\n\n/* global Reflect, Promise */\nvar _extendStatics = function extendStatics(d, b) {\n  _extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    }\n  };\n\n  return _extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n  _extendStatics(d, b);\n\n  function __() {\n    this.constructor = d;\n  }\n\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nexport { _assign as __assign };\nexport function __rest(s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\nexport function __param(paramIndex, decorator) {\n  return function (target, key) {\n    decorator(target, key, paramIndex);\n  };\n}\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\nexport function __generator(thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n}\nexport var __createBinding = Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n};\nexport function __exportStar(m, o) {\n  for (var p in m) {\n    if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n  }\n}\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}\n/** @deprecated */\n\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n\n  return ar;\n}\n/** @deprecated */\n\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {\n    s += arguments[i].length;\n  }\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) {\n    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {\n      r[k] = a[j];\n    }\n  }\n\n  return r;\n}\nexport function __spreadArray(to, from) {\n  for (var i = 0, il = from.length, j = to.length; i < il; i++, j++) {\n    to[j] = from[i];\n  }\n\n  return to;\n}\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []),\n      i,\n      q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i;\n\n  function verb(n) {\n    if (g[n]) i[n] = function (v) {\n      return new Promise(function (a, b) {\n        q.push([n, v, a, b]) > 1 || resume(n, v);\n      });\n    };\n  }\n\n  function resume(n, v) {\n    try {\n      step(g[n](v));\n    } catch (e) {\n      settle(q[0][3], e);\n    }\n  }\n\n  function step(r) {\n    r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);\n  }\n\n  function fulfill(value) {\n    resume(\"next\", value);\n  }\n\n  function reject(value) {\n    resume(\"throw\", value);\n  }\n\n  function settle(f, v) {\n    if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]);\n  }\n}\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) {\n    throw e;\n  }), verb(\"return\"), i[Symbol.iterator] = function () {\n    return this;\n  }, i;\n\n  function verb(n, f) {\n    i[n] = o[n] ? function (v) {\n      return (p = !p) ? {\n        value: __await(o[n](v)),\n        done: n === \"return\"\n      } : f ? f(v) : v;\n    } : f;\n  }\n}\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator],\n      i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () {\n    return this;\n  }, i);\n\n  function verb(n) {\n    i[n] = o[n] && function (v) {\n      return new Promise(function (resolve, reject) {\n        v = o[n](v), settle(resolve, reject, v.done, v.value);\n      });\n    };\n  }\n\n  function settle(resolve, reject, d, v) {\n    Promise.resolve(v).then(function (v) {\n      resolve({\n        value: v,\n        done: d\n      });\n    }, reject);\n  }\n}\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n}\n;\n\nvar __setModuleDefault = Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n}\nexport function __importDefault(mod) {\n  return mod && mod.__esModule ? mod : {\n    default: mod\n  };\n}\nexport function __classPrivateFieldGet(receiver, privateMap) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to get private field on non-instance\");\n  }\n\n  return privateMap.get(receiver);\n}\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to set private field on non-instance\");\n  }\n\n  privateMap.set(receiver, value);\n  return value;\n}","import { __assign } from \"tslib\";\nimport { SENSITIVE_STRING } from \"@aws-sdk/smithy-client\";\nexport var AbortIncompleteMultipartUpload;\n\n(function (AbortIncompleteMultipartUpload) {\n  AbortIncompleteMultipartUpload.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(AbortIncompleteMultipartUpload || (AbortIncompleteMultipartUpload = {}));\n\nexport var AbortMultipartUploadOutput;\n\n(function (AbortMultipartUploadOutput) {\n  AbortMultipartUploadOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(AbortMultipartUploadOutput || (AbortMultipartUploadOutput = {}));\n\nexport var AbortMultipartUploadRequest;\n\n(function (AbortMultipartUploadRequest) {\n  AbortMultipartUploadRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(AbortMultipartUploadRequest || (AbortMultipartUploadRequest = {}));\n\nexport var NoSuchUpload;\n\n(function (NoSuchUpload) {\n  NoSuchUpload.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(NoSuchUpload || (NoSuchUpload = {}));\n\nexport var AccelerateConfiguration;\n\n(function (AccelerateConfiguration) {\n  AccelerateConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(AccelerateConfiguration || (AccelerateConfiguration = {}));\n\nexport var Grantee;\n\n(function (Grantee) {\n  Grantee.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Grantee || (Grantee = {}));\n\nexport var Grant;\n\n(function (Grant) {\n  Grant.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Grant || (Grant = {}));\n\nexport var Owner;\n\n(function (Owner) {\n  Owner.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Owner || (Owner = {}));\n\nexport var AccessControlPolicy;\n\n(function (AccessControlPolicy) {\n  AccessControlPolicy.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(AccessControlPolicy || (AccessControlPolicy = {}));\n\nexport var AccessControlTranslation;\n\n(function (AccessControlTranslation) {\n  AccessControlTranslation.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(AccessControlTranslation || (AccessControlTranslation = {}));\n\nexport var CompleteMultipartUploadOutput;\n\n(function (CompleteMultipartUploadOutput) {\n  CompleteMultipartUploadOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.SSEKMSKeyId && {\n      SSEKMSKeyId: SENSITIVE_STRING\n    });\n  };\n})(CompleteMultipartUploadOutput || (CompleteMultipartUploadOutput = {}));\n\nexport var CompletedPart;\n\n(function (CompletedPart) {\n  CompletedPart.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CompletedPart || (CompletedPart = {}));\n\nexport var CompletedMultipartUpload;\n\n(function (CompletedMultipartUpload) {\n  CompletedMultipartUpload.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CompletedMultipartUpload || (CompletedMultipartUpload = {}));\n\nexport var CompleteMultipartUploadRequest;\n\n(function (CompleteMultipartUploadRequest) {\n  CompleteMultipartUploadRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CompleteMultipartUploadRequest || (CompleteMultipartUploadRequest = {}));\n\nexport var CopyObjectResult;\n\n(function (CopyObjectResult) {\n  CopyObjectResult.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CopyObjectResult || (CopyObjectResult = {}));\n\nexport var CopyObjectOutput;\n\n(function (CopyObjectOutput) {\n  CopyObjectOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign(__assign({}, obj), obj.SSEKMSKeyId && {\n      SSEKMSKeyId: SENSITIVE_STRING\n    }), obj.SSEKMSEncryptionContext && {\n      SSEKMSEncryptionContext: SENSITIVE_STRING\n    });\n  };\n})(CopyObjectOutput || (CopyObjectOutput = {}));\n\nexport var CopyObjectRequest;\n\n(function (CopyObjectRequest) {\n  CopyObjectRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign(__assign(__assign(__assign({}, obj), obj.SSECustomerKey && {\n      SSECustomerKey: SENSITIVE_STRING\n    }), obj.SSEKMSKeyId && {\n      SSEKMSKeyId: SENSITIVE_STRING\n    }), obj.SSEKMSEncryptionContext && {\n      SSEKMSEncryptionContext: SENSITIVE_STRING\n    }), obj.CopySourceSSECustomerKey && {\n      CopySourceSSECustomerKey: SENSITIVE_STRING\n    });\n  };\n})(CopyObjectRequest || (CopyObjectRequest = {}));\n\nexport var ObjectNotInActiveTierError;\n\n(function (ObjectNotInActiveTierError) {\n  ObjectNotInActiveTierError.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ObjectNotInActiveTierError || (ObjectNotInActiveTierError = {}));\n\nexport var BucketAlreadyExists;\n\n(function (BucketAlreadyExists) {\n  BucketAlreadyExists.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(BucketAlreadyExists || (BucketAlreadyExists = {}));\n\nexport var BucketAlreadyOwnedByYou;\n\n(function (BucketAlreadyOwnedByYou) {\n  BucketAlreadyOwnedByYou.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(BucketAlreadyOwnedByYou || (BucketAlreadyOwnedByYou = {}));\n\nexport var CreateBucketOutput;\n\n(function (CreateBucketOutput) {\n  CreateBucketOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CreateBucketOutput || (CreateBucketOutput = {}));\n\nexport var CreateBucketConfiguration;\n\n(function (CreateBucketConfiguration) {\n  CreateBucketConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CreateBucketConfiguration || (CreateBucketConfiguration = {}));\n\nexport var CreateBucketRequest;\n\n(function (CreateBucketRequest) {\n  CreateBucketRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CreateBucketRequest || (CreateBucketRequest = {}));\n\nexport var CreateMultipartUploadOutput;\n\n(function (CreateMultipartUploadOutput) {\n  CreateMultipartUploadOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign(__assign({}, obj), obj.SSEKMSKeyId && {\n      SSEKMSKeyId: SENSITIVE_STRING\n    }), obj.SSEKMSEncryptionContext && {\n      SSEKMSEncryptionContext: SENSITIVE_STRING\n    });\n  };\n})(CreateMultipartUploadOutput || (CreateMultipartUploadOutput = {}));\n\nexport var CreateMultipartUploadRequest;\n\n(function (CreateMultipartUploadRequest) {\n  CreateMultipartUploadRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign(__assign(__assign({}, obj), obj.SSECustomerKey && {\n      SSECustomerKey: SENSITIVE_STRING\n    }), obj.SSEKMSKeyId && {\n      SSEKMSKeyId: SENSITIVE_STRING\n    }), obj.SSEKMSEncryptionContext && {\n      SSEKMSEncryptionContext: SENSITIVE_STRING\n    });\n  };\n})(CreateMultipartUploadRequest || (CreateMultipartUploadRequest = {}));\n\nexport var DeleteBucketRequest;\n\n(function (DeleteBucketRequest) {\n  DeleteBucketRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketRequest || (DeleteBucketRequest = {}));\n\nexport var DeleteBucketAnalyticsConfigurationRequest;\n\n(function (DeleteBucketAnalyticsConfigurationRequest) {\n  DeleteBucketAnalyticsConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketAnalyticsConfigurationRequest || (DeleteBucketAnalyticsConfigurationRequest = {}));\n\nexport var DeleteBucketCorsRequest;\n\n(function (DeleteBucketCorsRequest) {\n  DeleteBucketCorsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketCorsRequest || (DeleteBucketCorsRequest = {}));\n\nexport var DeleteBucketEncryptionRequest;\n\n(function (DeleteBucketEncryptionRequest) {\n  DeleteBucketEncryptionRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketEncryptionRequest || (DeleteBucketEncryptionRequest = {}));\n\nexport var DeleteBucketIntelligentTieringConfigurationRequest;\n\n(function (DeleteBucketIntelligentTieringConfigurationRequest) {\n  DeleteBucketIntelligentTieringConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketIntelligentTieringConfigurationRequest || (DeleteBucketIntelligentTieringConfigurationRequest = {}));\n\nexport var DeleteBucketInventoryConfigurationRequest;\n\n(function (DeleteBucketInventoryConfigurationRequest) {\n  DeleteBucketInventoryConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketInventoryConfigurationRequest || (DeleteBucketInventoryConfigurationRequest = {}));\n\nexport var DeleteBucketLifecycleRequest;\n\n(function (DeleteBucketLifecycleRequest) {\n  DeleteBucketLifecycleRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketLifecycleRequest || (DeleteBucketLifecycleRequest = {}));\n\nexport var DeleteBucketMetricsConfigurationRequest;\n\n(function (DeleteBucketMetricsConfigurationRequest) {\n  DeleteBucketMetricsConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketMetricsConfigurationRequest || (DeleteBucketMetricsConfigurationRequest = {}));\n\nexport var DeleteBucketOwnershipControlsRequest;\n\n(function (DeleteBucketOwnershipControlsRequest) {\n  DeleteBucketOwnershipControlsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketOwnershipControlsRequest || (DeleteBucketOwnershipControlsRequest = {}));\n\nexport var DeleteBucketPolicyRequest;\n\n(function (DeleteBucketPolicyRequest) {\n  DeleteBucketPolicyRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketPolicyRequest || (DeleteBucketPolicyRequest = {}));\n\nexport var DeleteBucketReplicationRequest;\n\n(function (DeleteBucketReplicationRequest) {\n  DeleteBucketReplicationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketReplicationRequest || (DeleteBucketReplicationRequest = {}));\n\nexport var DeleteBucketTaggingRequest;\n\n(function (DeleteBucketTaggingRequest) {\n  DeleteBucketTaggingRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketTaggingRequest || (DeleteBucketTaggingRequest = {}));\n\nexport var DeleteBucketWebsiteRequest;\n\n(function (DeleteBucketWebsiteRequest) {\n  DeleteBucketWebsiteRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketWebsiteRequest || (DeleteBucketWebsiteRequest = {}));\n\nexport var DeleteObjectOutput;\n\n(function (DeleteObjectOutput) {\n  DeleteObjectOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteObjectOutput || (DeleteObjectOutput = {}));\n\nexport var DeleteObjectRequest;\n\n(function (DeleteObjectRequest) {\n  DeleteObjectRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteObjectRequest || (DeleteObjectRequest = {}));\n\nexport var DeletedObject;\n\n(function (DeletedObject) {\n  DeletedObject.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeletedObject || (DeletedObject = {}));\n\nexport var _Error;\n\n(function (_Error) {\n  _Error.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(_Error || (_Error = {}));\n\nexport var DeleteObjectsOutput;\n\n(function (DeleteObjectsOutput) {\n  DeleteObjectsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteObjectsOutput || (DeleteObjectsOutput = {}));\n\nexport var ObjectIdentifier;\n\n(function (ObjectIdentifier) {\n  ObjectIdentifier.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ObjectIdentifier || (ObjectIdentifier = {}));\n\nexport var Delete;\n\n(function (Delete) {\n  Delete.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Delete || (Delete = {}));\n\nexport var DeleteObjectsRequest;\n\n(function (DeleteObjectsRequest) {\n  DeleteObjectsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteObjectsRequest || (DeleteObjectsRequest = {}));\n\nexport var DeleteObjectTaggingOutput;\n\n(function (DeleteObjectTaggingOutput) {\n  DeleteObjectTaggingOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteObjectTaggingOutput || (DeleteObjectTaggingOutput = {}));\n\nexport var DeleteObjectTaggingRequest;\n\n(function (DeleteObjectTaggingRequest) {\n  DeleteObjectTaggingRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteObjectTaggingRequest || (DeleteObjectTaggingRequest = {}));\n\nexport var DeletePublicAccessBlockRequest;\n\n(function (DeletePublicAccessBlockRequest) {\n  DeletePublicAccessBlockRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeletePublicAccessBlockRequest || (DeletePublicAccessBlockRequest = {}));\n\nexport var GetBucketAccelerateConfigurationOutput;\n\n(function (GetBucketAccelerateConfigurationOutput) {\n  GetBucketAccelerateConfigurationOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketAccelerateConfigurationOutput || (GetBucketAccelerateConfigurationOutput = {}));\n\nexport var GetBucketAccelerateConfigurationRequest;\n\n(function (GetBucketAccelerateConfigurationRequest) {\n  GetBucketAccelerateConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketAccelerateConfigurationRequest || (GetBucketAccelerateConfigurationRequest = {}));\n\nexport var GetBucketAclOutput;\n\n(function (GetBucketAclOutput) {\n  GetBucketAclOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketAclOutput || (GetBucketAclOutput = {}));\n\nexport var GetBucketAclRequest;\n\n(function (GetBucketAclRequest) {\n  GetBucketAclRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketAclRequest || (GetBucketAclRequest = {}));\n\nexport var Tag;\n\n(function (Tag) {\n  Tag.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Tag || (Tag = {}));\n\nexport var AnalyticsAndOperator;\n\n(function (AnalyticsAndOperator) {\n  AnalyticsAndOperator.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(AnalyticsAndOperator || (AnalyticsAndOperator = {}));\n\nexport var AnalyticsFilter;\n\n(function (AnalyticsFilter) {\n  AnalyticsFilter.visit = function (value, visitor) {\n    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);\n    if (value.Tag !== undefined) return visitor.Tag(value.Tag);\n    if (value.And !== undefined) return visitor.And(value.And);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  };\n\n  AnalyticsFilter.filterSensitiveLog = function (obj) {\n    var _a;\n\n    if (obj.Prefix !== undefined) return {\n      Prefix: obj.Prefix\n    };\n    if (obj.Tag !== undefined) return {\n      Tag: Tag.filterSensitiveLog(obj.Tag)\n    };\n    if (obj.And !== undefined) return {\n      And: AnalyticsAndOperator.filterSensitiveLog(obj.And)\n    };\n    if (obj.$unknown !== undefined) return _a = {}, _a[obj.$unknown[0]] = \"UNKNOWN\", _a;\n  };\n})(AnalyticsFilter || (AnalyticsFilter = {}));\n\nexport var AnalyticsS3BucketDestination;\n\n(function (AnalyticsS3BucketDestination) {\n  AnalyticsS3BucketDestination.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(AnalyticsS3BucketDestination || (AnalyticsS3BucketDestination = {}));\n\nexport var AnalyticsExportDestination;\n\n(function (AnalyticsExportDestination) {\n  AnalyticsExportDestination.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(AnalyticsExportDestination || (AnalyticsExportDestination = {}));\n\nexport var StorageClassAnalysisDataExport;\n\n(function (StorageClassAnalysisDataExport) {\n  StorageClassAnalysisDataExport.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(StorageClassAnalysisDataExport || (StorageClassAnalysisDataExport = {}));\n\nexport var StorageClassAnalysis;\n\n(function (StorageClassAnalysis) {\n  StorageClassAnalysis.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(StorageClassAnalysis || (StorageClassAnalysis = {}));\n\nexport var AnalyticsConfiguration;\n\n(function (AnalyticsConfiguration) {\n  AnalyticsConfiguration.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Filter && {\n      Filter: AnalyticsFilter.filterSensitiveLog(obj.Filter)\n    });\n  };\n})(AnalyticsConfiguration || (AnalyticsConfiguration = {}));\n\nexport var GetBucketAnalyticsConfigurationOutput;\n\n(function (GetBucketAnalyticsConfigurationOutput) {\n  GetBucketAnalyticsConfigurationOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.AnalyticsConfiguration && {\n      AnalyticsConfiguration: AnalyticsConfiguration.filterSensitiveLog(obj.AnalyticsConfiguration)\n    });\n  };\n})(GetBucketAnalyticsConfigurationOutput || (GetBucketAnalyticsConfigurationOutput = {}));\n\nexport var GetBucketAnalyticsConfigurationRequest;\n\n(function (GetBucketAnalyticsConfigurationRequest) {\n  GetBucketAnalyticsConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketAnalyticsConfigurationRequest || (GetBucketAnalyticsConfigurationRequest = {}));\n\nexport var CORSRule;\n\n(function (CORSRule) {\n  CORSRule.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CORSRule || (CORSRule = {}));\n\nexport var GetBucketCorsOutput;\n\n(function (GetBucketCorsOutput) {\n  GetBucketCorsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketCorsOutput || (GetBucketCorsOutput = {}));\n\nexport var GetBucketCorsRequest;\n\n(function (GetBucketCorsRequest) {\n  GetBucketCorsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketCorsRequest || (GetBucketCorsRequest = {}));\n\nexport var ServerSideEncryptionByDefault;\n\n(function (ServerSideEncryptionByDefault) {\n  ServerSideEncryptionByDefault.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.KMSMasterKeyID && {\n      KMSMasterKeyID: SENSITIVE_STRING\n    });\n  };\n})(ServerSideEncryptionByDefault || (ServerSideEncryptionByDefault = {}));\n\nexport var ServerSideEncryptionRule;\n\n(function (ServerSideEncryptionRule) {\n  ServerSideEncryptionRule.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.ApplyServerSideEncryptionByDefault && {\n      ApplyServerSideEncryptionByDefault: ServerSideEncryptionByDefault.filterSensitiveLog(obj.ApplyServerSideEncryptionByDefault)\n    });\n  };\n})(ServerSideEncryptionRule || (ServerSideEncryptionRule = {}));\n\nexport var ServerSideEncryptionConfiguration;\n\n(function (ServerSideEncryptionConfiguration) {\n  ServerSideEncryptionConfiguration.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Rules && {\n      Rules: obj.Rules.map(function (item) {\n        return ServerSideEncryptionRule.filterSensitiveLog(item);\n      })\n    });\n  };\n})(ServerSideEncryptionConfiguration || (ServerSideEncryptionConfiguration = {}));\n\nexport var GetBucketEncryptionOutput;\n\n(function (GetBucketEncryptionOutput) {\n  GetBucketEncryptionOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.ServerSideEncryptionConfiguration && {\n      ServerSideEncryptionConfiguration: ServerSideEncryptionConfiguration.filterSensitiveLog(obj.ServerSideEncryptionConfiguration)\n    });\n  };\n})(GetBucketEncryptionOutput || (GetBucketEncryptionOutput = {}));\n\nexport var GetBucketEncryptionRequest;\n\n(function (GetBucketEncryptionRequest) {\n  GetBucketEncryptionRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketEncryptionRequest || (GetBucketEncryptionRequest = {}));\n\nexport var IntelligentTieringAndOperator;\n\n(function (IntelligentTieringAndOperator) {\n  IntelligentTieringAndOperator.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(IntelligentTieringAndOperator || (IntelligentTieringAndOperator = {}));\n\nexport var IntelligentTieringFilter;\n\n(function (IntelligentTieringFilter) {\n  IntelligentTieringFilter.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(IntelligentTieringFilter || (IntelligentTieringFilter = {}));\n\nexport var Tiering;\n\n(function (Tiering) {\n  Tiering.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Tiering || (Tiering = {}));\n\nexport var IntelligentTieringConfiguration;\n\n(function (IntelligentTieringConfiguration) {\n  IntelligentTieringConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(IntelligentTieringConfiguration || (IntelligentTieringConfiguration = {}));\n\nexport var GetBucketIntelligentTieringConfigurationOutput;\n\n(function (GetBucketIntelligentTieringConfigurationOutput) {\n  GetBucketIntelligentTieringConfigurationOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketIntelligentTieringConfigurationOutput || (GetBucketIntelligentTieringConfigurationOutput = {}));\n\nexport var GetBucketIntelligentTieringConfigurationRequest;\n\n(function (GetBucketIntelligentTieringConfigurationRequest) {\n  GetBucketIntelligentTieringConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketIntelligentTieringConfigurationRequest || (GetBucketIntelligentTieringConfigurationRequest = {}));\n\nexport var SSEKMS;\n\n(function (SSEKMS) {\n  SSEKMS.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.KeyId && {\n      KeyId: SENSITIVE_STRING\n    });\n  };\n})(SSEKMS || (SSEKMS = {}));\n\nexport var SSES3;\n\n(function (SSES3) {\n  SSES3.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(SSES3 || (SSES3 = {}));\n\nexport var InventoryEncryption;\n\n(function (InventoryEncryption) {\n  InventoryEncryption.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.SSEKMS && {\n      SSEKMS: SSEKMS.filterSensitiveLog(obj.SSEKMS)\n    });\n  };\n})(InventoryEncryption || (InventoryEncryption = {}));\n\nexport var InventoryS3BucketDestination;\n\n(function (InventoryS3BucketDestination) {\n  InventoryS3BucketDestination.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Encryption && {\n      Encryption: InventoryEncryption.filterSensitiveLog(obj.Encryption)\n    });\n  };\n})(InventoryS3BucketDestination || (InventoryS3BucketDestination = {}));\n\nexport var InventoryDestination;\n\n(function (InventoryDestination) {\n  InventoryDestination.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.S3BucketDestination && {\n      S3BucketDestination: InventoryS3BucketDestination.filterSensitiveLog(obj.S3BucketDestination)\n    });\n  };\n})(InventoryDestination || (InventoryDestination = {}));\n\nexport var InventoryFilter;\n\n(function (InventoryFilter) {\n  InventoryFilter.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(InventoryFilter || (InventoryFilter = {}));\n\nexport var InventorySchedule;\n\n(function (InventorySchedule) {\n  InventorySchedule.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(InventorySchedule || (InventorySchedule = {}));\n\nexport var InventoryConfiguration;\n\n(function (InventoryConfiguration) {\n  InventoryConfiguration.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Destination && {\n      Destination: InventoryDestination.filterSensitiveLog(obj.Destination)\n    });\n  };\n})(InventoryConfiguration || (InventoryConfiguration = {}));\n\nexport var GetBucketInventoryConfigurationOutput;\n\n(function (GetBucketInventoryConfigurationOutput) {\n  GetBucketInventoryConfigurationOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.InventoryConfiguration && {\n      InventoryConfiguration: InventoryConfiguration.filterSensitiveLog(obj.InventoryConfiguration)\n    });\n  };\n})(GetBucketInventoryConfigurationOutput || (GetBucketInventoryConfigurationOutput = {}));\n\nexport var GetBucketInventoryConfigurationRequest;\n\n(function (GetBucketInventoryConfigurationRequest) {\n  GetBucketInventoryConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketInventoryConfigurationRequest || (GetBucketInventoryConfigurationRequest = {}));\n\nexport var LifecycleExpiration;\n\n(function (LifecycleExpiration) {\n  LifecycleExpiration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(LifecycleExpiration || (LifecycleExpiration = {}));\n\nexport var LifecycleRuleAndOperator;\n\n(function (LifecycleRuleAndOperator) {\n  LifecycleRuleAndOperator.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(LifecycleRuleAndOperator || (LifecycleRuleAndOperator = {}));\n\nexport var LifecycleRuleFilter;\n\n(function (LifecycleRuleFilter) {\n  LifecycleRuleFilter.visit = function (value, visitor) {\n    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);\n    if (value.Tag !== undefined) return visitor.Tag(value.Tag);\n    if (value.And !== undefined) return visitor.And(value.And);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  };\n\n  LifecycleRuleFilter.filterSensitiveLog = function (obj) {\n    var _a;\n\n    if (obj.Prefix !== undefined) return {\n      Prefix: obj.Prefix\n    };\n    if (obj.Tag !== undefined) return {\n      Tag: Tag.filterSensitiveLog(obj.Tag)\n    };\n    if (obj.And !== undefined) return {\n      And: LifecycleRuleAndOperator.filterSensitiveLog(obj.And)\n    };\n    if (obj.$unknown !== undefined) return _a = {}, _a[obj.$unknown[0]] = \"UNKNOWN\", _a;\n  };\n})(LifecycleRuleFilter || (LifecycleRuleFilter = {}));\n\nexport var NoncurrentVersionExpiration;\n\n(function (NoncurrentVersionExpiration) {\n  NoncurrentVersionExpiration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(NoncurrentVersionExpiration || (NoncurrentVersionExpiration = {}));\n\nexport var NoncurrentVersionTransition;\n\n(function (NoncurrentVersionTransition) {\n  NoncurrentVersionTransition.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(NoncurrentVersionTransition || (NoncurrentVersionTransition = {}));\n\nexport var Transition;\n\n(function (Transition) {\n  Transition.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Transition || (Transition = {}));\n\nexport var LifecycleRule;\n\n(function (LifecycleRule) {\n  LifecycleRule.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Filter && {\n      Filter: LifecycleRuleFilter.filterSensitiveLog(obj.Filter)\n    });\n  };\n})(LifecycleRule || (LifecycleRule = {}));\n\nexport var GetBucketLifecycleConfigurationOutput;\n\n(function (GetBucketLifecycleConfigurationOutput) {\n  GetBucketLifecycleConfigurationOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Rules && {\n      Rules: obj.Rules.map(function (item) {\n        return LifecycleRule.filterSensitiveLog(item);\n      })\n    });\n  };\n})(GetBucketLifecycleConfigurationOutput || (GetBucketLifecycleConfigurationOutput = {}));\n\nexport var GetBucketLifecycleConfigurationRequest;\n\n(function (GetBucketLifecycleConfigurationRequest) {\n  GetBucketLifecycleConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketLifecycleConfigurationRequest || (GetBucketLifecycleConfigurationRequest = {}));\n\nexport var GetBucketLocationOutput;\n\n(function (GetBucketLocationOutput) {\n  GetBucketLocationOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketLocationOutput || (GetBucketLocationOutput = {}));\n\nexport var GetBucketLocationRequest;\n\n(function (GetBucketLocationRequest) {\n  GetBucketLocationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketLocationRequest || (GetBucketLocationRequest = {}));\n\nexport var TargetGrant;\n\n(function (TargetGrant) {\n  TargetGrant.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(TargetGrant || (TargetGrant = {}));\n\nexport var LoggingEnabled;\n\n(function (LoggingEnabled) {\n  LoggingEnabled.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(LoggingEnabled || (LoggingEnabled = {}));\n\nexport var GetBucketLoggingOutput;\n\n(function (GetBucketLoggingOutput) {\n  GetBucketLoggingOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketLoggingOutput || (GetBucketLoggingOutput = {}));\n\nexport var GetBucketLoggingRequest;\n\n(function (GetBucketLoggingRequest) {\n  GetBucketLoggingRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketLoggingRequest || (GetBucketLoggingRequest = {}));\n\nexport var MetricsAndOperator;\n\n(function (MetricsAndOperator) {\n  MetricsAndOperator.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(MetricsAndOperator || (MetricsAndOperator = {}));\n\nexport var MetricsFilter;\n\n(function (MetricsFilter) {\n  MetricsFilter.visit = function (value, visitor) {\n    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);\n    if (value.Tag !== undefined) return visitor.Tag(value.Tag);\n    if (value.And !== undefined) return visitor.And(value.And);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  };\n\n  MetricsFilter.filterSensitiveLog = function (obj) {\n    var _a;\n\n    if (obj.Prefix !== undefined) return {\n      Prefix: obj.Prefix\n    };\n    if (obj.Tag !== undefined) return {\n      Tag: Tag.filterSensitiveLog(obj.Tag)\n    };\n    if (obj.And !== undefined) return {\n      And: MetricsAndOperator.filterSensitiveLog(obj.And)\n    };\n    if (obj.$unknown !== undefined) return _a = {}, _a[obj.$unknown[0]] = \"UNKNOWN\", _a;\n  };\n})(MetricsFilter || (MetricsFilter = {}));\n\nexport var MetricsConfiguration;\n\n(function (MetricsConfiguration) {\n  MetricsConfiguration.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Filter && {\n      Filter: MetricsFilter.filterSensitiveLog(obj.Filter)\n    });\n  };\n})(MetricsConfiguration || (MetricsConfiguration = {}));\n\nexport var GetBucketMetricsConfigurationOutput;\n\n(function (GetBucketMetricsConfigurationOutput) {\n  GetBucketMetricsConfigurationOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.MetricsConfiguration && {\n      MetricsConfiguration: MetricsConfiguration.filterSensitiveLog(obj.MetricsConfiguration)\n    });\n  };\n})(GetBucketMetricsConfigurationOutput || (GetBucketMetricsConfigurationOutput = {}));\n\nexport var GetBucketMetricsConfigurationRequest;\n\n(function (GetBucketMetricsConfigurationRequest) {\n  GetBucketMetricsConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketMetricsConfigurationRequest || (GetBucketMetricsConfigurationRequest = {}));\n\nexport var GetBucketNotificationConfigurationRequest;\n\n(function (GetBucketNotificationConfigurationRequest) {\n  GetBucketNotificationConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketNotificationConfigurationRequest || (GetBucketNotificationConfigurationRequest = {}));\n\nexport var FilterRule;\n\n(function (FilterRule) {\n  FilterRule.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(FilterRule || (FilterRule = {}));\n\nexport var S3KeyFilter;\n\n(function (S3KeyFilter) {\n  S3KeyFilter.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(S3KeyFilter || (S3KeyFilter = {}));\n\nexport var NotificationConfigurationFilter;\n\n(function (NotificationConfigurationFilter) {\n  NotificationConfigurationFilter.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(NotificationConfigurationFilter || (NotificationConfigurationFilter = {}));\n\nexport var LambdaFunctionConfiguration;\n\n(function (LambdaFunctionConfiguration) {\n  LambdaFunctionConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(LambdaFunctionConfiguration || (LambdaFunctionConfiguration = {}));\n\nexport var QueueConfiguration;\n\n(function (QueueConfiguration) {\n  QueueConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(QueueConfiguration || (QueueConfiguration = {}));\n\nexport var TopicConfiguration;\n\n(function (TopicConfiguration) {\n  TopicConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(TopicConfiguration || (TopicConfiguration = {}));\n\nexport var NotificationConfiguration;\n\n(function (NotificationConfiguration) {\n  NotificationConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(NotificationConfiguration || (NotificationConfiguration = {}));\n\nexport var OwnershipControlsRule;\n\n(function (OwnershipControlsRule) {\n  OwnershipControlsRule.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(OwnershipControlsRule || (OwnershipControlsRule = {}));\n\nexport var OwnershipControls;\n\n(function (OwnershipControls) {\n  OwnershipControls.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(OwnershipControls || (OwnershipControls = {}));\n\nexport var GetBucketOwnershipControlsOutput;\n\n(function (GetBucketOwnershipControlsOutput) {\n  GetBucketOwnershipControlsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketOwnershipControlsOutput || (GetBucketOwnershipControlsOutput = {}));\n\nexport var GetBucketOwnershipControlsRequest;\n\n(function (GetBucketOwnershipControlsRequest) {\n  GetBucketOwnershipControlsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketOwnershipControlsRequest || (GetBucketOwnershipControlsRequest = {}));\n\nexport var GetBucketPolicyOutput;\n\n(function (GetBucketPolicyOutput) {\n  GetBucketPolicyOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketPolicyOutput || (GetBucketPolicyOutput = {}));\n\nexport var GetBucketPolicyRequest;\n\n(function (GetBucketPolicyRequest) {\n  GetBucketPolicyRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketPolicyRequest || (GetBucketPolicyRequest = {}));\n\nexport var PolicyStatus;\n\n(function (PolicyStatus) {\n  PolicyStatus.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PolicyStatus || (PolicyStatus = {}));\n\nexport var GetBucketPolicyStatusOutput;\n\n(function (GetBucketPolicyStatusOutput) {\n  GetBucketPolicyStatusOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketPolicyStatusOutput || (GetBucketPolicyStatusOutput = {}));\n\nexport var GetBucketPolicyStatusRequest;\n\n(function (GetBucketPolicyStatusRequest) {\n  GetBucketPolicyStatusRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketPolicyStatusRequest || (GetBucketPolicyStatusRequest = {}));\n\nexport var DeleteMarkerReplication;\n\n(function (DeleteMarkerReplication) {\n  DeleteMarkerReplication.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteMarkerReplication || (DeleteMarkerReplication = {}));\n\nexport var EncryptionConfiguration;\n\n(function (EncryptionConfiguration) {\n  EncryptionConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(EncryptionConfiguration || (EncryptionConfiguration = {}));\n\nexport var ReplicationTimeValue;\n\n(function (ReplicationTimeValue) {\n  ReplicationTimeValue.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ReplicationTimeValue || (ReplicationTimeValue = {}));\n\nexport var Metrics;\n\n(function (Metrics) {\n  Metrics.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Metrics || (Metrics = {}));\n\nexport var ReplicationTime;\n\n(function (ReplicationTime) {\n  ReplicationTime.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ReplicationTime || (ReplicationTime = {}));\n\nexport var Destination;\n\n(function (Destination) {\n  Destination.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Destination || (Destination = {}));\n\nexport var ExistingObjectReplication;\n\n(function (ExistingObjectReplication) {\n  ExistingObjectReplication.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ExistingObjectReplication || (ExistingObjectReplication = {}));\n\nexport var ReplicationRuleAndOperator;\n\n(function (ReplicationRuleAndOperator) {\n  ReplicationRuleAndOperator.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ReplicationRuleAndOperator || (ReplicationRuleAndOperator = {}));\n\nexport var ReplicationRuleFilter;\n\n(function (ReplicationRuleFilter) {\n  ReplicationRuleFilter.visit = function (value, visitor) {\n    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);\n    if (value.Tag !== undefined) return visitor.Tag(value.Tag);\n    if (value.And !== undefined) return visitor.And(value.And);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  };\n\n  ReplicationRuleFilter.filterSensitiveLog = function (obj) {\n    var _a;\n\n    if (obj.Prefix !== undefined) return {\n      Prefix: obj.Prefix\n    };\n    if (obj.Tag !== undefined) return {\n      Tag: Tag.filterSensitiveLog(obj.Tag)\n    };\n    if (obj.And !== undefined) return {\n      And: ReplicationRuleAndOperator.filterSensitiveLog(obj.And)\n    };\n    if (obj.$unknown !== undefined) return _a = {}, _a[obj.$unknown[0]] = \"UNKNOWN\", _a;\n  };\n})(ReplicationRuleFilter || (ReplicationRuleFilter = {}));\n\nexport var ReplicaModifications;\n\n(function (ReplicaModifications) {\n  ReplicaModifications.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ReplicaModifications || (ReplicaModifications = {}));\n\nexport var SseKmsEncryptedObjects;\n\n(function (SseKmsEncryptedObjects) {\n  SseKmsEncryptedObjects.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(SseKmsEncryptedObjects || (SseKmsEncryptedObjects = {}));\n\nexport var SourceSelectionCriteria;\n\n(function (SourceSelectionCriteria) {\n  SourceSelectionCriteria.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(SourceSelectionCriteria || (SourceSelectionCriteria = {}));\n\nexport var ReplicationRule;\n\n(function (ReplicationRule) {\n  ReplicationRule.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Filter && {\n      Filter: ReplicationRuleFilter.filterSensitiveLog(obj.Filter)\n    });\n  };\n})(ReplicationRule || (ReplicationRule = {}));\n\nexport var ReplicationConfiguration;\n\n(function (ReplicationConfiguration) {\n  ReplicationConfiguration.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Rules && {\n      Rules: obj.Rules.map(function (item) {\n        return ReplicationRule.filterSensitiveLog(item);\n      })\n    });\n  };\n})(ReplicationConfiguration || (ReplicationConfiguration = {}));\n\nexport var GetBucketReplicationOutput;\n\n(function (GetBucketReplicationOutput) {\n  GetBucketReplicationOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.ReplicationConfiguration && {\n      ReplicationConfiguration: ReplicationConfiguration.filterSensitiveLog(obj.ReplicationConfiguration)\n    });\n  };\n})(GetBucketReplicationOutput || (GetBucketReplicationOutput = {}));\n\nexport var GetBucketReplicationRequest;\n\n(function (GetBucketReplicationRequest) {\n  GetBucketReplicationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketReplicationRequest || (GetBucketReplicationRequest = {}));\n\nexport var GetBucketRequestPaymentOutput;\n\n(function (GetBucketRequestPaymentOutput) {\n  GetBucketRequestPaymentOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketRequestPaymentOutput || (GetBucketRequestPaymentOutput = {}));\n\nexport var GetBucketRequestPaymentRequest;\n\n(function (GetBucketRequestPaymentRequest) {\n  GetBucketRequestPaymentRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketRequestPaymentRequest || (GetBucketRequestPaymentRequest = {}));\n\nexport var GetBucketTaggingOutput;\n\n(function (GetBucketTaggingOutput) {\n  GetBucketTaggingOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketTaggingOutput || (GetBucketTaggingOutput = {}));\n\nexport var GetBucketTaggingRequest;\n\n(function (GetBucketTaggingRequest) {\n  GetBucketTaggingRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketTaggingRequest || (GetBucketTaggingRequest = {}));\n\nexport var GetBucketVersioningOutput;\n\n(function (GetBucketVersioningOutput) {\n  GetBucketVersioningOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketVersioningOutput || (GetBucketVersioningOutput = {}));\n\nexport var GetBucketVersioningRequest;\n\n(function (GetBucketVersioningRequest) {\n  GetBucketVersioningRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketVersioningRequest || (GetBucketVersioningRequest = {}));\n\nexport var ErrorDocument;\n\n(function (ErrorDocument) {\n  ErrorDocument.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ErrorDocument || (ErrorDocument = {}));\n\nexport var IndexDocument;\n\n(function (IndexDocument) {\n  IndexDocument.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(IndexDocument || (IndexDocument = {}));\n\nexport var RedirectAllRequestsTo;\n\n(function (RedirectAllRequestsTo) {\n  RedirectAllRequestsTo.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(RedirectAllRequestsTo || (RedirectAllRequestsTo = {}));\n\nexport var Condition;\n\n(function (Condition) {\n  Condition.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Condition || (Condition = {}));\n\nexport var Redirect;\n\n(function (Redirect) {\n  Redirect.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Redirect || (Redirect = {}));\n\nexport var RoutingRule;\n\n(function (RoutingRule) {\n  RoutingRule.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(RoutingRule || (RoutingRule = {}));\n\nexport var GetBucketWebsiteOutput;\n\n(function (GetBucketWebsiteOutput) {\n  GetBucketWebsiteOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketWebsiteOutput || (GetBucketWebsiteOutput = {}));\n\nexport var GetBucketWebsiteRequest;\n\n(function (GetBucketWebsiteRequest) {\n  GetBucketWebsiteRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketWebsiteRequest || (GetBucketWebsiteRequest = {}));\n\nexport var GetObjectOutput;\n\n(function (GetObjectOutput) {\n  GetObjectOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.SSEKMSKeyId && {\n      SSEKMSKeyId: SENSITIVE_STRING\n    });\n  };\n})(GetObjectOutput || (GetObjectOutput = {}));\n\nexport var GetObjectRequest;\n\n(function (GetObjectRequest) {\n  GetObjectRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.SSECustomerKey && {\n      SSECustomerKey: SENSITIVE_STRING\n    });\n  };\n})(GetObjectRequest || (GetObjectRequest = {}));\n\nexport var InvalidObjectState;\n\n(function (InvalidObjectState) {\n  InvalidObjectState.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(InvalidObjectState || (InvalidObjectState = {}));\n\nexport var NoSuchKey;\n\n(function (NoSuchKey) {\n  NoSuchKey.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(NoSuchKey || (NoSuchKey = {}));\n\nexport var GetObjectAclOutput;\n\n(function (GetObjectAclOutput) {\n  GetObjectAclOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectAclOutput || (GetObjectAclOutput = {}));\n\nexport var GetObjectAclRequest;\n\n(function (GetObjectAclRequest) {\n  GetObjectAclRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectAclRequest || (GetObjectAclRequest = {}));\n\nexport var ObjectLockLegalHold;\n\n(function (ObjectLockLegalHold) {\n  ObjectLockLegalHold.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ObjectLockLegalHold || (ObjectLockLegalHold = {}));\n\nexport var GetObjectLegalHoldOutput;\n\n(function (GetObjectLegalHoldOutput) {\n  GetObjectLegalHoldOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectLegalHoldOutput || (GetObjectLegalHoldOutput = {}));\n\nexport var GetObjectLegalHoldRequest;\n\n(function (GetObjectLegalHoldRequest) {\n  GetObjectLegalHoldRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectLegalHoldRequest || (GetObjectLegalHoldRequest = {}));\n\nexport var DefaultRetention;\n\n(function (DefaultRetention) {\n  DefaultRetention.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DefaultRetention || (DefaultRetention = {}));\n\nexport var ObjectLockRule;\n\n(function (ObjectLockRule) {\n  ObjectLockRule.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ObjectLockRule || (ObjectLockRule = {}));\n\nexport var ObjectLockConfiguration;\n\n(function (ObjectLockConfiguration) {\n  ObjectLockConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ObjectLockConfiguration || (ObjectLockConfiguration = {}));\n\nexport var GetObjectLockConfigurationOutput;\n\n(function (GetObjectLockConfigurationOutput) {\n  GetObjectLockConfigurationOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectLockConfigurationOutput || (GetObjectLockConfigurationOutput = {}));\n\nexport var GetObjectLockConfigurationRequest;\n\n(function (GetObjectLockConfigurationRequest) {\n  GetObjectLockConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectLockConfigurationRequest || (GetObjectLockConfigurationRequest = {}));\n\nexport var ObjectLockRetention;\n\n(function (ObjectLockRetention) {\n  ObjectLockRetention.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ObjectLockRetention || (ObjectLockRetention = {}));\n\nexport var GetObjectRetentionOutput;\n\n(function (GetObjectRetentionOutput) {\n  GetObjectRetentionOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectRetentionOutput || (GetObjectRetentionOutput = {}));\n\nexport var GetObjectRetentionRequest;\n\n(function (GetObjectRetentionRequest) {\n  GetObjectRetentionRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectRetentionRequest || (GetObjectRetentionRequest = {}));\n\nexport var GetObjectTaggingOutput;\n\n(function (GetObjectTaggingOutput) {\n  GetObjectTaggingOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectTaggingOutput || (GetObjectTaggingOutput = {}));\n\nexport var GetObjectTaggingRequest;\n\n(function (GetObjectTaggingRequest) {\n  GetObjectTaggingRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectTaggingRequest || (GetObjectTaggingRequest = {}));\n\nexport var GetObjectTorrentOutput;\n\n(function (GetObjectTorrentOutput) {\n  GetObjectTorrentOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectTorrentOutput || (GetObjectTorrentOutput = {}));\n\nexport var GetObjectTorrentRequest;\n\n(function (GetObjectTorrentRequest) {\n  GetObjectTorrentRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectTorrentRequest || (GetObjectTorrentRequest = {}));\n\nexport var PublicAccessBlockConfiguration;\n\n(function (PublicAccessBlockConfiguration) {\n  PublicAccessBlockConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PublicAccessBlockConfiguration || (PublicAccessBlockConfiguration = {}));\n\nexport var GetPublicAccessBlockOutput;\n\n(function (GetPublicAccessBlockOutput) {\n  GetPublicAccessBlockOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetPublicAccessBlockOutput || (GetPublicAccessBlockOutput = {}));\n\nexport var GetPublicAccessBlockRequest;\n\n(function (GetPublicAccessBlockRequest) {\n  GetPublicAccessBlockRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetPublicAccessBlockRequest || (GetPublicAccessBlockRequest = {}));\n\nexport var HeadBucketRequest;\n\n(function (HeadBucketRequest) {\n  HeadBucketRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(HeadBucketRequest || (HeadBucketRequest = {}));\n\nexport var NoSuchBucket;\n\n(function (NoSuchBucket) {\n  NoSuchBucket.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(NoSuchBucket || (NoSuchBucket = {}));\n\nexport var HeadObjectOutput;\n\n(function (HeadObjectOutput) {\n  HeadObjectOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.SSEKMSKeyId && {\n      SSEKMSKeyId: SENSITIVE_STRING\n    });\n  };\n})(HeadObjectOutput || (HeadObjectOutput = {}));\n\nexport var HeadObjectRequest;\n\n(function (HeadObjectRequest) {\n  HeadObjectRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.SSECustomerKey && {\n      SSECustomerKey: SENSITIVE_STRING\n    });\n  };\n})(HeadObjectRequest || (HeadObjectRequest = {}));\n\nexport var ListBucketAnalyticsConfigurationsOutput;\n\n(function (ListBucketAnalyticsConfigurationsOutput) {\n  ListBucketAnalyticsConfigurationsOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.AnalyticsConfigurationList && {\n      AnalyticsConfigurationList: obj.AnalyticsConfigurationList.map(function (item) {\n        return AnalyticsConfiguration.filterSensitiveLog(item);\n      })\n    });\n  };\n})(ListBucketAnalyticsConfigurationsOutput || (ListBucketAnalyticsConfigurationsOutput = {}));\n\nexport var ListBucketAnalyticsConfigurationsRequest;\n\n(function (ListBucketAnalyticsConfigurationsRequest) {\n  ListBucketAnalyticsConfigurationsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListBucketAnalyticsConfigurationsRequest || (ListBucketAnalyticsConfigurationsRequest = {}));\n\nexport var ListBucketIntelligentTieringConfigurationsOutput;\n\n(function (ListBucketIntelligentTieringConfigurationsOutput) {\n  ListBucketIntelligentTieringConfigurationsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListBucketIntelligentTieringConfigurationsOutput || (ListBucketIntelligentTieringConfigurationsOutput = {}));\n\nexport var ListBucketIntelligentTieringConfigurationsRequest;\n\n(function (ListBucketIntelligentTieringConfigurationsRequest) {\n  ListBucketIntelligentTieringConfigurationsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListBucketIntelligentTieringConfigurationsRequest || (ListBucketIntelligentTieringConfigurationsRequest = {}));\n\nexport var ListBucketInventoryConfigurationsOutput;\n\n(function (ListBucketInventoryConfigurationsOutput) {\n  ListBucketInventoryConfigurationsOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.InventoryConfigurationList && {\n      InventoryConfigurationList: obj.InventoryConfigurationList.map(function (item) {\n        return InventoryConfiguration.filterSensitiveLog(item);\n      })\n    });\n  };\n})(ListBucketInventoryConfigurationsOutput || (ListBucketInventoryConfigurationsOutput = {}));\n\nexport var ListBucketInventoryConfigurationsRequest;\n\n(function (ListBucketInventoryConfigurationsRequest) {\n  ListBucketInventoryConfigurationsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListBucketInventoryConfigurationsRequest || (ListBucketInventoryConfigurationsRequest = {}));\n\nexport var ListBucketMetricsConfigurationsOutput;\n\n(function (ListBucketMetricsConfigurationsOutput) {\n  ListBucketMetricsConfigurationsOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.MetricsConfigurationList && {\n      MetricsConfigurationList: obj.MetricsConfigurationList.map(function (item) {\n        return MetricsConfiguration.filterSensitiveLog(item);\n      })\n    });\n  };\n})(ListBucketMetricsConfigurationsOutput || (ListBucketMetricsConfigurationsOutput = {}));\n\nexport var ListBucketMetricsConfigurationsRequest;\n\n(function (ListBucketMetricsConfigurationsRequest) {\n  ListBucketMetricsConfigurationsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListBucketMetricsConfigurationsRequest || (ListBucketMetricsConfigurationsRequest = {}));\n\nexport var Bucket;\n\n(function (Bucket) {\n  Bucket.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Bucket || (Bucket = {}));\n\nexport var ListBucketsOutput;\n\n(function (ListBucketsOutput) {\n  ListBucketsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListBucketsOutput || (ListBucketsOutput = {}));\n\nexport var CommonPrefix;\n\n(function (CommonPrefix) {\n  CommonPrefix.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CommonPrefix || (CommonPrefix = {}));\n\nexport var Initiator;\n\n(function (Initiator) {\n  Initiator.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Initiator || (Initiator = {}));\n\nexport var MultipartUpload;\n\n(function (MultipartUpload) {\n  MultipartUpload.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(MultipartUpload || (MultipartUpload = {}));\n\nexport var ListMultipartUploadsOutput;\n\n(function (ListMultipartUploadsOutput) {\n  ListMultipartUploadsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListMultipartUploadsOutput || (ListMultipartUploadsOutput = {}));\n\nexport var ListMultipartUploadsRequest;\n\n(function (ListMultipartUploadsRequest) {\n  ListMultipartUploadsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListMultipartUploadsRequest || (ListMultipartUploadsRequest = {}));\n\nexport var _Object;\n\n(function (_Object) {\n  _Object.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(_Object || (_Object = {}));\n\nexport var ListObjectsOutput;\n\n(function (ListObjectsOutput) {\n  ListObjectsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListObjectsOutput || (ListObjectsOutput = {}));\n\nexport var ListObjectsRequest;\n\n(function (ListObjectsRequest) {\n  ListObjectsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListObjectsRequest || (ListObjectsRequest = {}));\n\nexport var ListObjectsV2Output;\n\n(function (ListObjectsV2Output) {\n  ListObjectsV2Output.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListObjectsV2Output || (ListObjectsV2Output = {}));\n\nexport var ListObjectsV2Request;\n\n(function (ListObjectsV2Request) {\n  ListObjectsV2Request.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListObjectsV2Request || (ListObjectsV2Request = {}));\n\nexport var DeleteMarkerEntry;\n\n(function (DeleteMarkerEntry) {\n  DeleteMarkerEntry.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteMarkerEntry || (DeleteMarkerEntry = {}));\n\nexport var ObjectVersion;\n\n(function (ObjectVersion) {\n  ObjectVersion.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ObjectVersion || (ObjectVersion = {}));\n\nexport var ListObjectVersionsOutput;\n\n(function (ListObjectVersionsOutput) {\n  ListObjectVersionsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListObjectVersionsOutput || (ListObjectVersionsOutput = {}));\n\nexport var ListObjectVersionsRequest;\n\n(function (ListObjectVersionsRequest) {\n  ListObjectVersionsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListObjectVersionsRequest || (ListObjectVersionsRequest = {}));\n\nexport var Part;\n\n(function (Part) {\n  Part.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Part || (Part = {}));\n\nexport var ListPartsOutput;\n\n(function (ListPartsOutput) {\n  ListPartsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListPartsOutput || (ListPartsOutput = {}));\n\nexport var ListPartsRequest;\n\n(function (ListPartsRequest) {\n  ListPartsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListPartsRequest || (ListPartsRequest = {}));\n\nexport var PutBucketAccelerateConfigurationRequest;\n\n(function (PutBucketAccelerateConfigurationRequest) {\n  PutBucketAccelerateConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketAccelerateConfigurationRequest || (PutBucketAccelerateConfigurationRequest = {}));\n\nexport var PutBucketAclRequest;\n\n(function (PutBucketAclRequest) {\n  PutBucketAclRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketAclRequest || (PutBucketAclRequest = {}));\n\nexport var PutBucketAnalyticsConfigurationRequest;\n\n(function (PutBucketAnalyticsConfigurationRequest) {\n  PutBucketAnalyticsConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.AnalyticsConfiguration && {\n      AnalyticsConfiguration: AnalyticsConfiguration.filterSensitiveLog(obj.AnalyticsConfiguration)\n    });\n  };\n})(PutBucketAnalyticsConfigurationRequest || (PutBucketAnalyticsConfigurationRequest = {}));\n\nexport var CORSConfiguration;\n\n(function (CORSConfiguration) {\n  CORSConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CORSConfiguration || (CORSConfiguration = {}));\n\nexport var PutBucketCorsRequest;\n\n(function (PutBucketCorsRequest) {\n  PutBucketCorsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketCorsRequest || (PutBucketCorsRequest = {}));\n\nexport var PutBucketEncryptionRequest;\n\n(function (PutBucketEncryptionRequest) {\n  PutBucketEncryptionRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.ServerSideEncryptionConfiguration && {\n      ServerSideEncryptionConfiguration: ServerSideEncryptionConfiguration.filterSensitiveLog(obj.ServerSideEncryptionConfiguration)\n    });\n  };\n})(PutBucketEncryptionRequest || (PutBucketEncryptionRequest = {}));\n\nexport var PutBucketIntelligentTieringConfigurationRequest;\n\n(function (PutBucketIntelligentTieringConfigurationRequest) {\n  PutBucketIntelligentTieringConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketIntelligentTieringConfigurationRequest || (PutBucketIntelligentTieringConfigurationRequest = {}));\n\nexport var PutBucketInventoryConfigurationRequest;\n\n(function (PutBucketInventoryConfigurationRequest) {\n  PutBucketInventoryConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.InventoryConfiguration && {\n      InventoryConfiguration: InventoryConfiguration.filterSensitiveLog(obj.InventoryConfiguration)\n    });\n  };\n})(PutBucketInventoryConfigurationRequest || (PutBucketInventoryConfigurationRequest = {}));\n\nexport var BucketLifecycleConfiguration;\n\n(function (BucketLifecycleConfiguration) {\n  BucketLifecycleConfiguration.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Rules && {\n      Rules: obj.Rules.map(function (item) {\n        return LifecycleRule.filterSensitiveLog(item);\n      })\n    });\n  };\n})(BucketLifecycleConfiguration || (BucketLifecycleConfiguration = {}));\n\nexport var PutBucketLifecycleConfigurationRequest;\n\n(function (PutBucketLifecycleConfigurationRequest) {\n  PutBucketLifecycleConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.LifecycleConfiguration && {\n      LifecycleConfiguration: BucketLifecycleConfiguration.filterSensitiveLog(obj.LifecycleConfiguration)\n    });\n  };\n})(PutBucketLifecycleConfigurationRequest || (PutBucketLifecycleConfigurationRequest = {}));\n\nexport var BucketLoggingStatus;\n\n(function (BucketLoggingStatus) {\n  BucketLoggingStatus.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(BucketLoggingStatus || (BucketLoggingStatus = {}));\n\nexport var PutBucketLoggingRequest;\n\n(function (PutBucketLoggingRequest) {\n  PutBucketLoggingRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketLoggingRequest || (PutBucketLoggingRequest = {}));\n\nexport var PutBucketMetricsConfigurationRequest;\n\n(function (PutBucketMetricsConfigurationRequest) {\n  PutBucketMetricsConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.MetricsConfiguration && {\n      MetricsConfiguration: MetricsConfiguration.filterSensitiveLog(obj.MetricsConfiguration)\n    });\n  };\n})(PutBucketMetricsConfigurationRequest || (PutBucketMetricsConfigurationRequest = {}));\n\nexport var PutBucketNotificationConfigurationRequest;\n\n(function (PutBucketNotificationConfigurationRequest) {\n  PutBucketNotificationConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketNotificationConfigurationRequest || (PutBucketNotificationConfigurationRequest = {}));\n\nexport var PutBucketOwnershipControlsRequest;\n\n(function (PutBucketOwnershipControlsRequest) {\n  PutBucketOwnershipControlsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketOwnershipControlsRequest || (PutBucketOwnershipControlsRequest = {}));\n\nexport var PutBucketPolicyRequest;\n\n(function (PutBucketPolicyRequest) {\n  PutBucketPolicyRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketPolicyRequest || (PutBucketPolicyRequest = {}));\n\nexport var PutBucketReplicationRequest;\n\n(function (PutBucketReplicationRequest) {\n  PutBucketReplicationRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.ReplicationConfiguration && {\n      ReplicationConfiguration: ReplicationConfiguration.filterSensitiveLog(obj.ReplicationConfiguration)\n    });\n  };\n})(PutBucketReplicationRequest || (PutBucketReplicationRequest = {}));\n\nexport var RequestPaymentConfiguration;\n\n(function (RequestPaymentConfiguration) {\n  RequestPaymentConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(RequestPaymentConfiguration || (RequestPaymentConfiguration = {}));\n\nexport var PutBucketRequestPaymentRequest;\n\n(function (PutBucketRequestPaymentRequest) {\n  PutBucketRequestPaymentRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketRequestPaymentRequest || (PutBucketRequestPaymentRequest = {}));\n\nexport var Tagging;\n\n(function (Tagging) {\n  Tagging.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Tagging || (Tagging = {}));\n\nexport var PutBucketTaggingRequest;\n\n(function (PutBucketTaggingRequest) {\n  PutBucketTaggingRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketTaggingRequest || (PutBucketTaggingRequest = {}));\n\nexport var VersioningConfiguration;\n\n(function (VersioningConfiguration) {\n  VersioningConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(VersioningConfiguration || (VersioningConfiguration = {}));\n\nexport var PutBucketVersioningRequest;\n\n(function (PutBucketVersioningRequest) {\n  PutBucketVersioningRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketVersioningRequest || (PutBucketVersioningRequest = {}));\n\nexport var WebsiteConfiguration;\n\n(function (WebsiteConfiguration) {\n  WebsiteConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(WebsiteConfiguration || (WebsiteConfiguration = {}));\n\nexport var PutBucketWebsiteRequest;\n\n(function (PutBucketWebsiteRequest) {\n  PutBucketWebsiteRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketWebsiteRequest || (PutBucketWebsiteRequest = {}));\n\nexport var PutObjectOutput;\n\n(function (PutObjectOutput) {\n  PutObjectOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign(__assign({}, obj), obj.SSEKMSKeyId && {\n      SSEKMSKeyId: SENSITIVE_STRING\n    }), obj.SSEKMSEncryptionContext && {\n      SSEKMSEncryptionContext: SENSITIVE_STRING\n    });\n  };\n})(PutObjectOutput || (PutObjectOutput = {}));\n\nexport var PutObjectRequest;\n\n(function (PutObjectRequest) {\n  PutObjectRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign(__assign(__assign({}, obj), obj.SSECustomerKey && {\n      SSECustomerKey: SENSITIVE_STRING\n    }), obj.SSEKMSKeyId && {\n      SSEKMSKeyId: SENSITIVE_STRING\n    }), obj.SSEKMSEncryptionContext && {\n      SSEKMSEncryptionContext: SENSITIVE_STRING\n    });\n  };\n})(PutObjectRequest || (PutObjectRequest = {}));\n\nexport var PutObjectAclOutput;\n\n(function (PutObjectAclOutput) {\n  PutObjectAclOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutObjectAclOutput || (PutObjectAclOutput = {}));\n\nexport var PutObjectAclRequest;\n\n(function (PutObjectAclRequest) {\n  PutObjectAclRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutObjectAclRequest || (PutObjectAclRequest = {}));\n\nexport var PutObjectLegalHoldOutput;\n\n(function (PutObjectLegalHoldOutput) {\n  PutObjectLegalHoldOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutObjectLegalHoldOutput || (PutObjectLegalHoldOutput = {}));\n\nexport var PutObjectLegalHoldRequest;\n\n(function (PutObjectLegalHoldRequest) {\n  PutObjectLegalHoldRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutObjectLegalHoldRequest || (PutObjectLegalHoldRequest = {}));\n\nexport var PutObjectLockConfigurationOutput;\n\n(function (PutObjectLockConfigurationOutput) {\n  PutObjectLockConfigurationOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutObjectLockConfigurationOutput || (PutObjectLockConfigurationOutput = {}));\n\nexport var PutObjectLockConfigurationRequest;\n\n(function (PutObjectLockConfigurationRequest) {\n  PutObjectLockConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutObjectLockConfigurationRequest || (PutObjectLockConfigurationRequest = {}));\n\nexport var PutObjectRetentionOutput;\n\n(function (PutObjectRetentionOutput) {\n  PutObjectRetentionOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutObjectRetentionOutput || (PutObjectRetentionOutput = {}));\n\nexport var PutObjectRetentionRequest;\n\n(function (PutObjectRetentionRequest) {\n  PutObjectRetentionRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutObjectRetentionRequest || (PutObjectRetentionRequest = {}));\n\nexport var PutObjectTaggingOutput;\n\n(function (PutObjectTaggingOutput) {\n  PutObjectTaggingOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutObjectTaggingOutput || (PutObjectTaggingOutput = {}));\n\nexport var PutObjectTaggingRequest;\n\n(function (PutObjectTaggingRequest) {\n  PutObjectTaggingRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutObjectTaggingRequest || (PutObjectTaggingRequest = {}));\n\nexport var PutPublicAccessBlockRequest;\n\n(function (PutPublicAccessBlockRequest) {\n  PutPublicAccessBlockRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutPublicAccessBlockRequest || (PutPublicAccessBlockRequest = {}));\n\nexport var ObjectAlreadyInActiveTierError;\n\n(function (ObjectAlreadyInActiveTierError) {\n  ObjectAlreadyInActiveTierError.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ObjectAlreadyInActiveTierError || (ObjectAlreadyInActiveTierError = {}));\n\nexport var RestoreObjectOutput;\n\n(function (RestoreObjectOutput) {\n  RestoreObjectOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(RestoreObjectOutput || (RestoreObjectOutput = {}));\n\nexport var GlacierJobParameters;\n\n(function (GlacierJobParameters) {\n  GlacierJobParameters.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GlacierJobParameters || (GlacierJobParameters = {}));\n\nexport var Encryption;\n\n(function (Encryption) {\n  Encryption.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.KMSKeyId && {\n      KMSKeyId: SENSITIVE_STRING\n    });\n  };\n})(Encryption || (Encryption = {}));","import { __values } from \"tslib\";\nimport { escapeAttribute } from \"./escape-attribute\";\n/**\n * Represents an XML node.\n */\n\nvar XmlNode =\n/** @class */\nfunction () {\n  function XmlNode(name, children) {\n    if (children === void 0) {\n      children = [];\n    }\n\n    this.name = name;\n    this.children = children;\n    this.attributes = {};\n  }\n\n  XmlNode.prototype.withName = function (name) {\n    this.name = name;\n    return this;\n  };\n\n  XmlNode.prototype.addAttribute = function (name, value) {\n    this.attributes[name] = value;\n    return this;\n  };\n\n  XmlNode.prototype.addChildNode = function (child) {\n    this.children.push(child);\n    return this;\n  };\n\n  XmlNode.prototype.removeAttribute = function (name) {\n    delete this.attributes[name];\n    return this;\n  };\n\n  XmlNode.prototype.toString = function () {\n    var e_1, _a;\n\n    var hasChildren = Boolean(this.children.length);\n    var xmlText = \"<\" + this.name; // add attributes\n\n    var attributes = this.attributes;\n\n    try {\n      for (var _b = __values(Object.keys(attributes)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var attributeName = _c.value;\n        var attribute = attributes[attributeName];\n\n        if (typeof attribute !== \"undefined\" && attribute !== null) {\n          xmlText += \" \" + attributeName + \"=\\\"\" + escapeAttribute(\"\" + attribute) + \"\\\"\";\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return xmlText += !hasChildren ? \"/>\" : \">\" + this.children.map(function (c) {\n      return c.toString();\n    }).join(\"\") + \"</\" + this.name + \">\";\n  };\n\n  return XmlNode;\n}();\n\nexport { XmlNode };","/**\n * Escapes characters that can not be in an XML attribute.\n */\nexport function escapeAttribute(value) {\n  return value.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\");\n}","import { escapeElement } from \"./escape-element\";\n/**\n * Represents an XML text value.\n */\n\nvar XmlText =\n/** @class */\nfunction () {\n  function XmlText(value) {\n    this.value = value;\n  }\n\n  XmlText.prototype.toString = function () {\n    return escapeElement(\"\" + this.value);\n  };\n\n  return XmlText;\n}();\n\nexport { XmlText };","/**\n * Escapes characters that can not be in an XML element.\n */\nexport function escapeElement(value) {\n  return value.replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\");\n}","import { __assign, __awaiter, __generator } from \"tslib\";\nimport { AnalyticsFilter, LifecycleRuleFilter, MetricsFilter, ReplicationRuleFilter } from \"../models/models_0\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { dateToUtcString as __dateToUtcString, extendedEncodeURIComponent as __extendedEncodeURIComponent, getArrayIfSingleItem as __getArrayIfSingleItem, getValueFromTextNode as __getValueFromTextNode } from \"@aws-sdk/smithy-client\";\nimport { XmlNode as __XmlNode, XmlText as __XmlText } from \"@aws-sdk/xml-builder\";\nimport { parse as xmlParse } from \"fast-xml-parser\";\nexport var serializeAws_restXmlAbortMultipartUploadCommand = function serializeAws_restXmlAbortMultipartUploadCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"x-id\": \"AbortMultipartUpload\"\n          }, input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCompleteMultipartUploadCommand = function serializeAws_restXmlCompleteMultipartUploadCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({}, input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n\n          if (input.MultipartUpload !== undefined) {\n            contents = serializeAws_restXmlCompletedMultipartUpload(input.MultipartUpload, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCopyObjectCommand = function serializeAws_restXmlCopyObjectCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.CacheControl) && {\n            \"cache-control\": input.CacheControl\n          }), isSerializableHeaderValue(input.ContentDisposition) && {\n            \"content-disposition\": input.ContentDisposition\n          }), isSerializableHeaderValue(input.ContentEncoding) && {\n            \"content-encoding\": input.ContentEncoding\n          }), isSerializableHeaderValue(input.ContentLanguage) && {\n            \"content-language\": input.ContentLanguage\n          }), isSerializableHeaderValue(input.ContentType) && {\n            \"content-type\": input.ContentType\n          }), isSerializableHeaderValue(input.CopySource) && {\n            \"x-amz-copy-source\": input.CopySource\n          }), isSerializableHeaderValue(input.CopySourceIfMatch) && {\n            \"x-amz-copy-source-if-match\": input.CopySourceIfMatch\n          }), isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\n            \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\n            \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch\n          }), isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\n            \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.Expires) && {\n            expires: __dateToUtcString(input.Expires).toString()\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.MetadataDirective) && {\n            \"x-amz-metadata-directive\": input.MetadataDirective\n          }), isSerializableHeaderValue(input.TaggingDirective) && {\n            \"x-amz-tagging-directive\": input.TaggingDirective\n          }), isSerializableHeaderValue(input.ServerSideEncryption) && {\n            \"x-amz-server-side-encryption\": input.ServerSideEncryption\n          }), isSerializableHeaderValue(input.StorageClass) && {\n            \"x-amz-storage-class\": input.StorageClass\n          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n            \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {\n            \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId\n          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n            \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext\n          }), isSerializableHeaderValue(input.BucketKeyEnabled) && {\n            \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString()\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\n            \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Tagging) && {\n            \"x-amz-tagging\": input.Tagging\n          }), isSerializableHeaderValue(input.ObjectLockMode) && {\n            \"x-amz-object-lock-mode\": input.ObjectLockMode\n          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n            \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n            \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {\n            \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner\n          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {\n            var _a;\n\n            return __assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\" + suffix.toLowerCase()] = input.Metadata[suffix], _a));\n          }, {}));\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            \"x-id\": \"CopyObject\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCreateBucketCommand = function serializeAws_restXmlCreateBucketCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWrite) && {\n            \"x-amz-grant-write\": input.GrantWrite\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ObjectLockEnabledForBucket) && {\n            \"x-amz-bucket-object-lock-enabled\": input.ObjectLockEnabledForBucket.toString()\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.CreateBucketConfiguration !== undefined) {\n            contents = serializeAws_restXmlCreateBucketConfiguration(input.CreateBucketConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlCreateMultipartUploadCommand = function serializeAws_restXmlCreateMultipartUploadCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.CacheControl) && {\n            \"cache-control\": input.CacheControl\n          }), isSerializableHeaderValue(input.ContentDisposition) && {\n            \"content-disposition\": input.ContentDisposition\n          }), isSerializableHeaderValue(input.ContentEncoding) && {\n            \"content-encoding\": input.ContentEncoding\n          }), isSerializableHeaderValue(input.ContentLanguage) && {\n            \"content-language\": input.ContentLanguage\n          }), isSerializableHeaderValue(input.ContentType) && {\n            \"content-type\": input.ContentType\n          }), isSerializableHeaderValue(input.Expires) && {\n            expires: __dateToUtcString(input.Expires).toString()\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ServerSideEncryption) && {\n            \"x-amz-server-side-encryption\": input.ServerSideEncryption\n          }), isSerializableHeaderValue(input.StorageClass) && {\n            \"x-amz-storage-class\": input.StorageClass\n          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n            \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {\n            \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId\n          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n            \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext\n          }), isSerializableHeaderValue(input.BucketKeyEnabled) && {\n            \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString()\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Tagging) && {\n            \"x-amz-tagging\": input.Tagging\n          }), isSerializableHeaderValue(input.ObjectLockMode) && {\n            \"x-amz-object-lock-mode\": input.ObjectLockMode\n          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n            \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n            \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {\n            var _a;\n\n            return __assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\" + suffix.toLowerCase()] = input.Metadata[suffix], _a));\n          }, {}));\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            uploads: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketCommand = function serializeAws_restXmlDeleteBucketCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function serializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            analytics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketCorsCommand = function serializeAws_restXmlDeleteBucketCorsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            cors: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketEncryptionCommand = function serializeAws_restXmlDeleteBucketEncryptionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            encryption: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand = function serializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            \"intelligent-tiering\": \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function serializeAws_restXmlDeleteBucketInventoryConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            inventory: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketLifecycleCommand = function serializeAws_restXmlDeleteBucketLifecycleCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            lifecycle: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function serializeAws_restXmlDeleteBucketMetricsConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            metrics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketOwnershipControlsCommand = function serializeAws_restXmlDeleteBucketOwnershipControlsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            ownershipControls: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketPolicyCommand = function serializeAws_restXmlDeleteBucketPolicyCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            policy: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketReplicationCommand = function serializeAws_restXmlDeleteBucketReplicationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            replication: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketTaggingCommand = function serializeAws_restXmlDeleteBucketTaggingCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            tagging: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteBucketWebsiteCommand = function serializeAws_restXmlDeleteBucketWebsiteCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            website: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteObjectCommand = function serializeAws_restXmlDeleteObjectCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.MFA) && {\n            \"x-amz-mfa\": input.MFA\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n            \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString()\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"x-id\": \"DeleteObject\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteObjectsCommand = function serializeAws_restXmlDeleteObjectsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.MFA) && {\n            \"x-amz-mfa\": input.MFA\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n            \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString()\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            delete: \"\"\n          };\n\n          if (input.Delete !== undefined) {\n            contents = serializeAws_restXmlDelete(input.Delete, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeleteObjectTaggingCommand = function serializeAws_restXmlDeleteObjectTaggingCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            tagging: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlDeletePublicAccessBlockCommand = function serializeAws_restXmlDeletePublicAccessBlockCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            publicAccessBlock: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketAccelerateConfigurationCommand = function serializeAws_restXmlGetBucketAccelerateConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            accelerate: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketAclCommand = function serializeAws_restXmlGetBucketAclCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            acl: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function serializeAws_restXmlGetBucketAnalyticsConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            analytics: \"\",\n            \"x-id\": \"GetBucketAnalyticsConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketCorsCommand = function serializeAws_restXmlGetBucketCorsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            cors: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketEncryptionCommand = function serializeAws_restXmlGetBucketEncryptionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            encryption: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand = function serializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            \"intelligent-tiering\": \"\",\n            \"x-id\": \"GetBucketIntelligentTieringConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketInventoryConfigurationCommand = function serializeAws_restXmlGetBucketInventoryConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            inventory: \"\",\n            \"x-id\": \"GetBucketInventoryConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketLifecycleConfigurationCommand = function serializeAws_restXmlGetBucketLifecycleConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            lifecycle: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketLocationCommand = function serializeAws_restXmlGetBucketLocationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            location: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketLoggingCommand = function serializeAws_restXmlGetBucketLoggingCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            logging: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketMetricsConfigurationCommand = function serializeAws_restXmlGetBucketMetricsConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            metrics: \"\",\n            \"x-id\": \"GetBucketMetricsConfiguration\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketNotificationConfigurationCommand = function serializeAws_restXmlGetBucketNotificationConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            notification: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketOwnershipControlsCommand = function serializeAws_restXmlGetBucketOwnershipControlsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            ownershipControls: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketPolicyCommand = function serializeAws_restXmlGetBucketPolicyCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            policy: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketPolicyStatusCommand = function serializeAws_restXmlGetBucketPolicyStatusCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            policyStatus: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketReplicationCommand = function serializeAws_restXmlGetBucketReplicationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            replication: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketRequestPaymentCommand = function serializeAws_restXmlGetBucketRequestPaymentCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            requestPayment: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketTaggingCommand = function serializeAws_restXmlGetBucketTaggingCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            tagging: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketVersioningCommand = function serializeAws_restXmlGetBucketVersioningCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            versioning: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetBucketWebsiteCommand = function serializeAws_restXmlGetBucketWebsiteCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            website: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectCommand = function serializeAws_restXmlGetObjectCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.IfMatch) && {\n            \"if-match\": input.IfMatch\n          }), isSerializableHeaderValue(input.IfModifiedSince) && {\n            \"if-modified-since\": __dateToUtcString(input.IfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.IfNoneMatch) && {\n            \"if-none-match\": input.IfNoneMatch\n          }), isSerializableHeaderValue(input.IfUnmodifiedSince) && {\n            \"if-unmodified-since\": __dateToUtcString(input.IfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.Range) && {\n            range: input.Range\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"x-id\": \"GetObject\"\n          }, input.ResponseCacheControl !== undefined && {\n            \"response-cache-control\": input.ResponseCacheControl\n          }), input.ResponseContentDisposition !== undefined && {\n            \"response-content-disposition\": input.ResponseContentDisposition\n          }), input.ResponseContentEncoding !== undefined && {\n            \"response-content-encoding\": input.ResponseContentEncoding\n          }), input.ResponseContentLanguage !== undefined && {\n            \"response-content-language\": input.ResponseContentLanguage\n          }), input.ResponseContentType !== undefined && {\n            \"response-content-type\": input.ResponseContentType\n          }), input.ResponseExpires !== undefined && {\n            \"response-expires\": (input.ResponseExpires.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), input.VersionId !== undefined && {\n            versionId: input.VersionId\n          }), input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectAclCommand = function serializeAws_restXmlGetObjectAclCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            acl: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectLegalHoldCommand = function serializeAws_restXmlGetObjectLegalHoldCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"legal-hold\": \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectLockConfigurationCommand = function serializeAws_restXmlGetObjectLockConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            \"object-lock\": \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectRetentionCommand = function serializeAws_restXmlGetObjectRetentionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            retention: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectTaggingCommand = function serializeAws_restXmlGetObjectTaggingCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            tagging: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetObjectTorrentCommand = function serializeAws_restXmlGetObjectTorrentCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            torrent: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlGetPublicAccessBlockCommand = function serializeAws_restXmlGetPublicAccessBlockCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            publicAccessBlock: \"\"\n          };\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlHeadBucketCommand = function serializeAws_restXmlHeadBucketCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"HEAD\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlHeadObjectCommand = function serializeAws_restXmlHeadObjectCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.IfMatch) && {\n            \"if-match\": input.IfMatch\n          }), isSerializableHeaderValue(input.IfModifiedSince) && {\n            \"if-modified-since\": __dateToUtcString(input.IfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.IfNoneMatch) && {\n            \"if-none-match\": input.IfNoneMatch\n          }), isSerializableHeaderValue(input.IfUnmodifiedSince) && {\n            \"if-unmodified-since\": __dateToUtcString(input.IfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.Range) && {\n            range: input.Range\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign({}, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          }), input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"HEAD\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function serializeAws_restXmlListBucketAnalyticsConfigurationsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            analytics: \"\",\n            \"x-id\": \"ListBucketAnalyticsConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand = function serializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            \"intelligent-tiering\": \"\",\n            \"x-id\": \"ListBucketIntelligentTieringConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketInventoryConfigurationsCommand = function serializeAws_restXmlListBucketInventoryConfigurationsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            inventory: \"\",\n            \"x-id\": \"ListBucketInventoryConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketMetricsConfigurationsCommand = function serializeAws_restXmlListBucketMetricsConfigurationsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            metrics: \"\",\n            \"x-id\": \"ListBucketMetricsConfigurations\"\n          }, input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListBucketsCommand = function serializeAws_restXmlListBucketsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/\";\n          body = \"\";\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListMultipartUploadsCommand = function serializeAws_restXmlListMultipartUploadsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign(__assign({\n            uploads: \"\"\n          }, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.KeyMarker !== undefined && {\n            \"key-marker\": input.KeyMarker\n          }), input.MaxUploads !== undefined && {\n            \"max-uploads\": input.MaxUploads.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.UploadIdMarker !== undefined && {\n            \"upload-id-marker\": input.UploadIdMarker\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListObjectsCommand = function serializeAws_restXmlListObjectsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign({}, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.Marker !== undefined && {\n            marker: input.Marker\n          }), input.MaxKeys !== undefined && {\n            \"max-keys\": input.MaxKeys.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListObjectsV2Command = function serializeAws_restXmlListObjectsV2Command(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"list-type\": \"2\"\n          }, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.MaxKeys !== undefined && {\n            \"max-keys\": input.MaxKeys.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.ContinuationToken !== undefined && {\n            \"continuation-token\": input.ContinuationToken\n          }), input.FetchOwner !== undefined && {\n            \"fetch-owner\": input.FetchOwner.toString()\n          }), input.StartAfter !== undefined && {\n            \"start-after\": input.StartAfter\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListObjectVersionsCommand = function serializeAws_restXmlListObjectVersionsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({}, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign(__assign(__assign(__assign(__assign(__assign({\n            versions: \"\"\n          }, input.Delimiter !== undefined && {\n            delimiter: input.Delimiter\n          }), input.EncodingType !== undefined && {\n            \"encoding-type\": input.EncodingType\n          }), input.KeyMarker !== undefined && {\n            \"key-marker\": input.KeyMarker\n          }), input.MaxKeys !== undefined && {\n            \"max-keys\": input.MaxKeys.toString()\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.VersionIdMarker !== undefined && {\n            \"version-id-marker\": input.VersionIdMarker\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlListPartsCommand = function serializeAws_restXmlListPartsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({}, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign(__assign({\n            \"x-id\": \"ListParts\"\n          }, input.MaxParts !== undefined && {\n            \"max-parts\": input.MaxParts.toString()\n          }), input.PartNumberMarker !== undefined && {\n            \"part-number-marker\": input.PartNumberMarker\n          }), input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketAccelerateConfigurationCommand = function serializeAws_restXmlPutBucketAccelerateConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            accelerate: \"\"\n          };\n\n          if (input.AccelerateConfiguration !== undefined) {\n            contents = serializeAws_restXmlAccelerateConfiguration(input.AccelerateConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketAclCommand = function serializeAws_restXmlPutBucketAclCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWrite) && {\n            \"x-amz-grant-write\": input.GrantWrite\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            acl: \"\"\n          };\n\n          if (input.AccessControlPolicy !== undefined) {\n            contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function serializeAws_restXmlPutBucketAnalyticsConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            analytics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n\n          if (input.AnalyticsConfiguration !== undefined) {\n            contents = serializeAws_restXmlAnalyticsConfiguration(input.AnalyticsConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketCorsCommand = function serializeAws_restXmlPutBucketCorsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            cors: \"\"\n          };\n\n          if (input.CORSConfiguration !== undefined) {\n            contents = serializeAws_restXmlCORSConfiguration(input.CORSConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketEncryptionCommand = function serializeAws_restXmlPutBucketEncryptionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            encryption: \"\"\n          };\n\n          if (input.ServerSideEncryptionConfiguration !== undefined) {\n            contents = serializeAws_restXmlServerSideEncryptionConfiguration(input.ServerSideEncryptionConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand = function serializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/xml\"\n          };\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            \"intelligent-tiering\": \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n\n          if (input.IntelligentTieringConfiguration !== undefined) {\n            contents = serializeAws_restXmlIntelligentTieringConfiguration(input.IntelligentTieringConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketInventoryConfigurationCommand = function serializeAws_restXmlPutBucketInventoryConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            inventory: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n\n          if (input.InventoryConfiguration !== undefined) {\n            contents = serializeAws_restXmlInventoryConfiguration(input.InventoryConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketLifecycleConfigurationCommand = function serializeAws_restXmlPutBucketLifecycleConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            lifecycle: \"\"\n          };\n\n          if (input.LifecycleConfiguration !== undefined) {\n            contents = serializeAws_restXmlBucketLifecycleConfiguration(input.LifecycleConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketLoggingCommand = function serializeAws_restXmlPutBucketLoggingCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            logging: \"\"\n          };\n\n          if (input.BucketLoggingStatus !== undefined) {\n            contents = serializeAws_restXmlBucketLoggingStatus(input.BucketLoggingStatus, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketMetricsConfigurationCommand = function serializeAws_restXmlPutBucketMetricsConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = __assign({\n            metrics: \"\"\n          }, input.Id !== undefined && {\n            id: input.Id\n          });\n\n          if (input.MetricsConfiguration !== undefined) {\n            contents = serializeAws_restXmlMetricsConfiguration(input.MetricsConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketNotificationConfigurationCommand = function serializeAws_restXmlPutBucketNotificationConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            notification: \"\"\n          };\n\n          if (input.NotificationConfiguration !== undefined) {\n            contents = serializeAws_restXmlNotificationConfiguration(input.NotificationConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketOwnershipControlsCommand = function serializeAws_restXmlPutBucketOwnershipControlsCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            ownershipControls: \"\"\n          };\n\n          if (input.OwnershipControls !== undefined) {\n            contents = serializeAws_restXmlOwnershipControls(input.OwnershipControls, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketPolicyCommand = function serializeAws_restXmlPutBucketPolicyCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"text/plain\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ConfirmRemoveSelfBucketAccess) && {\n            \"x-amz-confirm-remove-self-bucket-access\": input.ConfirmRemoveSelfBucketAccess.toString()\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            policy: \"\"\n          };\n\n          if (input.Policy !== undefined) {\n            contents = input.Policy;\n            body = contents;\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketReplicationCommand = function serializeAws_restXmlPutBucketReplicationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.Token) && {\n            \"x-amz-bucket-object-lock-token\": input.Token\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            replication: \"\"\n          };\n\n          if (input.ReplicationConfiguration !== undefined) {\n            contents = serializeAws_restXmlReplicationConfiguration(input.ReplicationConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketRequestPaymentCommand = function serializeAws_restXmlPutBucketRequestPaymentCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            requestPayment: \"\"\n          };\n\n          if (input.RequestPaymentConfiguration !== undefined) {\n            contents = serializeAws_restXmlRequestPaymentConfiguration(input.RequestPaymentConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketTaggingCommand = function serializeAws_restXmlPutBucketTaggingCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            tagging: \"\"\n          };\n\n          if (input.Tagging !== undefined) {\n            contents = serializeAws_restXmlTagging(input.Tagging, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketVersioningCommand = function serializeAws_restXmlPutBucketVersioningCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.MFA) && {\n            \"x-amz-mfa\": input.MFA\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            versioning: \"\"\n          };\n\n          if (input.VersioningConfiguration !== undefined) {\n            contents = serializeAws_restXmlVersioningConfiguration(input.VersioningConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutBucketWebsiteCommand = function serializeAws_restXmlPutBucketWebsiteCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            website: \"\"\n          };\n\n          if (input.WebsiteConfiguration !== undefined) {\n            contents = serializeAws_restXmlWebsiteConfiguration(input.WebsiteConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectCommand = function serializeAws_restXmlPutObjectCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/octet-stream\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.CacheControl) && {\n            \"cache-control\": input.CacheControl\n          }), isSerializableHeaderValue(input.ContentDisposition) && {\n            \"content-disposition\": input.ContentDisposition\n          }), isSerializableHeaderValue(input.ContentEncoding) && {\n            \"content-encoding\": input.ContentEncoding\n          }), isSerializableHeaderValue(input.ContentLanguage) && {\n            \"content-language\": input.ContentLanguage\n          }), isSerializableHeaderValue(input.ContentLength) && {\n            \"content-length\": input.ContentLength.toString()\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ContentType) && {\n            \"content-type\": input.ContentType\n          }), isSerializableHeaderValue(input.Expires) && {\n            expires: __dateToUtcString(input.Expires).toString()\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.ServerSideEncryption) && {\n            \"x-amz-server-side-encryption\": input.ServerSideEncryption\n          }), isSerializableHeaderValue(input.StorageClass) && {\n            \"x-amz-storage-class\": input.StorageClass\n          }), isSerializableHeaderValue(input.WebsiteRedirectLocation) && {\n            \"x-amz-website-redirect-location\": input.WebsiteRedirectLocation\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.SSEKMSKeyId) && {\n            \"x-amz-server-side-encryption-aws-kms-key-id\": input.SSEKMSKeyId\n          }), isSerializableHeaderValue(input.SSEKMSEncryptionContext) && {\n            \"x-amz-server-side-encryption-context\": input.SSEKMSEncryptionContext\n          }), isSerializableHeaderValue(input.BucketKeyEnabled) && {\n            \"x-amz-server-side-encryption-bucket-key-enabled\": input.BucketKeyEnabled.toString()\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Tagging) && {\n            \"x-amz-tagging\": input.Tagging\n          }), isSerializableHeaderValue(input.ObjectLockMode) && {\n            \"x-amz-object-lock-mode\": input.ObjectLockMode\n          }), isSerializableHeaderValue(input.ObjectLockRetainUntilDate) && {\n            \"x-amz-object-lock-retain-until-date\": (input.ObjectLockRetainUntilDate.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), isSerializableHeaderValue(input.ObjectLockLegalHoldStatus) && {\n            \"x-amz-object-lock-legal-hold\": input.ObjectLockLegalHoldStatus\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), input.Metadata !== undefined && Object.keys(input.Metadata).reduce(function (acc, suffix) {\n            var _a;\n\n            return __assign(__assign({}, acc), (_a = {}, _a[\"x-amz-meta-\" + suffix.toLowerCase()] = input.Metadata[suffix], _a));\n          }, {}));\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            \"x-id\": \"PutObject\"\n          };\n\n          if (input.Body !== undefined) {\n            contents = input.Body;\n            body = contents;\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectAclCommand = function serializeAws_restXmlPutObjectAclCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ACL) && {\n            \"x-amz-acl\": input.ACL\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.GrantFullControl) && {\n            \"x-amz-grant-full-control\": input.GrantFullControl\n          }), isSerializableHeaderValue(input.GrantRead) && {\n            \"x-amz-grant-read\": input.GrantRead\n          }), isSerializableHeaderValue(input.GrantReadACP) && {\n            \"x-amz-grant-read-acp\": input.GrantReadACP\n          }), isSerializableHeaderValue(input.GrantWrite) && {\n            \"x-amz-grant-write\": input.GrantWrite\n          }), isSerializableHeaderValue(input.GrantWriteACP) && {\n            \"x-amz-grant-write-acp\": input.GrantWriteACP\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            acl: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.AccessControlPolicy !== undefined) {\n            contents = serializeAws_restXmlAccessControlPolicy(input.AccessControlPolicy, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectLegalHoldCommand = function serializeAws_restXmlPutObjectLegalHoldCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            \"legal-hold\": \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.LegalHold !== undefined) {\n            contents = serializeAws_restXmlObjectLockLegalHold(input.LegalHold, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectLockConfigurationCommand = function serializeAws_restXmlPutObjectLockConfigurationCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.Token) && {\n            \"x-amz-bucket-object-lock-token\": input.Token\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            \"object-lock\": \"\"\n          };\n\n          if (input.ObjectLockConfiguration !== undefined) {\n            contents = serializeAws_restXmlObjectLockConfiguration(input.ObjectLockConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectRetentionCommand = function serializeAws_restXmlPutObjectRetentionCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.BypassGovernanceRetention) && {\n            \"x-amz-bypass-governance-retention\": input.BypassGovernanceRetention.toString()\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            retention: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.Retention !== undefined) {\n            contents = serializeAws_restXmlObjectLockRetention(input.Retention, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutObjectTaggingCommand = function serializeAws_restXmlPutObjectTaggingCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            tagging: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.Tagging !== undefined) {\n            contents = serializeAws_restXmlTagging(input.Tagging, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlPutPublicAccessBlockCommand = function serializeAws_restXmlPutPublicAccessBlockCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          query = {\n            publicAccessBlock: \"\"\n          };\n\n          if (input.PublicAccessBlockConfiguration !== undefined) {\n            contents = serializeAws_restXmlPublicAccessBlockConfiguration(input.PublicAccessBlockConfiguration, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlRestoreObjectCommand = function serializeAws_restXmlRestoreObjectCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign({\n            restore: \"\"\n          }, input.VersionId !== undefined && {\n            versionId: input.VersionId\n          });\n\n          if (input.RestoreRequest !== undefined) {\n            contents = serializeAws_restXmlRestoreRequest(input.RestoreRequest, context);\n            body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n            contents.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n            body += contents.toString();\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlSelectObjectContentCommand = function serializeAws_restXmlSelectObjectContentCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, bodyNode, node, node, node, node, node, node, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/xml\"\n          }, isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = {\n            select: \"\",\n            \"select-type\": \"2\"\n          };\n          body = '<?xml version=\"1.0\" encoding=\"UTF-8\"?>';\n          bodyNode = new __XmlNode(\"SelectObjectContentRequest\");\n          bodyNode.addAttribute(\"xmlns\", \"http://s3.amazonaws.com/doc/2006-03-01/\");\n\n          if (input.Expression !== undefined) {\n            node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.ExpressionType !== undefined) {\n            node = new __XmlNode(\"ExpressionType\").addChildNode(new __XmlText(input.ExpressionType)).withName(\"ExpressionType\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.InputSerialization !== undefined) {\n            node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.OutputSerialization !== undefined) {\n            node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.RequestProgress !== undefined) {\n            node = serializeAws_restXmlRequestProgress(input.RequestProgress, context).withName(\"RequestProgress\");\n            bodyNode.addChildNode(node);\n          }\n\n          if (input.ScanRange !== undefined) {\n            node = serializeAws_restXmlScanRange(input.ScanRange, context).withName(\"ScanRange\");\n            bodyNode.addChildNode(node);\n          }\n\n          body += bodyNode.toString();\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlUploadPartCommand = function serializeAws_restXmlUploadPartCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, contents, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign({\n            \"content-type\": \"application/octet-stream\"\n          }, isSerializableHeaderValue(input.ContentLength) && {\n            \"content-length\": input.ContentLength.toString()\n          }), isSerializableHeaderValue(input.ContentMD5) && {\n            \"content-md5\": input.ContentMD5\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign({\n            \"x-id\": \"UploadPart\"\n          }, input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          }), input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n\n          if (input.Body !== undefined) {\n            contents = input.Body;\n            body = contents;\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restXmlUploadPartCopyCommand = function serializeAws_restXmlUploadPartCopyCommand(input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, isSerializableHeaderValue(input.CopySource) && {\n            \"x-amz-copy-source\": input.CopySource\n          }), isSerializableHeaderValue(input.CopySourceIfMatch) && {\n            \"x-amz-copy-source-if-match\": input.CopySourceIfMatch\n          }), isSerializableHeaderValue(input.CopySourceIfModifiedSince) && {\n            \"x-amz-copy-source-if-modified-since\": __dateToUtcString(input.CopySourceIfModifiedSince).toString()\n          }), isSerializableHeaderValue(input.CopySourceIfNoneMatch) && {\n            \"x-amz-copy-source-if-none-match\": input.CopySourceIfNoneMatch\n          }), isSerializableHeaderValue(input.CopySourceIfUnmodifiedSince) && {\n            \"x-amz-copy-source-if-unmodified-since\": __dateToUtcString(input.CopySourceIfUnmodifiedSince).toString()\n          }), isSerializableHeaderValue(input.CopySourceRange) && {\n            \"x-amz-copy-source-range\": input.CopySourceRange\n          }), isSerializableHeaderValue(input.SSECustomerAlgorithm) && {\n            \"x-amz-server-side-encryption-customer-algorithm\": input.SSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.SSECustomerKey) && {\n            \"x-amz-server-side-encryption-customer-key\": input.SSECustomerKey\n          }), isSerializableHeaderValue(input.SSECustomerKeyMD5) && {\n            \"x-amz-server-side-encryption-customer-key-md5\": input.SSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerAlgorithm) && {\n            \"x-amz-copy-source-server-side-encryption-customer-algorithm\": input.CopySourceSSECustomerAlgorithm\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKey) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key\": input.CopySourceSSECustomerKey\n          }), isSerializableHeaderValue(input.CopySourceSSECustomerKeyMD5) && {\n            \"x-amz-copy-source-server-side-encryption-customer-key-md5\": input.CopySourceSSECustomerKeyMD5\n          }), isSerializableHeaderValue(input.RequestPayer) && {\n            \"x-amz-request-payer\": input.RequestPayer\n          }), isSerializableHeaderValue(input.ExpectedBucketOwner) && {\n            \"x-amz-expected-bucket-owner\": input.ExpectedBucketOwner\n          }), isSerializableHeaderValue(input.ExpectedSourceBucketOwner) && {\n            \"x-amz-source-expected-bucket-owner\": input.ExpectedSourceBucketOwner\n          });\n          resolvedPath = \"/{Bucket}/{Key+}\";\n\n          if (input.Bucket !== undefined) {\n            labelValue = input.Bucket;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Bucket.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Bucket}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Bucket.\");\n          }\n\n          if (input.Key !== undefined) {\n            labelValue = input.Key;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Key.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Key+}\", labelValue.split(\"/\").map(function (segment) {\n              return __extendedEncodeURIComponent(segment);\n            }).join(\"/\"));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Key.\");\n          }\n\n          query = __assign(__assign({\n            \"x-id\": \"UploadPartCopy\"\n          }, input.PartNumber !== undefined && {\n            partNumber: input.PartNumber.toString()\n          }), input.UploadId !== undefined && {\n            uploadId: input.UploadId\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var deserializeAws_restXmlAbortMultipartUploadCommand = function deserializeAws_restXmlAbortMultipartUploadCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlAbortMultipartUploadCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlAbortMultipartUploadCommandError = function deserializeAws_restXmlAbortMultipartUploadCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchUpload\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchUpload\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchUploadResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlCompleteMultipartUploadCommand = function deserializeAws_restXmlCompleteMultipartUploadCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlCompleteMultipartUploadCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Bucket: undefined,\n            BucketKeyEnabled: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            Key: undefined,\n            Location: undefined,\n            RequestCharged: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = data[\"Bucket\"];\n          }\n\n          if (data[\"ETag\"] !== undefined) {\n            contents.ETag = data[\"ETag\"];\n          }\n\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = data[\"Key\"];\n          }\n\n          if (data[\"Location\"] !== undefined) {\n            contents.Location = data[\"Location\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlCompleteMultipartUploadCommandError = function deserializeAws_restXmlCompleteMultipartUploadCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlCopyObjectCommand = function deserializeAws_restXmlCopyObjectCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlCopyObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BucketKeyEnabled: undefined,\n            CopyObjectResult: undefined,\n            CopySourceVersionId: undefined,\n            Expiration: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n            contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CopyObjectResult = deserializeAws_restXmlCopyObjectResult(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlCopyObjectCommandError = function deserializeAws_restXmlCopyObjectCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"ObjectNotInActiveTierError\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#ObjectNotInActiveTierError\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlObjectNotInActiveTierErrorResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlCreateBucketCommand = function deserializeAws_restXmlCreateBucketCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlCreateBucketCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Location: undefined\n          };\n\n          if (output.headers[\"location\"] !== undefined) {\n            contents.Location = output.headers[\"location\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlCreateBucketCommandError = function deserializeAws_restXmlCreateBucketCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BucketAlreadyExists\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#BucketAlreadyExists\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"BucketAlreadyOwnedByYou\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.s3#BucketAlreadyOwnedByYou\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlBucketAlreadyExistsResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlBucketAlreadyOwnedByYouResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlCreateMultipartUploadCommand = function deserializeAws_restXmlCreateMultipartUploadCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlCreateMultipartUploadCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AbortDate: undefined,\n            AbortRuleId: undefined,\n            Bucket: undefined,\n            BucketKeyEnabled: undefined,\n            Key: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            UploadId: undefined\n          };\n\n          if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n            contents.AbortDate = new Date(output.headers[\"x-amz-abort-date\"]);\n          }\n\n          if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n            contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = data[\"Bucket\"];\n          }\n\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = data[\"Key\"];\n          }\n\n          if (data[\"UploadId\"] !== undefined) {\n            contents.UploadId = data[\"UploadId\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlCreateMultipartUploadCommandError = function deserializeAws_restXmlCreateMultipartUploadCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketCommand = function deserializeAws_restXmlDeleteBucketCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketCommandError = function deserializeAws_restXmlDeleteBucketCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand = function deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError = function deserializeAws_restXmlDeleteBucketAnalyticsConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketCorsCommand = function deserializeAws_restXmlDeleteBucketCorsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketCorsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketCorsCommandError = function deserializeAws_restXmlDeleteBucketCorsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketEncryptionCommand = function deserializeAws_restXmlDeleteBucketEncryptionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketEncryptionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketEncryptionCommandError = function deserializeAws_restXmlDeleteBucketEncryptionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand = function deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError = function deserializeAws_restXmlDeleteBucketIntelligentTieringConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand = function deserializeAws_restXmlDeleteBucketInventoryConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError = function deserializeAws_restXmlDeleteBucketInventoryConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketLifecycleCommand = function deserializeAws_restXmlDeleteBucketLifecycleCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketLifecycleCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketLifecycleCommandError = function deserializeAws_restXmlDeleteBucketLifecycleCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand = function deserializeAws_restXmlDeleteBucketMetricsConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError = function deserializeAws_restXmlDeleteBucketMetricsConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketOwnershipControlsCommand = function deserializeAws_restXmlDeleteBucketOwnershipControlsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError = function deserializeAws_restXmlDeleteBucketOwnershipControlsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketPolicyCommand = function deserializeAws_restXmlDeleteBucketPolicyCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketPolicyCommandError = function deserializeAws_restXmlDeleteBucketPolicyCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketReplicationCommand = function deserializeAws_restXmlDeleteBucketReplicationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketReplicationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketReplicationCommandError = function deserializeAws_restXmlDeleteBucketReplicationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketTaggingCommand = function deserializeAws_restXmlDeleteBucketTaggingCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketTaggingCommandError = function deserializeAws_restXmlDeleteBucketTaggingCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteBucketWebsiteCommand = function deserializeAws_restXmlDeleteBucketWebsiteCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteBucketWebsiteCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteBucketWebsiteCommandError = function deserializeAws_restXmlDeleteBucketWebsiteCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteObjectCommand = function deserializeAws_restXmlDeleteObjectCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            DeleteMarker: undefined,\n            RequestCharged: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n            contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteObjectCommandError = function deserializeAws_restXmlDeleteObjectCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteObjectsCommand = function deserializeAws_restXmlDeleteObjectsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteObjectsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Deleted: undefined,\n            Errors: undefined,\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.Deleted === \"\") {\n            contents.Deleted = [];\n          }\n\n          if (data[\"Deleted\"] !== undefined) {\n            contents.Deleted = deserializeAws_restXmlDeletedObjects(__getArrayIfSingleItem(data[\"Deleted\"]), context);\n          }\n\n          if (data.Error === \"\") {\n            contents.Errors = [];\n          }\n\n          if (data[\"Error\"] !== undefined) {\n            contents.Errors = deserializeAws_restXmlErrors(__getArrayIfSingleItem(data[\"Error\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteObjectsCommandError = function deserializeAws_restXmlDeleteObjectsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeleteObjectTaggingCommand = function deserializeAws_restXmlDeleteObjectTaggingCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeleteObjectTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeleteObjectTaggingCommandError = function deserializeAws_restXmlDeleteObjectTaggingCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlDeletePublicAccessBlockCommand = function deserializeAws_restXmlDeletePublicAccessBlockCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlDeletePublicAccessBlockCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlDeletePublicAccessBlockCommandError = function deserializeAws_restXmlDeletePublicAccessBlockCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketAccelerateConfigurationCommand = function deserializeAws_restXmlGetBucketAccelerateConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Status: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Status\"] !== undefined) {\n            contents.Status = data[\"Status\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError = function deserializeAws_restXmlGetBucketAccelerateConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketAclCommand = function deserializeAws_restXmlGetBucketAclCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Grants: undefined,\n            Owner: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.AccessControlList === \"\") {\n            contents.Grants = [];\n          }\n\n          if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n            contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketAclCommandError = function deserializeAws_restXmlGetBucketAclCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand = function deserializeAws_restXmlGetBucketAnalyticsConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AnalyticsConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.AnalyticsConfiguration = deserializeAws_restXmlAnalyticsConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError = function deserializeAws_restXmlGetBucketAnalyticsConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketCorsCommand = function deserializeAws_restXmlGetBucketCorsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketCorsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CORSRules: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.CORSRule === \"\") {\n            contents.CORSRules = [];\n          }\n\n          if (data[\"CORSRule\"] !== undefined) {\n            contents.CORSRules = deserializeAws_restXmlCORSRules(__getArrayIfSingleItem(data[\"CORSRule\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketCorsCommandError = function deserializeAws_restXmlGetBucketCorsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketEncryptionCommand = function deserializeAws_restXmlGetBucketEncryptionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketEncryptionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ServerSideEncryptionConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ServerSideEncryptionConfiguration = deserializeAws_restXmlServerSideEncryptionConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketEncryptionCommandError = function deserializeAws_restXmlGetBucketEncryptionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand = function deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            IntelligentTieringConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.IntelligentTieringConfiguration = deserializeAws_restXmlIntelligentTieringConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError = function deserializeAws_restXmlGetBucketIntelligentTieringConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketInventoryConfigurationCommand = function deserializeAws_restXmlGetBucketInventoryConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketInventoryConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            InventoryConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.InventoryConfiguration = deserializeAws_restXmlInventoryConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketInventoryConfigurationCommandError = function deserializeAws_restXmlGetBucketInventoryConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketLifecycleConfigurationCommand = function deserializeAws_restXmlGetBucketLifecycleConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Rules: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.Rule === \"\") {\n            contents.Rules = [];\n          }\n\n          if (data[\"Rule\"] !== undefined) {\n            contents.Rules = deserializeAws_restXmlLifecycleRules(__getArrayIfSingleItem(data[\"Rule\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError = function deserializeAws_restXmlGetBucketLifecycleConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketLocationCommand = function deserializeAws_restXmlGetBucketLocationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketLocationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            LocationConstraint: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"LocationConstraint\"] !== undefined) {\n            contents.LocationConstraint = data[\"LocationConstraint\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketLocationCommandError = function deserializeAws_restXmlGetBucketLocationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketLoggingCommand = function deserializeAws_restXmlGetBucketLoggingCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketLoggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            LoggingEnabled: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"LoggingEnabled\"] !== undefined) {\n            contents.LoggingEnabled = deserializeAws_restXmlLoggingEnabled(data[\"LoggingEnabled\"], context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketLoggingCommandError = function deserializeAws_restXmlGetBucketLoggingCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketMetricsConfigurationCommand = function deserializeAws_restXmlGetBucketMetricsConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketMetricsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MetricsConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MetricsConfiguration = deserializeAws_restXmlMetricsConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketMetricsConfigurationCommandError = function deserializeAws_restXmlGetBucketMetricsConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketNotificationConfigurationCommand = function deserializeAws_restXmlGetBucketNotificationConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketNotificationConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            LambdaFunctionConfigurations: undefined,\n            QueueConfigurations: undefined,\n            TopicConfigurations: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.CloudFunctionConfiguration === \"\") {\n            contents.LambdaFunctionConfigurations = [];\n          }\n\n          if (data[\"CloudFunctionConfiguration\"] !== undefined) {\n            contents.LambdaFunctionConfigurations = deserializeAws_restXmlLambdaFunctionConfigurationList(__getArrayIfSingleItem(data[\"CloudFunctionConfiguration\"]), context);\n          }\n\n          if (data.QueueConfiguration === \"\") {\n            contents.QueueConfigurations = [];\n          }\n\n          if (data[\"QueueConfiguration\"] !== undefined) {\n            contents.QueueConfigurations = deserializeAws_restXmlQueueConfigurationList(__getArrayIfSingleItem(data[\"QueueConfiguration\"]), context);\n          }\n\n          if (data.TopicConfiguration === \"\") {\n            contents.TopicConfigurations = [];\n          }\n\n          if (data[\"TopicConfiguration\"] !== undefined) {\n            contents.TopicConfigurations = deserializeAws_restXmlTopicConfigurationList(__getArrayIfSingleItem(data[\"TopicConfiguration\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketNotificationConfigurationCommandError = function deserializeAws_restXmlGetBucketNotificationConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketOwnershipControlsCommand = function deserializeAws_restXmlGetBucketOwnershipControlsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketOwnershipControlsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            OwnershipControls: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.OwnershipControls = deserializeAws_restXmlOwnershipControls(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketOwnershipControlsCommandError = function deserializeAws_restXmlGetBucketOwnershipControlsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketPolicyCommand = function deserializeAws_restXmlGetBucketPolicyCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Policy: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Policy\"] !== undefined) {\n            contents.Policy = data[\"Policy\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketPolicyCommandError = function deserializeAws_restXmlGetBucketPolicyCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketPolicyStatusCommand = function deserializeAws_restXmlGetBucketPolicyStatusCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketPolicyStatusCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            PolicyStatus: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.PolicyStatus = deserializeAws_restXmlPolicyStatus(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketPolicyStatusCommandError = function deserializeAws_restXmlGetBucketPolicyStatusCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketReplicationCommand = function deserializeAws_restXmlGetBucketReplicationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketReplicationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ReplicationConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ReplicationConfiguration = deserializeAws_restXmlReplicationConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketReplicationCommandError = function deserializeAws_restXmlGetBucketReplicationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketRequestPaymentCommand = function deserializeAws_restXmlGetBucketRequestPaymentCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketRequestPaymentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Payer: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Payer\"] !== undefined) {\n            contents.Payer = data[\"Payer\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketRequestPaymentCommandError = function deserializeAws_restXmlGetBucketRequestPaymentCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketTaggingCommand = function deserializeAws_restXmlGetBucketTaggingCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            TagSet: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.TagSet === \"\") {\n            contents.TagSet = [];\n          }\n\n          if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n            contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketTaggingCommandError = function deserializeAws_restXmlGetBucketTaggingCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketVersioningCommand = function deserializeAws_restXmlGetBucketVersioningCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketVersioningCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MFADelete: undefined,\n            Status: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"MfaDelete\"] !== undefined) {\n            contents.MFADelete = data[\"MfaDelete\"];\n          }\n\n          if (data[\"Status\"] !== undefined) {\n            contents.Status = data[\"Status\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketVersioningCommandError = function deserializeAws_restXmlGetBucketVersioningCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetBucketWebsiteCommand = function deserializeAws_restXmlGetBucketWebsiteCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetBucketWebsiteCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ErrorDocument: undefined,\n            IndexDocument: undefined,\n            RedirectAllRequestsTo: undefined,\n            RoutingRules: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"ErrorDocument\"] !== undefined) {\n            contents.ErrorDocument = deserializeAws_restXmlErrorDocument(data[\"ErrorDocument\"], context);\n          }\n\n          if (data[\"IndexDocument\"] !== undefined) {\n            contents.IndexDocument = deserializeAws_restXmlIndexDocument(data[\"IndexDocument\"], context);\n          }\n\n          if (data[\"RedirectAllRequestsTo\"] !== undefined) {\n            contents.RedirectAllRequestsTo = deserializeAws_restXmlRedirectAllRequestsTo(data[\"RedirectAllRequestsTo\"], context);\n          }\n\n          if (data.RoutingRules === \"\") {\n            contents.RoutingRules = [];\n          }\n\n          if (data[\"RoutingRules\"] !== undefined && data[\"RoutingRules\"][\"RoutingRule\"] !== undefined) {\n            contents.RoutingRules = deserializeAws_restXmlRoutingRules(__getArrayIfSingleItem(data[\"RoutingRules\"][\"RoutingRule\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetBucketWebsiteCommandError = function deserializeAws_restXmlGetBucketWebsiteCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectCommand = function deserializeAws_restXmlGetObjectCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2\n        /*return*/\n        , deserializeAws_restXmlGetObjectCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        AcceptRanges: undefined,\n        Body: undefined,\n        BucketKeyEnabled: undefined,\n        CacheControl: undefined,\n        ContentDisposition: undefined,\n        ContentEncoding: undefined,\n        ContentLanguage: undefined,\n        ContentLength: undefined,\n        ContentRange: undefined,\n        ContentType: undefined,\n        DeleteMarker: undefined,\n        ETag: undefined,\n        Expiration: undefined,\n        Expires: undefined,\n        LastModified: undefined,\n        Metadata: undefined,\n        MissingMeta: undefined,\n        ObjectLockLegalHoldStatus: undefined,\n        ObjectLockMode: undefined,\n        ObjectLockRetainUntilDate: undefined,\n        PartsCount: undefined,\n        ReplicationStatus: undefined,\n        RequestCharged: undefined,\n        Restore: undefined,\n        SSECustomerAlgorithm: undefined,\n        SSECustomerKeyMD5: undefined,\n        SSEKMSKeyId: undefined,\n        ServerSideEncryption: undefined,\n        StorageClass: undefined,\n        TagCount: undefined,\n        VersionId: undefined,\n        WebsiteRedirectLocation: undefined\n      };\n\n      if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n        contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n      }\n\n      if (output.headers[\"accept-ranges\"] !== undefined) {\n        contents.AcceptRanges = output.headers[\"accept-ranges\"];\n      }\n\n      if (output.headers[\"x-amz-expiration\"] !== undefined) {\n        contents.Expiration = output.headers[\"x-amz-expiration\"];\n      }\n\n      if (output.headers[\"x-amz-restore\"] !== undefined) {\n        contents.Restore = output.headers[\"x-amz-restore\"];\n      }\n\n      if (output.headers[\"last-modified\"] !== undefined) {\n        contents.LastModified = new Date(output.headers[\"last-modified\"]);\n      }\n\n      if (output.headers[\"content-length\"] !== undefined) {\n        contents.ContentLength = parseInt(output.headers[\"content-length\"], 10);\n      }\n\n      if (output.headers[\"etag\"] !== undefined) {\n        contents.ETag = output.headers[\"etag\"];\n      }\n\n      if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n        contents.MissingMeta = parseInt(output.headers[\"x-amz-missing-meta\"], 10);\n      }\n\n      if (output.headers[\"x-amz-version-id\"] !== undefined) {\n        contents.VersionId = output.headers[\"x-amz-version-id\"];\n      }\n\n      if (output.headers[\"cache-control\"] !== undefined) {\n        contents.CacheControl = output.headers[\"cache-control\"];\n      }\n\n      if (output.headers[\"content-disposition\"] !== undefined) {\n        contents.ContentDisposition = output.headers[\"content-disposition\"];\n      }\n\n      if (output.headers[\"content-encoding\"] !== undefined) {\n        contents.ContentEncoding = output.headers[\"content-encoding\"];\n      }\n\n      if (output.headers[\"content-language\"] !== undefined) {\n        contents.ContentLanguage = output.headers[\"content-language\"];\n      }\n\n      if (output.headers[\"content-range\"] !== undefined) {\n        contents.ContentRange = output.headers[\"content-range\"];\n      }\n\n      if (output.headers[\"content-type\"] !== undefined) {\n        contents.ContentType = output.headers[\"content-type\"];\n      }\n\n      if (output.headers[\"expires\"] !== undefined) {\n        contents.Expires = new Date(output.headers[\"expires\"]);\n      }\n\n      if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n        contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n        contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n        contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n        contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n        contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n      }\n\n      if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n        contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n      }\n\n      if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n        contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n      }\n\n      if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n      }\n\n      if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n        contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n      }\n\n      if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n        contents.PartsCount = parseInt(output.headers[\"x-amz-mp-parts-count\"], 10);\n      }\n\n      if (output.headers[\"x-amz-tagging-count\"] !== undefined) {\n        contents.TagCount = parseInt(output.headers[\"x-amz-tagging-count\"], 10);\n      }\n\n      if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n        contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n      }\n\n      if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n        contents.ObjectLockRetainUntilDate = new Date(output.headers[\"x-amz-object-lock-retain-until-date\"]);\n      }\n\n      if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n        contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n      }\n\n      Object.keys(output.headers).forEach(function (header) {\n        if (contents.Metadata === undefined) {\n          contents.Metadata = {};\n        }\n\n        if (header.startsWith(\"x-amz-meta-\")) {\n          contents.Metadata[header.substring(11)] = output.headers[header];\n        }\n      });\n      data = output.body;\n      contents.Body = data;\n      return [2\n      /*return*/\n      , Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectCommandError = function deserializeAws_restXmlGetObjectCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidObjectState\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#InvalidObjectState\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"NoSuchKey\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlInvalidObjectStateResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectAclCommand = function deserializeAws_restXmlGetObjectAclCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetObjectAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Grants: undefined,\n            Owner: undefined,\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.AccessControlList === \"\") {\n            contents.Grants = [];\n          }\n\n          if (data[\"AccessControlList\"] !== undefined && data[\"AccessControlList\"][\"Grant\"] !== undefined) {\n            contents.Grants = deserializeAws_restXmlGrants(__getArrayIfSingleItem(data[\"AccessControlList\"][\"Grant\"]), context);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectAclCommandError = function deserializeAws_restXmlGetObjectAclCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectLegalHoldCommand = function deserializeAws_restXmlGetObjectLegalHoldCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetObjectLegalHoldCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            LegalHold: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.LegalHold = deserializeAws_restXmlObjectLockLegalHold(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectLegalHoldCommandError = function deserializeAws_restXmlGetObjectLegalHoldCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectLockConfigurationCommand = function deserializeAws_restXmlGetObjectLockConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetObjectLockConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ObjectLockConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ObjectLockConfiguration = deserializeAws_restXmlObjectLockConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectLockConfigurationCommandError = function deserializeAws_restXmlGetObjectLockConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectRetentionCommand = function deserializeAws_restXmlGetObjectRetentionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetObjectRetentionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Retention: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.Retention = deserializeAws_restXmlObjectLockRetention(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectRetentionCommandError = function deserializeAws_restXmlGetObjectRetentionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectTaggingCommand = function deserializeAws_restXmlGetObjectTaggingCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetObjectTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            TagSet: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.TagSet === \"\") {\n            contents.TagSet = [];\n          }\n\n          if (data[\"TagSet\"] !== undefined && data[\"TagSet\"][\"Tag\"] !== undefined) {\n            contents.TagSet = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(data[\"TagSet\"][\"Tag\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectTaggingCommandError = function deserializeAws_restXmlGetObjectTaggingCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetObjectTorrentCommand = function deserializeAws_restXmlGetObjectTorrentCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2\n        /*return*/\n        , deserializeAws_restXmlGetObjectTorrentCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        Body: undefined,\n        RequestCharged: undefined\n      };\n\n      if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n        contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n      }\n\n      data = output.body;\n      contents.Body = data;\n      return [2\n      /*return*/\n      , Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetObjectTorrentCommandError = function deserializeAws_restXmlGetObjectTorrentCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlGetPublicAccessBlockCommand = function deserializeAws_restXmlGetPublicAccessBlockCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlGetPublicAccessBlockCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            PublicAccessBlockConfiguration: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.PublicAccessBlockConfiguration = deserializeAws_restXmlPublicAccessBlockConfiguration(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlGetPublicAccessBlockCommandError = function deserializeAws_restXmlGetPublicAccessBlockCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlHeadBucketCommand = function deserializeAws_restXmlHeadBucketCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlHeadBucketCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlHeadBucketCommandError = function deserializeAws_restXmlHeadBucketCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlHeadObjectCommand = function deserializeAws_restXmlHeadObjectCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlHeadObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AcceptRanges: undefined,\n            ArchiveStatus: undefined,\n            BucketKeyEnabled: undefined,\n            CacheControl: undefined,\n            ContentDisposition: undefined,\n            ContentEncoding: undefined,\n            ContentLanguage: undefined,\n            ContentLength: undefined,\n            ContentType: undefined,\n            DeleteMarker: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            Expires: undefined,\n            LastModified: undefined,\n            Metadata: undefined,\n            MissingMeta: undefined,\n            ObjectLockLegalHoldStatus: undefined,\n            ObjectLockMode: undefined,\n            ObjectLockRetainUntilDate: undefined,\n            PartsCount: undefined,\n            ReplicationStatus: undefined,\n            RequestCharged: undefined,\n            Restore: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            StorageClass: undefined,\n            VersionId: undefined,\n            WebsiteRedirectLocation: undefined\n          };\n\n          if (output.headers[\"x-amz-delete-marker\"] !== undefined) {\n            contents.DeleteMarker = output.headers[\"x-amz-delete-marker\"] === \"true\";\n          }\n\n          if (output.headers[\"accept-ranges\"] !== undefined) {\n            contents.AcceptRanges = output.headers[\"accept-ranges\"];\n          }\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"x-amz-restore\"] !== undefined) {\n            contents.Restore = output.headers[\"x-amz-restore\"];\n          }\n\n          if (output.headers[\"x-amz-archive-status\"] !== undefined) {\n            contents.ArchiveStatus = output.headers[\"x-amz-archive-status\"];\n          }\n\n          if (output.headers[\"last-modified\"] !== undefined) {\n            contents.LastModified = new Date(output.headers[\"last-modified\"]);\n          }\n\n          if (output.headers[\"content-length\"] !== undefined) {\n            contents.ContentLength = parseInt(output.headers[\"content-length\"], 10);\n          }\n\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n\n          if (output.headers[\"x-amz-missing-meta\"] !== undefined) {\n            contents.MissingMeta = parseInt(output.headers[\"x-amz-missing-meta\"], 10);\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"cache-control\"] !== undefined) {\n            contents.CacheControl = output.headers[\"cache-control\"];\n          }\n\n          if (output.headers[\"content-disposition\"] !== undefined) {\n            contents.ContentDisposition = output.headers[\"content-disposition\"];\n          }\n\n          if (output.headers[\"content-encoding\"] !== undefined) {\n            contents.ContentEncoding = output.headers[\"content-encoding\"];\n          }\n\n          if (output.headers[\"content-language\"] !== undefined) {\n            contents.ContentLanguage = output.headers[\"content-language\"];\n          }\n\n          if (output.headers[\"content-type\"] !== undefined) {\n            contents.ContentType = output.headers[\"content-type\"];\n          }\n\n          if (output.headers[\"expires\"] !== undefined) {\n            contents.Expires = new Date(output.headers[\"expires\"]);\n          }\n\n          if (output.headers[\"x-amz-website-redirect-location\"] !== undefined) {\n            contents.WebsiteRedirectLocation = output.headers[\"x-amz-website-redirect-location\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n\n          if (output.headers[\"x-amz-storage-class\"] !== undefined) {\n            contents.StorageClass = output.headers[\"x-amz-storage-class\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-replication-status\"] !== undefined) {\n            contents.ReplicationStatus = output.headers[\"x-amz-replication-status\"];\n          }\n\n          if (output.headers[\"x-amz-mp-parts-count\"] !== undefined) {\n            contents.PartsCount = parseInt(output.headers[\"x-amz-mp-parts-count\"], 10);\n          }\n\n          if (output.headers[\"x-amz-object-lock-mode\"] !== undefined) {\n            contents.ObjectLockMode = output.headers[\"x-amz-object-lock-mode\"];\n          }\n\n          if (output.headers[\"x-amz-object-lock-retain-until-date\"] !== undefined) {\n            contents.ObjectLockRetainUntilDate = new Date(output.headers[\"x-amz-object-lock-retain-until-date\"]);\n          }\n\n          if (output.headers[\"x-amz-object-lock-legal-hold\"] !== undefined) {\n            contents.ObjectLockLegalHoldStatus = output.headers[\"x-amz-object-lock-legal-hold\"];\n          }\n\n          Object.keys(output.headers).forEach(function (header) {\n            if (contents.Metadata === undefined) {\n              contents.Metadata = {};\n            }\n\n            if (header.startsWith(\"x-amz-meta-\")) {\n              contents.Metadata[header.substring(11)] = output.headers[header];\n            }\n          });\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlHeadObjectCommandError = function deserializeAws_restXmlHeadObjectCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand = function deserializeAws_restXmlListBucketAnalyticsConfigurationsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AnalyticsConfigurationList: undefined,\n            ContinuationToken: undefined,\n            IsTruncated: undefined,\n            NextContinuationToken: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.AnalyticsConfiguration === \"\") {\n            contents.AnalyticsConfigurationList = [];\n          }\n\n          if (data[\"AnalyticsConfiguration\"] !== undefined) {\n            contents.AnalyticsConfigurationList = deserializeAws_restXmlAnalyticsConfigurationList(__getArrayIfSingleItem(data[\"AnalyticsConfiguration\"]), context);\n          }\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError = function deserializeAws_restXmlListBucketAnalyticsConfigurationsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand = function deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ContinuationToken: undefined,\n            IntelligentTieringConfigurationList: undefined,\n            IsTruncated: undefined,\n            NextContinuationToken: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n\n          if (data.IntelligentTieringConfiguration === \"\") {\n            contents.IntelligentTieringConfigurationList = [];\n          }\n\n          if (data[\"IntelligentTieringConfiguration\"] !== undefined) {\n            contents.IntelligentTieringConfigurationList = deserializeAws_restXmlIntelligentTieringConfigurationList(__getArrayIfSingleItem(data[\"IntelligentTieringConfiguration\"]), context);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError = function deserializeAws_restXmlListBucketIntelligentTieringConfigurationsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketInventoryConfigurationsCommand = function deserializeAws_restXmlListBucketInventoryConfigurationsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListBucketInventoryConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ContinuationToken: undefined,\n            InventoryConfigurationList: undefined,\n            IsTruncated: undefined,\n            NextContinuationToken: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n\n          if (data.InventoryConfiguration === \"\") {\n            contents.InventoryConfigurationList = [];\n          }\n\n          if (data[\"InventoryConfiguration\"] !== undefined) {\n            contents.InventoryConfigurationList = deserializeAws_restXmlInventoryConfigurationList(__getArrayIfSingleItem(data[\"InventoryConfiguration\"]), context);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketInventoryConfigurationsCommandError = function deserializeAws_restXmlListBucketInventoryConfigurationsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketMetricsConfigurationsCommand = function deserializeAws_restXmlListBucketMetricsConfigurationsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListBucketMetricsConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ContinuationToken: undefined,\n            IsTruncated: undefined,\n            MetricsConfigurationList: undefined,\n            NextContinuationToken: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data.MetricsConfiguration === \"\") {\n            contents.MetricsConfigurationList = [];\n          }\n\n          if (data[\"MetricsConfiguration\"] !== undefined) {\n            contents.MetricsConfigurationList = deserializeAws_restXmlMetricsConfigurationList(__getArrayIfSingleItem(data[\"MetricsConfiguration\"]), context);\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketMetricsConfigurationsCommandError = function deserializeAws_restXmlListBucketMetricsConfigurationsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListBucketsCommand = function deserializeAws_restXmlListBucketsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListBucketsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Buckets: undefined,\n            Owner: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.Buckets === \"\") {\n            contents.Buckets = [];\n          }\n\n          if (data[\"Buckets\"] !== undefined && data[\"Buckets\"][\"Bucket\"] !== undefined) {\n            contents.Buckets = deserializeAws_restXmlBuckets(__getArrayIfSingleItem(data[\"Buckets\"][\"Bucket\"]), context);\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListBucketsCommandError = function deserializeAws_restXmlListBucketsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListMultipartUploadsCommand = function deserializeAws_restXmlListMultipartUploadsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListMultipartUploadsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            Bucket: undefined,\n            CommonPrefixes: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyMarker: undefined,\n            MaxUploads: undefined,\n            NextKeyMarker: undefined,\n            NextUploadIdMarker: undefined,\n            Prefix: undefined,\n            UploadIdMarker: undefined,\n            Uploads: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = data[\"Bucket\"];\n          }\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = data[\"Delimiter\"];\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = data[\"EncodingType\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"KeyMarker\"] !== undefined) {\n            contents.KeyMarker = data[\"KeyMarker\"];\n          }\n\n          if (data[\"MaxUploads\"] !== undefined) {\n            contents.MaxUploads = parseInt(data[\"MaxUploads\"]);\n          }\n\n          if (data[\"NextKeyMarker\"] !== undefined) {\n            contents.NextKeyMarker = data[\"NextKeyMarker\"];\n          }\n\n          if (data[\"NextUploadIdMarker\"] !== undefined) {\n            contents.NextUploadIdMarker = data[\"NextUploadIdMarker\"];\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = data[\"Prefix\"];\n          }\n\n          if (data[\"UploadIdMarker\"] !== undefined) {\n            contents.UploadIdMarker = data[\"UploadIdMarker\"];\n          }\n\n          if (data.Upload === \"\") {\n            contents.Uploads = [];\n          }\n\n          if (data[\"Upload\"] !== undefined) {\n            contents.Uploads = deserializeAws_restXmlMultipartUploadList(__getArrayIfSingleItem(data[\"Upload\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListMultipartUploadsCommandError = function deserializeAws_restXmlListMultipartUploadsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListObjectsCommand = function deserializeAws_restXmlListObjectsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListObjectsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CommonPrefixes: undefined,\n            Contents: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            Marker: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextMarker: undefined,\n            Prefix: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n\n          if (data.Contents === \"\") {\n            contents.Contents = [];\n          }\n\n          if (data[\"Contents\"] !== undefined) {\n            contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = data[\"Delimiter\"];\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = data[\"EncodingType\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"Marker\"] !== undefined) {\n            contents.Marker = data[\"Marker\"];\n          }\n\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n          }\n\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = data[\"Name\"];\n          }\n\n          if (data[\"NextMarker\"] !== undefined) {\n            contents.NextMarker = data[\"NextMarker\"];\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = data[\"Prefix\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListObjectsCommandError = function deserializeAws_restXmlListObjectsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListObjectsV2Command = function deserializeAws_restXmlListObjectsV2Command(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListObjectsV2CommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CommonPrefixes: undefined,\n            Contents: undefined,\n            ContinuationToken: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyCount: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextContinuationToken: undefined,\n            Prefix: undefined,\n            StartAfter: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n\n          if (data.Contents === \"\") {\n            contents.Contents = [];\n          }\n\n          if (data[\"Contents\"] !== undefined) {\n            contents.Contents = deserializeAws_restXmlObjectList(__getArrayIfSingleItem(data[\"Contents\"]), context);\n          }\n\n          if (data[\"ContinuationToken\"] !== undefined) {\n            contents.ContinuationToken = data[\"ContinuationToken\"];\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = data[\"Delimiter\"];\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = data[\"EncodingType\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"KeyCount\"] !== undefined) {\n            contents.KeyCount = parseInt(data[\"KeyCount\"]);\n          }\n\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n          }\n\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = data[\"Name\"];\n          }\n\n          if (data[\"NextContinuationToken\"] !== undefined) {\n            contents.NextContinuationToken = data[\"NextContinuationToken\"];\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = data[\"Prefix\"];\n          }\n\n          if (data[\"StartAfter\"] !== undefined) {\n            contents.StartAfter = data[\"StartAfter\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListObjectsV2CommandError = function deserializeAws_restXmlListObjectsV2CommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchBucket\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListObjectVersionsCommand = function deserializeAws_restXmlListObjectVersionsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListObjectVersionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CommonPrefixes: undefined,\n            DeleteMarkers: undefined,\n            Delimiter: undefined,\n            EncodingType: undefined,\n            IsTruncated: undefined,\n            KeyMarker: undefined,\n            MaxKeys: undefined,\n            Name: undefined,\n            NextKeyMarker: undefined,\n            NextVersionIdMarker: undefined,\n            Prefix: undefined,\n            VersionIdMarker: undefined,\n            Versions: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data.CommonPrefixes === \"\") {\n            contents.CommonPrefixes = [];\n          }\n\n          if (data[\"CommonPrefixes\"] !== undefined) {\n            contents.CommonPrefixes = deserializeAws_restXmlCommonPrefixList(__getArrayIfSingleItem(data[\"CommonPrefixes\"]), context);\n          }\n\n          if (data.DeleteMarker === \"\") {\n            contents.DeleteMarkers = [];\n          }\n\n          if (data[\"DeleteMarker\"] !== undefined) {\n            contents.DeleteMarkers = deserializeAws_restXmlDeleteMarkers(__getArrayIfSingleItem(data[\"DeleteMarker\"]), context);\n          }\n\n          if (data[\"Delimiter\"] !== undefined) {\n            contents.Delimiter = data[\"Delimiter\"];\n          }\n\n          if (data[\"EncodingType\"] !== undefined) {\n            contents.EncodingType = data[\"EncodingType\"];\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"KeyMarker\"] !== undefined) {\n            contents.KeyMarker = data[\"KeyMarker\"];\n          }\n\n          if (data[\"MaxKeys\"] !== undefined) {\n            contents.MaxKeys = parseInt(data[\"MaxKeys\"]);\n          }\n\n          if (data[\"Name\"] !== undefined) {\n            contents.Name = data[\"Name\"];\n          }\n\n          if (data[\"NextKeyMarker\"] !== undefined) {\n            contents.NextKeyMarker = data[\"NextKeyMarker\"];\n          }\n\n          if (data[\"NextVersionIdMarker\"] !== undefined) {\n            contents.NextVersionIdMarker = data[\"NextVersionIdMarker\"];\n          }\n\n          if (data[\"Prefix\"] !== undefined) {\n            contents.Prefix = data[\"Prefix\"];\n          }\n\n          if (data[\"VersionIdMarker\"] !== undefined) {\n            contents.VersionIdMarker = data[\"VersionIdMarker\"];\n          }\n\n          if (data.Version === \"\") {\n            contents.Versions = [];\n          }\n\n          if (data[\"Version\"] !== undefined) {\n            contents.Versions = deserializeAws_restXmlObjectVersionList(__getArrayIfSingleItem(data[\"Version\"]), context);\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListObjectVersionsCommandError = function deserializeAws_restXmlListObjectVersionsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlListPartsCommand = function deserializeAws_restXmlListPartsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlListPartsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AbortDate: undefined,\n            AbortRuleId: undefined,\n            Bucket: undefined,\n            Initiator: undefined,\n            IsTruncated: undefined,\n            Key: undefined,\n            MaxParts: undefined,\n            NextPartNumberMarker: undefined,\n            Owner: undefined,\n            PartNumberMarker: undefined,\n            Parts: undefined,\n            RequestCharged: undefined,\n            StorageClass: undefined,\n            UploadId: undefined\n          };\n\n          if (output.headers[\"x-amz-abort-date\"] !== undefined) {\n            contents.AbortDate = new Date(output.headers[\"x-amz-abort-date\"]);\n          }\n\n          if (output.headers[\"x-amz-abort-rule-id\"] !== undefined) {\n            contents.AbortRuleId = output.headers[\"x-amz-abort-rule-id\"];\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n\n          if (data[\"Bucket\"] !== undefined) {\n            contents.Bucket = data[\"Bucket\"];\n          }\n\n          if (data[\"Initiator\"] !== undefined) {\n            contents.Initiator = deserializeAws_restXmlInitiator(data[\"Initiator\"], context);\n          }\n\n          if (data[\"IsTruncated\"] !== undefined) {\n            contents.IsTruncated = data[\"IsTruncated\"] == \"true\";\n          }\n\n          if (data[\"Key\"] !== undefined) {\n            contents.Key = data[\"Key\"];\n          }\n\n          if (data[\"MaxParts\"] !== undefined) {\n            contents.MaxParts = parseInt(data[\"MaxParts\"]);\n          }\n\n          if (data[\"NextPartNumberMarker\"] !== undefined) {\n            contents.NextPartNumberMarker = data[\"NextPartNumberMarker\"];\n          }\n\n          if (data[\"Owner\"] !== undefined) {\n            contents.Owner = deserializeAws_restXmlOwner(data[\"Owner\"], context);\n          }\n\n          if (data[\"PartNumberMarker\"] !== undefined) {\n            contents.PartNumberMarker = data[\"PartNumberMarker\"];\n          }\n\n          if (data.Part === \"\") {\n            contents.Parts = [];\n          }\n\n          if (data[\"Part\"] !== undefined) {\n            contents.Parts = deserializeAws_restXmlParts(__getArrayIfSingleItem(data[\"Part\"]), context);\n          }\n\n          if (data[\"StorageClass\"] !== undefined) {\n            contents.StorageClass = data[\"StorageClass\"];\n          }\n\n          if (data[\"UploadId\"] !== undefined) {\n            contents.UploadId = data[\"UploadId\"];\n          }\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlListPartsCommandError = function deserializeAws_restXmlListPartsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketAccelerateConfigurationCommand = function deserializeAws_restXmlPutBucketAccelerateConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError = function deserializeAws_restXmlPutBucketAccelerateConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketAclCommand = function deserializeAws_restXmlPutBucketAclCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketAclCommandError = function deserializeAws_restXmlPutBucketAclCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand = function deserializeAws_restXmlPutBucketAnalyticsConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError = function deserializeAws_restXmlPutBucketAnalyticsConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketCorsCommand = function deserializeAws_restXmlPutBucketCorsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketCorsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketCorsCommandError = function deserializeAws_restXmlPutBucketCorsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketEncryptionCommand = function deserializeAws_restXmlPutBucketEncryptionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketEncryptionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketEncryptionCommandError = function deserializeAws_restXmlPutBucketEncryptionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand = function deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError = function deserializeAws_restXmlPutBucketIntelligentTieringConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketInventoryConfigurationCommand = function deserializeAws_restXmlPutBucketInventoryConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketInventoryConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketInventoryConfigurationCommandError = function deserializeAws_restXmlPutBucketInventoryConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketLifecycleConfigurationCommand = function deserializeAws_restXmlPutBucketLifecycleConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError = function deserializeAws_restXmlPutBucketLifecycleConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketLoggingCommand = function deserializeAws_restXmlPutBucketLoggingCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketLoggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketLoggingCommandError = function deserializeAws_restXmlPutBucketLoggingCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketMetricsConfigurationCommand = function deserializeAws_restXmlPutBucketMetricsConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketMetricsConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketMetricsConfigurationCommandError = function deserializeAws_restXmlPutBucketMetricsConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketNotificationConfigurationCommand = function deserializeAws_restXmlPutBucketNotificationConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketNotificationConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketNotificationConfigurationCommandError = function deserializeAws_restXmlPutBucketNotificationConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketOwnershipControlsCommand = function deserializeAws_restXmlPutBucketOwnershipControlsCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketOwnershipControlsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketOwnershipControlsCommandError = function deserializeAws_restXmlPutBucketOwnershipControlsCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketPolicyCommand = function deserializeAws_restXmlPutBucketPolicyCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketPolicyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketPolicyCommandError = function deserializeAws_restXmlPutBucketPolicyCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketReplicationCommand = function deserializeAws_restXmlPutBucketReplicationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketReplicationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketReplicationCommandError = function deserializeAws_restXmlPutBucketReplicationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketRequestPaymentCommand = function deserializeAws_restXmlPutBucketRequestPaymentCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketRequestPaymentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketRequestPaymentCommandError = function deserializeAws_restXmlPutBucketRequestPaymentCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketTaggingCommand = function deserializeAws_restXmlPutBucketTaggingCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketTaggingCommandError = function deserializeAws_restXmlPutBucketTaggingCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketVersioningCommand = function deserializeAws_restXmlPutBucketVersioningCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketVersioningCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketVersioningCommandError = function deserializeAws_restXmlPutBucketVersioningCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutBucketWebsiteCommand = function deserializeAws_restXmlPutBucketWebsiteCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutBucketWebsiteCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutBucketWebsiteCommandError = function deserializeAws_restXmlPutBucketWebsiteCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectCommand = function deserializeAws_restXmlPutObjectCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BucketKeyEnabled: undefined,\n            ETag: undefined,\n            Expiration: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSEncryptionContext: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined,\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-expiration\"] !== undefined) {\n            contents.Expiration = output.headers[\"x-amz-expiration\"];\n          }\n\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-context\"] !== undefined) {\n            contents.SSEKMSEncryptionContext = output.headers[\"x-amz-server-side-encryption-context\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectCommandError = function deserializeAws_restXmlPutObjectCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectAclCommand = function deserializeAws_restXmlPutObjectAclCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectAclCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectAclCommandError = function deserializeAws_restXmlPutObjectAclCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#NoSuchKey\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectLegalHoldCommand = function deserializeAws_restXmlPutObjectLegalHoldCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectLegalHoldCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectLegalHoldCommandError = function deserializeAws_restXmlPutObjectLegalHoldCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectLockConfigurationCommand = function deserializeAws_restXmlPutObjectLockConfigurationCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectLockConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectLockConfigurationCommandError = function deserializeAws_restXmlPutObjectLockConfigurationCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectRetentionCommand = function deserializeAws_restXmlPutObjectRetentionCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectRetentionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectRetentionCommandError = function deserializeAws_restXmlPutObjectRetentionCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutObjectTaggingCommand = function deserializeAws_restXmlPutObjectTaggingCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutObjectTaggingCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VersionId: undefined\n          };\n\n          if (output.headers[\"x-amz-version-id\"] !== undefined) {\n            contents.VersionId = output.headers[\"x-amz-version-id\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutObjectTaggingCommandError = function deserializeAws_restXmlPutObjectTaggingCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlPutPublicAccessBlockCommand = function deserializeAws_restXmlPutPublicAccessBlockCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlPutPublicAccessBlockCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlPutPublicAccessBlockCommandError = function deserializeAws_restXmlPutPublicAccessBlockCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlRestoreObjectCommand = function deserializeAws_restXmlRestoreObjectCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlRestoreObjectCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RequestCharged: undefined,\n            RestoreOutputPath: undefined\n          };\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          if (output.headers[\"x-amz-restore-output-path\"] !== undefined) {\n            contents.RestoreOutputPath = output.headers[\"x-amz-restore-output-path\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlRestoreObjectCommandError = function deserializeAws_restXmlRestoreObjectCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"ObjectAlreadyInActiveTierError\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.s3#ObjectAlreadyInActiveTierError\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlSelectObjectContentCommand = function deserializeAws_restXmlSelectObjectContentCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2\n        /*return*/\n        , deserializeAws_restXmlSelectObjectContentCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        Payload: undefined\n      };\n      data = context.eventStreamMarshaller.deserialize(output.body, function (event) {\n        return __awaiter(void 0, void 0, void 0, function () {\n          var eventName, eventHeaders, eventMessage, parsedEvent;\n\n          var _a;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                eventName = Object.keys(event)[0];\n                eventHeaders = Object.entries(event[eventName].headers).reduce(function (accummulator, curr) {\n                  accummulator[curr[0]] = curr[1].value;\n                  return accummulator;\n                }, {});\n                eventMessage = {\n                  headers: eventHeaders,\n                  body: event[eventName].body\n                };\n                parsedEvent = (_a = {}, _a[eventName] = eventMessage, _a);\n                return [4\n                /*yield*/\n                , deserializeAws_restXmlSelectObjectContentEventStream_event(parsedEvent, context)];\n\n              case 1:\n                return [2\n                /*return*/\n                , _b.sent()];\n            }\n          });\n        });\n      });\n      contents.Payload = data;\n      return [2\n      /*return*/\n      , Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restXmlSelectObjectContentCommandError = function deserializeAws_restXmlSelectObjectContentCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlUploadPartCommand = function deserializeAws_restXmlUploadPartCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlUploadPartCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BucketKeyEnabled: undefined,\n            ETag: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined\n          };\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"etag\"] !== undefined) {\n            contents.ETag = output.headers[\"etag\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlUploadPartCommandError = function deserializeAws_restXmlUploadPartCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restXmlUploadPartCopyCommand = function deserializeAws_restXmlUploadPartCopyCommand(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restXmlUploadPartCopyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BucketKeyEnabled: undefined,\n            CopyPartResult: undefined,\n            CopySourceVersionId: undefined,\n            RequestCharged: undefined,\n            SSECustomerAlgorithm: undefined,\n            SSECustomerKeyMD5: undefined,\n            SSEKMSKeyId: undefined,\n            ServerSideEncryption: undefined\n          };\n\n          if (output.headers[\"x-amz-copy-source-version-id\"] !== undefined) {\n            contents.CopySourceVersionId = output.headers[\"x-amz-copy-source-version-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption\"] !== undefined) {\n            contents.ServerSideEncryption = output.headers[\"x-amz-server-side-encryption\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-algorithm\"] !== undefined) {\n            contents.SSECustomerAlgorithm = output.headers[\"x-amz-server-side-encryption-customer-algorithm\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-customer-key-md5\"] !== undefined) {\n            contents.SSECustomerKeyMD5 = output.headers[\"x-amz-server-side-encryption-customer-key-md5\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"] !== undefined) {\n            contents.SSEKMSKeyId = output.headers[\"x-amz-server-side-encryption-aws-kms-key-id\"];\n          }\n\n          if (output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] !== undefined) {\n            contents.BucketKeyEnabled = output.headers[\"x-amz-server-side-encryption-bucket-key-enabled\"] === \"true\";\n          }\n\n          if (output.headers[\"x-amz-request-charged\"] !== undefined) {\n            contents.RequestCharged = output.headers[\"x-amz-request-charged\"];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CopyPartResult = deserializeAws_restXmlCopyPartResult(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlUploadPartCopyCommandError = function deserializeAws_restXmlUploadPartCopyCommandError(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestXmlErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlSelectObjectContentEventStream_event = function deserializeAws_restXmlSelectObjectContentEventStream_event(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, _b, _c, _d, _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          if (!(output[\"Records\"] !== undefined)) return [3\n          /*break*/\n          , 2];\n          _a = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlRecordsEvent_event(output[\"Records\"], context)];\n\n        case 1:\n          return [2\n          /*return*/\n          , (_a.Records = _f.sent(), _a)];\n\n        case 2:\n          if (!(output[\"Stats\"] !== undefined)) return [3\n          /*break*/\n          , 4];\n          _b = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlStatsEvent_event(output[\"Stats\"], context)];\n\n        case 3:\n          return [2\n          /*return*/\n          , (_b.Stats = _f.sent(), _b)];\n\n        case 4:\n          if (!(output[\"Progress\"] !== undefined)) return [3\n          /*break*/\n          , 6];\n          _c = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlProgressEvent_event(output[\"Progress\"], context)];\n\n        case 5:\n          return [2\n          /*return*/\n          , (_c.Progress = _f.sent(), _c)];\n\n        case 6:\n          if (!(output[\"Cont\"] !== undefined)) return [3\n          /*break*/\n          , 8];\n          _d = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlContinuationEvent_event(output[\"Cont\"], context)];\n\n        case 7:\n          return [2\n          /*return*/\n          , (_d.Cont = _f.sent(), _d)];\n\n        case 8:\n          if (!(output[\"End\"] !== undefined)) return [3\n          /*break*/\n          , 10];\n          _e = {};\n          return [4\n          /*yield*/\n          , deserializeAws_restXmlEndEvent_event(output[\"End\"], context)];\n\n        case 9:\n          return [2\n          /*return*/\n          , (_e.End = _f.sent(), _e)];\n\n        case 10:\n          return [2\n          /*return*/\n          , {\n            $unknown: output\n          }];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlContinuationEvent_event = function deserializeAws_restXmlContinuationEvent_event(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {};\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlEndEvent_event = function deserializeAws_restXmlEndEvent_event(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {};\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlProgressEvent_event = function deserializeAws_restXmlProgressEvent_event(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          contents = {};\n          _a = contents;\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          _a.Details = _b.sent();\n          return [2\n          /*return*/\n          , contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlRecordsEvent_event = function deserializeAws_restXmlRecordsEvent_event(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      contents = {};\n      contents.Payload = output.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlStatsEvent_event = function deserializeAws_restXmlStatsEvent_event(output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, _a;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          contents = {};\n          _a = contents;\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          _a.Details = _b.sent();\n          return [2\n          /*return*/\n          , contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restXmlBucketAlreadyExistsResponse = function deserializeAws_restXmlBucketAlreadyExistsResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BucketAlreadyExists\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlBucketAlreadyOwnedByYouResponse = function deserializeAws_restXmlBucketAlreadyOwnedByYouResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BucketAlreadyOwnedByYou\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlInvalidObjectStateResponse = function deserializeAws_restXmlInvalidObjectStateResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InvalidObjectState\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        AccessTier: undefined,\n        StorageClass: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data[\"AccessTier\"] !== undefined) {\n        contents.AccessTier = data[\"AccessTier\"];\n      }\n\n      if (data[\"StorageClass\"] !== undefined) {\n        contents.StorageClass = data[\"StorageClass\"];\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlNoSuchBucketResponse = function deserializeAws_restXmlNoSuchBucketResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NoSuchBucket\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlNoSuchKeyResponse = function deserializeAws_restXmlNoSuchKeyResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NoSuchKey\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlNoSuchUploadResponse = function deserializeAws_restXmlNoSuchUploadResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NoSuchUpload\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse = function deserializeAws_restXmlObjectAlreadyInActiveTierErrorResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ObjectAlreadyInActiveTierError\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restXmlObjectNotInActiveTierErrorResponse = function deserializeAws_restXmlObjectNotInActiveTierErrorResponse(parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ObjectNotInActiveTierError\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      };\n      data = parsedOutput.body;\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar serializeAws_restXmlAbortIncompleteMultipartUpload = function serializeAws_restXmlAbortIncompleteMultipartUpload(input, context) {\n  var bodyNode = new __XmlNode(\"AbortIncompleteMultipartUpload\");\n\n  if (input.DaysAfterInitiation !== undefined && input.DaysAfterInitiation !== null) {\n    var node = new __XmlNode(\"DaysAfterInitiation\").addChildNode(new __XmlText(String(input.DaysAfterInitiation))).withName(\"DaysAfterInitiation\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAccelerateConfiguration = function serializeAws_restXmlAccelerateConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"AccelerateConfiguration\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"BucketAccelerateStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAccessControlPolicy = function serializeAws_restXmlAccessControlPolicy(input, context) {\n  var bodyNode = new __XmlNode(\"AccessControlPolicy\");\n\n  if (input.Grants !== undefined && input.Grants !== null) {\n    var nodes = serializeAws_restXmlGrants(input.Grants, context);\n    var containerNode_1 = new __XmlNode(\"AccessControlList\");\n    nodes.map(function (node) {\n      containerNode_1.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_1);\n  }\n\n  if (input.Owner !== undefined && input.Owner !== null) {\n    var node = serializeAws_restXmlOwner(input.Owner, context).withName(\"Owner\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAccessControlTranslation = function serializeAws_restXmlAccessControlTranslation(input, context) {\n  var bodyNode = new __XmlNode(\"AccessControlTranslation\");\n\n  if (input.Owner !== undefined && input.Owner !== null) {\n    var node = new __XmlNode(\"OwnerOverride\").addChildNode(new __XmlText(input.Owner)).withName(\"Owner\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAllowedHeaders = function serializeAws_restXmlAllowedHeaders(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"AllowedHeader\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlAllowedMethods = function serializeAws_restXmlAllowedMethods(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"AllowedMethod\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlAllowedOrigins = function serializeAws_restXmlAllowedOrigins(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"AllowedOrigin\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlAnalyticsAndOperator = function serializeAws_restXmlAnalyticsAndOperator(input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsAndOperator\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsConfiguration = function serializeAws_restXmlAnalyticsConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"AnalyticsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlAnalyticsFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClassAnalysis !== undefined && input.StorageClassAnalysis !== null) {\n    var node = serializeAws_restXmlStorageClassAnalysis(input.StorageClassAnalysis, context).withName(\"StorageClassAnalysis\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsExportDestination = function serializeAws_restXmlAnalyticsExportDestination(input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsExportDestination\");\n\n  if (input.S3BucketDestination !== undefined && input.S3BucketDestination !== null) {\n    var node = serializeAws_restXmlAnalyticsS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsFilter = function serializeAws_restXmlAnalyticsFilter(input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsFilter\");\n  AnalyticsFilter.visit(input, {\n    Prefix: function Prefix(value) {\n      var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: function Tag(value) {\n      var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    And: function And(value) {\n      var node = serializeAws_restXmlAnalyticsAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: function _(name, value) {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    }\n  });\n  return bodyNode;\n};\n\nvar serializeAws_restXmlAnalyticsS3BucketDestination = function serializeAws_restXmlAnalyticsS3BucketDestination(input, context) {\n  var bodyNode = new __XmlNode(\"AnalyticsS3BucketDestination\");\n\n  if (input.Format !== undefined && input.Format !== null) {\n    var node = new __XmlNode(\"AnalyticsS3ExportFileFormat\").addChildNode(new __XmlText(input.Format)).withName(\"Format\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.BucketAccountId !== undefined && input.BucketAccountId !== null) {\n    var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.BucketAccountId)).withName(\"BucketAccountId\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Bucket !== undefined && input.Bucket !== null) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlBucketLifecycleConfiguration = function serializeAws_restXmlBucketLifecycleConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"BucketLifecycleConfiguration\");\n\n  if (input.Rules !== undefined && input.Rules !== null) {\n    var nodes = serializeAws_restXmlLifecycleRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlBucketLoggingStatus = function serializeAws_restXmlBucketLoggingStatus(input, context) {\n  var bodyNode = new __XmlNode(\"BucketLoggingStatus\");\n\n  if (input.LoggingEnabled !== undefined && input.LoggingEnabled !== null) {\n    var node = serializeAws_restXmlLoggingEnabled(input.LoggingEnabled, context).withName(\"LoggingEnabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCompletedMultipartUpload = function serializeAws_restXmlCompletedMultipartUpload(input, context) {\n  var bodyNode = new __XmlNode(\"CompletedMultipartUpload\");\n\n  if (input.Parts !== undefined && input.Parts !== null) {\n    var nodes = serializeAws_restXmlCompletedPartList(input.Parts, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Part\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCompletedPart = function serializeAws_restXmlCompletedPart(input, context) {\n  var bodyNode = new __XmlNode(\"CompletedPart\");\n\n  if (input.ETag !== undefined && input.ETag !== null) {\n    var node = new __XmlNode(\"ETag\").addChildNode(new __XmlText(input.ETag)).withName(\"ETag\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.PartNumber !== undefined && input.PartNumber !== null) {\n    var node = new __XmlNode(\"PartNumber\").addChildNode(new __XmlText(String(input.PartNumber))).withName(\"PartNumber\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCompletedPartList = function serializeAws_restXmlCompletedPartList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlCompletedPart(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlCondition = function serializeAws_restXmlCondition(input, context) {\n  var bodyNode = new __XmlNode(\"Condition\");\n\n  if (input.HttpErrorCodeReturnedEquals !== undefined && input.HttpErrorCodeReturnedEquals !== null) {\n    var node = new __XmlNode(\"HttpErrorCodeReturnedEquals\").addChildNode(new __XmlText(input.HttpErrorCodeReturnedEquals)).withName(\"HttpErrorCodeReturnedEquals\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.KeyPrefixEquals !== undefined && input.KeyPrefixEquals !== null) {\n    var node = new __XmlNode(\"KeyPrefixEquals\").addChildNode(new __XmlText(input.KeyPrefixEquals)).withName(\"KeyPrefixEquals\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCORSConfiguration = function serializeAws_restXmlCORSConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"CORSConfiguration\");\n\n  if (input.CORSRules !== undefined && input.CORSRules !== null) {\n    var nodes = serializeAws_restXmlCORSRules(input.CORSRules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"CORSRule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCORSRule = function serializeAws_restXmlCORSRule(input, context) {\n  var bodyNode = new __XmlNode(\"CORSRule\");\n\n  if (input.AllowedHeaders !== undefined && input.AllowedHeaders !== null) {\n    var nodes = serializeAws_restXmlAllowedHeaders(input.AllowedHeaders, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedHeader\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.AllowedMethods !== undefined && input.AllowedMethods !== null) {\n    var nodes = serializeAws_restXmlAllowedMethods(input.AllowedMethods, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedMethod\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.AllowedOrigins !== undefined && input.AllowedOrigins !== null) {\n    var nodes = serializeAws_restXmlAllowedOrigins(input.AllowedOrigins, context);\n    nodes.map(function (node) {\n      node = node.withName(\"AllowedOrigin\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.ExposeHeaders !== undefined && input.ExposeHeaders !== null) {\n    var nodes = serializeAws_restXmlExposeHeaders(input.ExposeHeaders, context);\n    nodes.map(function (node) {\n      node = node.withName(\"ExposeHeader\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.MaxAgeSeconds !== undefined && input.MaxAgeSeconds !== null) {\n    var node = new __XmlNode(\"MaxAgeSeconds\").addChildNode(new __XmlText(String(input.MaxAgeSeconds))).withName(\"MaxAgeSeconds\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCORSRules = function serializeAws_restXmlCORSRules(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlCORSRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlCreateBucketConfiguration = function serializeAws_restXmlCreateBucketConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"CreateBucketConfiguration\");\n\n  if (input.LocationConstraint !== undefined && input.LocationConstraint !== null) {\n    var node = new __XmlNode(\"BucketLocationConstraint\").addChildNode(new __XmlText(input.LocationConstraint)).withName(\"LocationConstraint\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCSVInput = function serializeAws_restXmlCSVInput(input, context) {\n  var bodyNode = new __XmlNode(\"CSVInput\");\n\n  if (input.FileHeaderInfo !== undefined && input.FileHeaderInfo !== null) {\n    var node = new __XmlNode(\"FileHeaderInfo\").addChildNode(new __XmlText(input.FileHeaderInfo)).withName(\"FileHeaderInfo\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Comments !== undefined && input.Comments !== null) {\n    var node = new __XmlNode(\"Comments\").addChildNode(new __XmlText(input.Comments)).withName(\"Comments\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteEscapeCharacter !== undefined && input.QuoteEscapeCharacter !== null) {\n    var node = new __XmlNode(\"QuoteEscapeCharacter\").addChildNode(new __XmlText(input.QuoteEscapeCharacter)).withName(\"QuoteEscapeCharacter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n    var node = new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.FieldDelimiter !== undefined && input.FieldDelimiter !== null) {\n    var node = new __XmlNode(\"FieldDelimiter\").addChildNode(new __XmlText(input.FieldDelimiter)).withName(\"FieldDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteCharacter !== undefined && input.QuoteCharacter !== null) {\n    var node = new __XmlNode(\"QuoteCharacter\").addChildNode(new __XmlText(input.QuoteCharacter)).withName(\"QuoteCharacter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AllowQuotedRecordDelimiter !== undefined && input.AllowQuotedRecordDelimiter !== null) {\n    var node = new __XmlNode(\"AllowQuotedRecordDelimiter\").addChildNode(new __XmlText(String(input.AllowQuotedRecordDelimiter))).withName(\"AllowQuotedRecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlCSVOutput = function serializeAws_restXmlCSVOutput(input, context) {\n  var bodyNode = new __XmlNode(\"CSVOutput\");\n\n  if (input.QuoteFields !== undefined && input.QuoteFields !== null) {\n    var node = new __XmlNode(\"QuoteFields\").addChildNode(new __XmlText(input.QuoteFields)).withName(\"QuoteFields\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteEscapeCharacter !== undefined && input.QuoteEscapeCharacter !== null) {\n    var node = new __XmlNode(\"QuoteEscapeCharacter\").addChildNode(new __XmlText(input.QuoteEscapeCharacter)).withName(\"QuoteEscapeCharacter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n    var node = new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.FieldDelimiter !== undefined && input.FieldDelimiter !== null) {\n    var node = new __XmlNode(\"FieldDelimiter\").addChildNode(new __XmlText(input.FieldDelimiter)).withName(\"FieldDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QuoteCharacter !== undefined && input.QuoteCharacter !== null) {\n    var node = new __XmlNode(\"QuoteCharacter\").addChildNode(new __XmlText(input.QuoteCharacter)).withName(\"QuoteCharacter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDefaultRetention = function serializeAws_restXmlDefaultRetention(input, context) {\n  var bodyNode = new __XmlNode(\"DefaultRetention\");\n\n  if (input.Mode !== undefined && input.Mode !== null) {\n    var node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Years !== undefined && input.Years !== null) {\n    var node = new __XmlNode(\"Years\").addChildNode(new __XmlText(String(input.Years))).withName(\"Years\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDelete = function serializeAws_restXmlDelete(input, context) {\n  var bodyNode = new __XmlNode(\"Delete\");\n\n  if (input.Objects !== undefined && input.Objects !== null) {\n    var nodes = serializeAws_restXmlObjectIdentifierList(input.Objects, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Object\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Quiet !== undefined && input.Quiet !== null) {\n    var node = new __XmlNode(\"Quiet\").addChildNode(new __XmlText(String(input.Quiet))).withName(\"Quiet\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDeleteMarkerReplication = function serializeAws_restXmlDeleteMarkerReplication(input, context) {\n  var bodyNode = new __XmlNode(\"DeleteMarkerReplication\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"DeleteMarkerReplicationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlDestination = function serializeAws_restXmlDestination(input, context) {\n  var bodyNode = new __XmlNode(\"Destination\");\n\n  if (input.Bucket !== undefined && input.Bucket !== null) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Account !== undefined && input.Account !== null) {\n    var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.Account)).withName(\"Account\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    var node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AccessControlTranslation !== undefined && input.AccessControlTranslation !== null) {\n    var node = serializeAws_restXmlAccessControlTranslation(input.AccessControlTranslation, context).withName(\"AccessControlTranslation\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.EncryptionConfiguration !== undefined && input.EncryptionConfiguration !== null) {\n    var node = serializeAws_restXmlEncryptionConfiguration(input.EncryptionConfiguration, context).withName(\"EncryptionConfiguration\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ReplicationTime !== undefined && input.ReplicationTime !== null) {\n    var node = serializeAws_restXmlReplicationTime(input.ReplicationTime, context).withName(\"ReplicationTime\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Metrics !== undefined && input.Metrics !== null) {\n    var node = serializeAws_restXmlMetrics(input.Metrics, context).withName(\"Metrics\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlEncryption = function serializeAws_restXmlEncryption(input, context) {\n  var bodyNode = new __XmlNode(\"Encryption\");\n\n  if (input.EncryptionType !== undefined && input.EncryptionType !== null) {\n    var node = new __XmlNode(\"ServerSideEncryption\").addChildNode(new __XmlText(input.EncryptionType)).withName(\"EncryptionType\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.KMSKeyId !== undefined && input.KMSKeyId !== null) {\n    var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KMSKeyId)).withName(\"KMSKeyId\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.KMSContext !== undefined && input.KMSContext !== null) {\n    var node = new __XmlNode(\"KMSContext\").addChildNode(new __XmlText(input.KMSContext)).withName(\"KMSContext\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlEncryptionConfiguration = function serializeAws_restXmlEncryptionConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"EncryptionConfiguration\");\n\n  if (input.ReplicaKmsKeyID !== undefined && input.ReplicaKmsKeyID !== null) {\n    var node = new __XmlNode(\"ReplicaKmsKeyID\").addChildNode(new __XmlText(input.ReplicaKmsKeyID)).withName(\"ReplicaKmsKeyID\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlErrorDocument = function serializeAws_restXmlErrorDocument(input, context) {\n  var bodyNode = new __XmlNode(\"ErrorDocument\");\n\n  if (input.Key !== undefined && input.Key !== null) {\n    var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlEventList = function serializeAws_restXmlEventList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"Event\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlExistingObjectReplication = function serializeAws_restXmlExistingObjectReplication(input, context) {\n  var bodyNode = new __XmlNode(\"ExistingObjectReplication\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ExistingObjectReplicationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlExposeHeaders = function serializeAws_restXmlExposeHeaders(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"ExposeHeader\").addChildNode(new __XmlText(entry));\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlFilterRule = function serializeAws_restXmlFilterRule(input, context) {\n  var bodyNode = new __XmlNode(\"FilterRule\");\n\n  if (input.Name !== undefined && input.Name !== null) {\n    var node = new __XmlNode(\"FilterRuleName\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Value !== undefined && input.Value !== null) {\n    var node = new __XmlNode(\"FilterRuleValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlFilterRuleList = function serializeAws_restXmlFilterRuleList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlFilterRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlGlacierJobParameters = function serializeAws_restXmlGlacierJobParameters(input, context) {\n  var bodyNode = new __XmlNode(\"GlacierJobParameters\");\n\n  if (input.Tier !== undefined && input.Tier !== null) {\n    var node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlGrant = function serializeAws_restXmlGrant(input, context) {\n  var bodyNode = new __XmlNode(\"Grant\");\n\n  if (input.Grantee !== undefined && input.Grantee !== null) {\n    var node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Permission !== undefined && input.Permission !== null) {\n    var node = new __XmlNode(\"Permission\").addChildNode(new __XmlText(input.Permission)).withName(\"Permission\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlGrantee = function serializeAws_restXmlGrantee(input, context) {\n  var bodyNode = new __XmlNode(\"Grantee\");\n\n  if (input.DisplayName !== undefined && input.DisplayName !== null) {\n    var node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.EmailAddress !== undefined && input.EmailAddress !== null) {\n    var node = new __XmlNode(\"EmailAddress\").addChildNode(new __XmlText(input.EmailAddress)).withName(\"EmailAddress\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.URI !== undefined && input.URI !== null) {\n    var node = new __XmlNode(\"URI\").addChildNode(new __XmlText(input.URI)).withName(\"URI\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Type !== undefined && input.Type !== null) {\n    bodyNode.addAttribute(\"xsi:type\", input.Type);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlGrants = function serializeAws_restXmlGrants(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlGrant(entry, context);\n    return node.withName(\"Grant\");\n  });\n};\n\nvar serializeAws_restXmlIndexDocument = function serializeAws_restXmlIndexDocument(input, context) {\n  var bodyNode = new __XmlNode(\"IndexDocument\");\n\n  if (input.Suffix !== undefined && input.Suffix !== null) {\n    var node = new __XmlNode(\"Suffix\").addChildNode(new __XmlText(input.Suffix)).withName(\"Suffix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInputSerialization = function serializeAws_restXmlInputSerialization(input, context) {\n  var bodyNode = new __XmlNode(\"InputSerialization\");\n\n  if (input.CSV !== undefined && input.CSV !== null) {\n    var node = serializeAws_restXmlCSVInput(input.CSV, context).withName(\"CSV\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.CompressionType !== undefined && input.CompressionType !== null) {\n    var node = new __XmlNode(\"CompressionType\").addChildNode(new __XmlText(input.CompressionType)).withName(\"CompressionType\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.JSON !== undefined && input.JSON !== null) {\n    var node = serializeAws_restXmlJSONInput(input.JSON, context).withName(\"JSON\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Parquet !== undefined && input.Parquet !== null) {\n    var node = serializeAws_restXmlParquetInput(input.Parquet, context).withName(\"Parquet\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlIntelligentTieringAndOperator = function serializeAws_restXmlIntelligentTieringAndOperator(input, context) {\n  var bodyNode = new __XmlNode(\"IntelligentTieringAndOperator\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlIntelligentTieringConfiguration = function serializeAws_restXmlIntelligentTieringConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"IntelligentTieringConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"IntelligentTieringId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlIntelligentTieringFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"IntelligentTieringStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tierings !== undefined && input.Tierings !== null) {\n    var nodes = serializeAws_restXmlTieringList(input.Tierings, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tiering\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlIntelligentTieringFilter = function serializeAws_restXmlIntelligentTieringFilter(input, context) {\n  var bodyNode = new __XmlNode(\"IntelligentTieringFilter\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tag !== undefined && input.Tag !== null) {\n    var node = serializeAws_restXmlTag(input.Tag, context).withName(\"Tag\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.And !== undefined && input.And !== null) {\n    var node = serializeAws_restXmlIntelligentTieringAndOperator(input.And, context).withName(\"And\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryConfiguration = function serializeAws_restXmlInventoryConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"InventoryConfiguration\");\n\n  if (input.Destination !== undefined && input.Destination !== null) {\n    var node = serializeAws_restXmlInventoryDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.IsEnabled !== undefined && input.IsEnabled !== null) {\n    var node = new __XmlNode(\"IsEnabled\").addChildNode(new __XmlText(String(input.IsEnabled))).withName(\"IsEnabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlInventoryFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"InventoryId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.IncludedObjectVersions !== undefined && input.IncludedObjectVersions !== null) {\n    var node = new __XmlNode(\"InventoryIncludedObjectVersions\").addChildNode(new __XmlText(input.IncludedObjectVersions)).withName(\"IncludedObjectVersions\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.OptionalFields !== undefined && input.OptionalFields !== null) {\n    var nodes = serializeAws_restXmlInventoryOptionalFields(input.OptionalFields, context);\n    var containerNode_2 = new __XmlNode(\"OptionalFields\");\n    nodes.map(function (node) {\n      containerNode_2.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_2);\n  }\n\n  if (input.Schedule !== undefined && input.Schedule !== null) {\n    var node = serializeAws_restXmlInventorySchedule(input.Schedule, context).withName(\"Schedule\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryDestination = function serializeAws_restXmlInventoryDestination(input, context) {\n  var bodyNode = new __XmlNode(\"InventoryDestination\");\n\n  if (input.S3BucketDestination !== undefined && input.S3BucketDestination !== null) {\n    var node = serializeAws_restXmlInventoryS3BucketDestination(input.S3BucketDestination, context).withName(\"S3BucketDestination\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryEncryption = function serializeAws_restXmlInventoryEncryption(input, context) {\n  var bodyNode = new __XmlNode(\"InventoryEncryption\");\n\n  if (input.SSES3 !== undefined && input.SSES3 !== null) {\n    var node = serializeAws_restXmlSSES3(input.SSES3, context).withName(\"SSE-S3\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.SSEKMS !== undefined && input.SSEKMS !== null) {\n    var node = serializeAws_restXmlSSEKMS(input.SSEKMS, context).withName(\"SSE-KMS\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryFilter = function serializeAws_restXmlInventoryFilter(input, context) {\n  var bodyNode = new __XmlNode(\"InventoryFilter\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventoryOptionalFields = function serializeAws_restXmlInventoryOptionalFields(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = new __XmlNode(\"InventoryOptionalField\").addChildNode(new __XmlText(entry));\n    return node.withName(\"Field\");\n  });\n};\n\nvar serializeAws_restXmlInventoryS3BucketDestination = function serializeAws_restXmlInventoryS3BucketDestination(input, context) {\n  var bodyNode = new __XmlNode(\"InventoryS3BucketDestination\");\n\n  if (input.AccountId !== undefined && input.AccountId !== null) {\n    var node = new __XmlNode(\"AccountId\").addChildNode(new __XmlText(input.AccountId)).withName(\"AccountId\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Bucket !== undefined && input.Bucket !== null) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.Bucket)).withName(\"Bucket\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Format !== undefined && input.Format !== null) {\n    var node = new __XmlNode(\"InventoryFormat\").addChildNode(new __XmlText(input.Format)).withName(\"Format\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Encryption !== undefined && input.Encryption !== null) {\n    var node = serializeAws_restXmlInventoryEncryption(input.Encryption, context).withName(\"Encryption\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlInventorySchedule = function serializeAws_restXmlInventorySchedule(input, context) {\n  var bodyNode = new __XmlNode(\"InventorySchedule\");\n\n  if (input.Frequency !== undefined && input.Frequency !== null) {\n    var node = new __XmlNode(\"InventoryFrequency\").addChildNode(new __XmlText(input.Frequency)).withName(\"Frequency\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlJSONInput = function serializeAws_restXmlJSONInput(input, context) {\n  var bodyNode = new __XmlNode(\"JSONInput\");\n\n  if (input.Type !== undefined && input.Type !== null) {\n    var node = new __XmlNode(\"JSONType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlJSONOutput = function serializeAws_restXmlJSONOutput(input, context) {\n  var bodyNode = new __XmlNode(\"JSONOutput\");\n\n  if (input.RecordDelimiter !== undefined && input.RecordDelimiter !== null) {\n    var node = new __XmlNode(\"RecordDelimiter\").addChildNode(new __XmlText(input.RecordDelimiter)).withName(\"RecordDelimiter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLambdaFunctionConfiguration = function serializeAws_restXmlLambdaFunctionConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"LambdaFunctionConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.LambdaFunctionArn !== undefined && input.LambdaFunctionArn !== null) {\n    var node = new __XmlNode(\"LambdaFunctionArn\").addChildNode(new __XmlText(input.LambdaFunctionArn)).withName(\"CloudFunction\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Events !== undefined && input.Events !== null) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLambdaFunctionConfigurationList = function serializeAws_restXmlLambdaFunctionConfigurationList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlLifecycleExpiration = function serializeAws_restXmlLifecycleExpiration(input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleExpiration\");\n\n  if (input.Date !== undefined && input.Date !== null) {\n    var node = new __XmlNode(\"Date\").addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\")).withName(\"Date\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ExpiredObjectDeleteMarker !== undefined && input.ExpiredObjectDeleteMarker !== null) {\n    var node = new __XmlNode(\"ExpiredObjectDeleteMarker\").addChildNode(new __XmlText(String(input.ExpiredObjectDeleteMarker))).withName(\"ExpiredObjectDeleteMarker\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRule = function serializeAws_restXmlLifecycleRule(input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRule\");\n\n  if (input.Expiration !== undefined && input.Expiration !== null) {\n    var node = serializeAws_restXmlLifecycleExpiration(input.Expiration, context).withName(\"Expiration\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlLifecycleRuleFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ExpirationStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Transitions !== undefined && input.Transitions !== null) {\n    var nodes = serializeAws_restXmlTransitionList(input.Transitions, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Transition\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.NoncurrentVersionTransitions !== undefined && input.NoncurrentVersionTransitions !== null) {\n    var nodes = serializeAws_restXmlNoncurrentVersionTransitionList(input.NoncurrentVersionTransitions, context);\n    nodes.map(function (node) {\n      node = node.withName(\"NoncurrentVersionTransition\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.NoncurrentVersionExpiration !== undefined && input.NoncurrentVersionExpiration !== null) {\n    var node = serializeAws_restXmlNoncurrentVersionExpiration(input.NoncurrentVersionExpiration, context).withName(\"NoncurrentVersionExpiration\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AbortIncompleteMultipartUpload !== undefined && input.AbortIncompleteMultipartUpload !== null) {\n    var node = serializeAws_restXmlAbortIncompleteMultipartUpload(input.AbortIncompleteMultipartUpload, context).withName(\"AbortIncompleteMultipartUpload\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRuleAndOperator = function serializeAws_restXmlLifecycleRuleAndOperator(input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRuleAndOperator\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRuleFilter = function serializeAws_restXmlLifecycleRuleFilter(input, context) {\n  var bodyNode = new __XmlNode(\"LifecycleRuleFilter\");\n  LifecycleRuleFilter.visit(input, {\n    Prefix: function Prefix(value) {\n      var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: function Tag(value) {\n      var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    And: function And(value) {\n      var node = serializeAws_restXmlLifecycleRuleAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: function _(name, value) {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    }\n  });\n  return bodyNode;\n};\n\nvar serializeAws_restXmlLifecycleRules = function serializeAws_restXmlLifecycleRules(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlLifecycleRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlLoggingEnabled = function serializeAws_restXmlLoggingEnabled(input, context) {\n  var bodyNode = new __XmlNode(\"LoggingEnabled\");\n\n  if (input.TargetBucket !== undefined && input.TargetBucket !== null) {\n    var node = new __XmlNode(\"TargetBucket\").addChildNode(new __XmlText(input.TargetBucket)).withName(\"TargetBucket\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.TargetGrants !== undefined && input.TargetGrants !== null) {\n    var nodes = serializeAws_restXmlTargetGrants(input.TargetGrants, context);\n    var containerNode_3 = new __XmlNode(\"TargetGrants\");\n    nodes.map(function (node) {\n      containerNode_3.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_3);\n  }\n\n  if (input.TargetPrefix !== undefined && input.TargetPrefix !== null) {\n    var node = new __XmlNode(\"TargetPrefix\").addChildNode(new __XmlText(input.TargetPrefix)).withName(\"TargetPrefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetadataEntry = function serializeAws_restXmlMetadataEntry(input, context) {\n  var bodyNode = new __XmlNode(\"MetadataEntry\");\n\n  if (input.Name !== undefined && input.Name !== null) {\n    var node = new __XmlNode(\"MetadataKey\").addChildNode(new __XmlText(input.Name)).withName(\"Name\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Value !== undefined && input.Value !== null) {\n    var node = new __XmlNode(\"MetadataValue\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetrics = function serializeAws_restXmlMetrics(input, context) {\n  var bodyNode = new __XmlNode(\"Metrics\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"MetricsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.EventThreshold !== undefined && input.EventThreshold !== null) {\n    var node = serializeAws_restXmlReplicationTimeValue(input.EventThreshold, context).withName(\"EventThreshold\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetricsAndOperator = function serializeAws_restXmlMetricsAndOperator(input, context) {\n  var bodyNode = new __XmlNode(\"MetricsAndOperator\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetricsConfiguration = function serializeAws_restXmlMetricsConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"MetricsConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"MetricsId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlMetricsFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlMetricsFilter = function serializeAws_restXmlMetricsFilter(input, context) {\n  var bodyNode = new __XmlNode(\"MetricsFilter\");\n  MetricsFilter.visit(input, {\n    Prefix: function Prefix(value) {\n      var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: function Tag(value) {\n      var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    And: function And(value) {\n      var node = serializeAws_restXmlMetricsAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: function _(name, value) {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    }\n  });\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNoncurrentVersionExpiration = function serializeAws_restXmlNoncurrentVersionExpiration(input, context) {\n  var bodyNode = new __XmlNode(\"NoncurrentVersionExpiration\");\n\n  if (input.NoncurrentDays !== undefined && input.NoncurrentDays !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.NoncurrentDays))).withName(\"NoncurrentDays\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNoncurrentVersionTransition = function serializeAws_restXmlNoncurrentVersionTransition(input, context) {\n  var bodyNode = new __XmlNode(\"NoncurrentVersionTransition\");\n\n  if (input.NoncurrentDays !== undefined && input.NoncurrentDays !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.NoncurrentDays))).withName(\"NoncurrentDays\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    var node = new __XmlNode(\"TransitionStorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNoncurrentVersionTransitionList = function serializeAws_restXmlNoncurrentVersionTransitionList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlNoncurrentVersionTransition(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlNotificationConfiguration = function serializeAws_restXmlNotificationConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"NotificationConfiguration\");\n\n  if (input.TopicConfigurations !== undefined && input.TopicConfigurations !== null) {\n    var nodes = serializeAws_restXmlTopicConfigurationList(input.TopicConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"TopicConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.QueueConfigurations !== undefined && input.QueueConfigurations !== null) {\n    var nodes = serializeAws_restXmlQueueConfigurationList(input.QueueConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"QueueConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.LambdaFunctionConfigurations !== undefined && input.LambdaFunctionConfigurations !== null) {\n    var nodes = serializeAws_restXmlLambdaFunctionConfigurationList(input.LambdaFunctionConfigurations, context);\n    nodes.map(function (node) {\n      node = node.withName(\"CloudFunctionConfiguration\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlNotificationConfigurationFilter = function serializeAws_restXmlNotificationConfigurationFilter(input, context) {\n  var bodyNode = new __XmlNode(\"NotificationConfigurationFilter\");\n\n  if (input.Key !== undefined && input.Key !== null) {\n    var node = serializeAws_restXmlS3KeyFilter(input.Key, context).withName(\"S3Key\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectIdentifier = function serializeAws_restXmlObjectIdentifier(input, context) {\n  var bodyNode = new __XmlNode(\"ObjectIdentifier\");\n\n  if (input.Key !== undefined && input.Key !== null) {\n    var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.VersionId !== undefined && input.VersionId !== null) {\n    var node = new __XmlNode(\"ObjectVersionId\").addChildNode(new __XmlText(input.VersionId)).withName(\"VersionId\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectIdentifierList = function serializeAws_restXmlObjectIdentifierList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlObjectIdentifier(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlObjectLockConfiguration = function serializeAws_restXmlObjectLockConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockConfiguration\");\n\n  if (input.ObjectLockEnabled !== undefined && input.ObjectLockEnabled !== null) {\n    var node = new __XmlNode(\"ObjectLockEnabled\").addChildNode(new __XmlText(input.ObjectLockEnabled)).withName(\"ObjectLockEnabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Rule !== undefined && input.Rule !== null) {\n    var node = serializeAws_restXmlObjectLockRule(input.Rule, context).withName(\"Rule\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectLockLegalHold = function serializeAws_restXmlObjectLockLegalHold(input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockLegalHold\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ObjectLockLegalHoldStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectLockRetention = function serializeAws_restXmlObjectLockRetention(input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockRetention\");\n\n  if (input.Mode !== undefined && input.Mode !== null) {\n    var node = new __XmlNode(\"ObjectLockRetentionMode\").addChildNode(new __XmlText(input.Mode)).withName(\"Mode\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RetainUntilDate !== undefined && input.RetainUntilDate !== null) {\n    var node = new __XmlNode(\"Date\").addChildNode(new __XmlText(input.RetainUntilDate.toISOString().split(\".\")[0] + \"Z\")).withName(\"RetainUntilDate\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlObjectLockRule = function serializeAws_restXmlObjectLockRule(input, context) {\n  var bodyNode = new __XmlNode(\"ObjectLockRule\");\n\n  if (input.DefaultRetention !== undefined && input.DefaultRetention !== null) {\n    var node = serializeAws_restXmlDefaultRetention(input.DefaultRetention, context).withName(\"DefaultRetention\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOutputLocation = function serializeAws_restXmlOutputLocation(input, context) {\n  var bodyNode = new __XmlNode(\"OutputLocation\");\n\n  if (input.S3 !== undefined && input.S3 !== null) {\n    var node = serializeAws_restXmlS3Location(input.S3, context).withName(\"S3\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOutputSerialization = function serializeAws_restXmlOutputSerialization(input, context) {\n  var bodyNode = new __XmlNode(\"OutputSerialization\");\n\n  if (input.CSV !== undefined && input.CSV !== null) {\n    var node = serializeAws_restXmlCSVOutput(input.CSV, context).withName(\"CSV\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.JSON !== undefined && input.JSON !== null) {\n    var node = serializeAws_restXmlJSONOutput(input.JSON, context).withName(\"JSON\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOwner = function serializeAws_restXmlOwner(input, context) {\n  var bodyNode = new __XmlNode(\"Owner\");\n\n  if (input.DisplayName !== undefined && input.DisplayName !== null) {\n    var node = new __XmlNode(\"DisplayName\").addChildNode(new __XmlText(input.DisplayName)).withName(\"DisplayName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOwnershipControls = function serializeAws_restXmlOwnershipControls(input, context) {\n  var bodyNode = new __XmlNode(\"OwnershipControls\");\n\n  if (input.Rules !== undefined && input.Rules !== null) {\n    var nodes = serializeAws_restXmlOwnershipControlsRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOwnershipControlsRule = function serializeAws_restXmlOwnershipControlsRule(input, context) {\n  var bodyNode = new __XmlNode(\"OwnershipControlsRule\");\n\n  if (input.ObjectOwnership !== undefined && input.ObjectOwnership !== null) {\n    var node = new __XmlNode(\"ObjectOwnership\").addChildNode(new __XmlText(input.ObjectOwnership)).withName(\"ObjectOwnership\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlOwnershipControlsRules = function serializeAws_restXmlOwnershipControlsRules(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlOwnershipControlsRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlParquetInput = function serializeAws_restXmlParquetInput(input, context) {\n  var bodyNode = new __XmlNode(\"ParquetInput\");\n  return bodyNode;\n};\n\nvar serializeAws_restXmlPublicAccessBlockConfiguration = function serializeAws_restXmlPublicAccessBlockConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"PublicAccessBlockConfiguration\");\n\n  if (input.BlockPublicAcls !== undefined && input.BlockPublicAcls !== null) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.BlockPublicAcls))).withName(\"BlockPublicAcls\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.IgnorePublicAcls !== undefined && input.IgnorePublicAcls !== null) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.IgnorePublicAcls))).withName(\"IgnorePublicAcls\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.BlockPublicPolicy !== undefined && input.BlockPublicPolicy !== null) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.BlockPublicPolicy))).withName(\"BlockPublicPolicy\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RestrictPublicBuckets !== undefined && input.RestrictPublicBuckets !== null) {\n    var node = new __XmlNode(\"Setting\").addChildNode(new __XmlText(String(input.RestrictPublicBuckets))).withName(\"RestrictPublicBuckets\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlQueueConfiguration = function serializeAws_restXmlQueueConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"QueueConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.QueueArn !== undefined && input.QueueArn !== null) {\n    var node = new __XmlNode(\"QueueArn\").addChildNode(new __XmlText(input.QueueArn)).withName(\"Queue\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Events !== undefined && input.Events !== null) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlQueueConfigurationList = function serializeAws_restXmlQueueConfigurationList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlQueueConfiguration(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlRedirect = function serializeAws_restXmlRedirect(input, context) {\n  var bodyNode = new __XmlNode(\"Redirect\");\n\n  if (input.HostName !== undefined && input.HostName !== null) {\n    var node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.HttpRedirectCode !== undefined && input.HttpRedirectCode !== null) {\n    var node = new __XmlNode(\"HttpRedirectCode\").addChildNode(new __XmlText(input.HttpRedirectCode)).withName(\"HttpRedirectCode\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Protocol !== undefined && input.Protocol !== null) {\n    var node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ReplaceKeyPrefixWith !== undefined && input.ReplaceKeyPrefixWith !== null) {\n    var node = new __XmlNode(\"ReplaceKeyPrefixWith\").addChildNode(new __XmlText(input.ReplaceKeyPrefixWith)).withName(\"ReplaceKeyPrefixWith\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ReplaceKeyWith !== undefined && input.ReplaceKeyWith !== null) {\n    var node = new __XmlNode(\"ReplaceKeyWith\").addChildNode(new __XmlText(input.ReplaceKeyWith)).withName(\"ReplaceKeyWith\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRedirectAllRequestsTo = function serializeAws_restXmlRedirectAllRequestsTo(input, context) {\n  var bodyNode = new __XmlNode(\"RedirectAllRequestsTo\");\n\n  if (input.HostName !== undefined && input.HostName !== null) {\n    var node = new __XmlNode(\"HostName\").addChildNode(new __XmlText(input.HostName)).withName(\"HostName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Protocol !== undefined && input.Protocol !== null) {\n    var node = new __XmlNode(\"Protocol\").addChildNode(new __XmlText(input.Protocol)).withName(\"Protocol\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicaModifications = function serializeAws_restXmlReplicaModifications(input, context) {\n  var bodyNode = new __XmlNode(\"ReplicaModifications\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ReplicaModificationsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationConfiguration = function serializeAws_restXmlReplicationConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationConfiguration\");\n\n  if (input.Role !== undefined && input.Role !== null) {\n    var node = new __XmlNode(\"Role\").addChildNode(new __XmlText(input.Role)).withName(\"Role\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Rules !== undefined && input.Rules !== null) {\n    var nodes = serializeAws_restXmlReplicationRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRule = function serializeAws_restXmlReplicationRule(input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRule\");\n\n  if (input.ID !== undefined && input.ID !== null) {\n    var node = new __XmlNode(\"ID\").addChildNode(new __XmlText(input.ID)).withName(\"ID\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Priority !== undefined && input.Priority !== null) {\n    var node = new __XmlNode(\"Priority\").addChildNode(new __XmlText(String(input.Priority))).withName(\"Priority\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlReplicationRuleFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ReplicationRuleStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.SourceSelectionCriteria !== undefined && input.SourceSelectionCriteria !== null) {\n    var node = serializeAws_restXmlSourceSelectionCriteria(input.SourceSelectionCriteria, context).withName(\"SourceSelectionCriteria\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ExistingObjectReplication !== undefined && input.ExistingObjectReplication !== null) {\n    var node = serializeAws_restXmlExistingObjectReplication(input.ExistingObjectReplication, context).withName(\"ExistingObjectReplication\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Destination !== undefined && input.Destination !== null) {\n    var node = serializeAws_restXmlDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.DeleteMarkerReplication !== undefined && input.DeleteMarkerReplication !== null) {\n    var node = serializeAws_restXmlDeleteMarkerReplication(input.DeleteMarkerReplication, context).withName(\"DeleteMarkerReplication\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRuleAndOperator = function serializeAws_restXmlReplicationRuleAndOperator(input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRuleAndOperator\");\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tags !== undefined && input.Tags !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.Tags, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRuleFilter = function serializeAws_restXmlReplicationRuleFilter(input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationRuleFilter\");\n  ReplicationRuleFilter.visit(input, {\n    Prefix: function Prefix(value) {\n      var node = new __XmlNode(\"Prefix\").addChildNode(new __XmlText(value)).withName(\"Prefix\");\n      bodyNode.addChildNode(node);\n    },\n    Tag: function Tag(value) {\n      var node = serializeAws_restXmlTag(value, context).withName(\"Tag\");\n      bodyNode.addChildNode(node);\n    },\n    And: function And(value) {\n      var node = serializeAws_restXmlReplicationRuleAndOperator(value, context).withName(\"And\");\n      bodyNode.addChildNode(node);\n    },\n    _: function _(name, value) {\n      if (!(value instanceof __XmlNode || value instanceof __XmlText)) {\n        throw new Error(\"Unable to serialize unknown union members in XML.\");\n      }\n\n      bodyNode.addChildNode(new __XmlNode(name).addChildNode(value));\n    }\n  });\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationRules = function serializeAws_restXmlReplicationRules(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlReplicationRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlReplicationTime = function serializeAws_restXmlReplicationTime(input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationTime\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"ReplicationTimeStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Time !== undefined && input.Time !== null) {\n    var node = serializeAws_restXmlReplicationTimeValue(input.Time, context).withName(\"Time\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlReplicationTimeValue = function serializeAws_restXmlReplicationTimeValue(input, context) {\n  var bodyNode = new __XmlNode(\"ReplicationTimeValue\");\n\n  if (input.Minutes !== undefined && input.Minutes !== null) {\n    var node = new __XmlNode(\"Minutes\").addChildNode(new __XmlText(String(input.Minutes))).withName(\"Minutes\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRequestPaymentConfiguration = function serializeAws_restXmlRequestPaymentConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"RequestPaymentConfiguration\");\n\n  if (input.Payer !== undefined && input.Payer !== null) {\n    var node = new __XmlNode(\"Payer\").addChildNode(new __XmlText(input.Payer)).withName(\"Payer\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRequestProgress = function serializeAws_restXmlRequestProgress(input, context) {\n  var bodyNode = new __XmlNode(\"RequestProgress\");\n\n  if (input.Enabled !== undefined && input.Enabled !== null) {\n    var node = new __XmlNode(\"EnableRequestProgress\").addChildNode(new __XmlText(String(input.Enabled))).withName(\"Enabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRestoreRequest = function serializeAws_restXmlRestoreRequest(input, context) {\n  var bodyNode = new __XmlNode(\"RestoreRequest\");\n\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.GlacierJobParameters !== undefined && input.GlacierJobParameters !== null) {\n    var node = serializeAws_restXmlGlacierJobParameters(input.GlacierJobParameters, context).withName(\"GlacierJobParameters\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Type !== undefined && input.Type !== null) {\n    var node = new __XmlNode(\"RestoreRequestType\").addChildNode(new __XmlText(input.Type)).withName(\"Type\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Tier !== undefined && input.Tier !== null) {\n    var node = new __XmlNode(\"Tier\").addChildNode(new __XmlText(input.Tier)).withName(\"Tier\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Description !== undefined && input.Description !== null) {\n    var node = new __XmlNode(\"Description\").addChildNode(new __XmlText(input.Description)).withName(\"Description\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.SelectParameters !== undefined && input.SelectParameters !== null) {\n    var node = serializeAws_restXmlSelectParameters(input.SelectParameters, context).withName(\"SelectParameters\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.OutputLocation !== undefined && input.OutputLocation !== null) {\n    var node = serializeAws_restXmlOutputLocation(input.OutputLocation, context).withName(\"OutputLocation\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRoutingRule = function serializeAws_restXmlRoutingRule(input, context) {\n  var bodyNode = new __XmlNode(\"RoutingRule\");\n\n  if (input.Condition !== undefined && input.Condition !== null) {\n    var node = serializeAws_restXmlCondition(input.Condition, context).withName(\"Condition\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Redirect !== undefined && input.Redirect !== null) {\n    var node = serializeAws_restXmlRedirect(input.Redirect, context).withName(\"Redirect\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlRoutingRules = function serializeAws_restXmlRoutingRules(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlRoutingRule(entry, context);\n    return node.withName(\"RoutingRule\");\n  });\n};\n\nvar serializeAws_restXmlS3KeyFilter = function serializeAws_restXmlS3KeyFilter(input, context) {\n  var bodyNode = new __XmlNode(\"S3KeyFilter\");\n\n  if (input.FilterRules !== undefined && input.FilterRules !== null) {\n    var nodes = serializeAws_restXmlFilterRuleList(input.FilterRules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"FilterRule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlS3Location = function serializeAws_restXmlS3Location(input, context) {\n  var bodyNode = new __XmlNode(\"S3Location\");\n\n  if (input.BucketName !== undefined && input.BucketName !== null) {\n    var node = new __XmlNode(\"BucketName\").addChildNode(new __XmlText(input.BucketName)).withName(\"BucketName\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Prefix !== undefined && input.Prefix !== null) {\n    var node = new __XmlNode(\"LocationPrefix\").addChildNode(new __XmlText(input.Prefix)).withName(\"Prefix\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Encryption !== undefined && input.Encryption !== null) {\n    var node = serializeAws_restXmlEncryption(input.Encryption, context).withName(\"Encryption\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.CannedACL !== undefined && input.CannedACL !== null) {\n    var node = new __XmlNode(\"ObjectCannedACL\").addChildNode(new __XmlText(input.CannedACL)).withName(\"CannedACL\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AccessControlList !== undefined && input.AccessControlList !== null) {\n    var nodes = serializeAws_restXmlGrants(input.AccessControlList, context);\n    var containerNode_4 = new __XmlNode(\"AccessControlList\");\n    nodes.map(function (node) {\n      containerNode_4.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_4);\n  }\n\n  if (input.Tagging !== undefined && input.Tagging !== null) {\n    var node = serializeAws_restXmlTagging(input.Tagging, context).withName(\"Tagging\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.UserMetadata !== undefined && input.UserMetadata !== null) {\n    var nodes = serializeAws_restXmlUserMetadata(input.UserMetadata, context);\n    var containerNode_5 = new __XmlNode(\"UserMetadata\");\n    nodes.map(function (node) {\n      containerNode_5.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_5);\n  }\n\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    var node = new __XmlNode(\"StorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlScanRange = function serializeAws_restXmlScanRange(input, context) {\n  var bodyNode = new __XmlNode(\"ScanRange\");\n\n  if (input.Start !== undefined && input.Start !== null) {\n    var node = new __XmlNode(\"Start\").addChildNode(new __XmlText(String(input.Start))).withName(\"Start\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.End !== undefined && input.End !== null) {\n    var node = new __XmlNode(\"End\").addChildNode(new __XmlText(String(input.End))).withName(\"End\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSelectParameters = function serializeAws_restXmlSelectParameters(input, context) {\n  var bodyNode = new __XmlNode(\"SelectParameters\");\n\n  if (input.InputSerialization !== undefined && input.InputSerialization !== null) {\n    var node = serializeAws_restXmlInputSerialization(input.InputSerialization, context).withName(\"InputSerialization\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ExpressionType !== undefined && input.ExpressionType !== null) {\n    var node = new __XmlNode(\"ExpressionType\").addChildNode(new __XmlText(input.ExpressionType)).withName(\"ExpressionType\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Expression !== undefined && input.Expression !== null) {\n    var node = new __XmlNode(\"Expression\").addChildNode(new __XmlText(input.Expression)).withName(\"Expression\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.OutputSerialization !== undefined && input.OutputSerialization !== null) {\n    var node = serializeAws_restXmlOutputSerialization(input.OutputSerialization, context).withName(\"OutputSerialization\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionByDefault = function serializeAws_restXmlServerSideEncryptionByDefault(input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionByDefault\");\n\n  if (input.SSEAlgorithm !== undefined && input.SSEAlgorithm !== null) {\n    var node = new __XmlNode(\"ServerSideEncryption\").addChildNode(new __XmlText(input.SSEAlgorithm)).withName(\"SSEAlgorithm\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.KMSMasterKeyID !== undefined && input.KMSMasterKeyID !== null) {\n    var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KMSMasterKeyID)).withName(\"KMSMasterKeyID\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionConfiguration = function serializeAws_restXmlServerSideEncryptionConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionConfiguration\");\n\n  if (input.Rules !== undefined && input.Rules !== null) {\n    var nodes = serializeAws_restXmlServerSideEncryptionRules(input.Rules, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Rule\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionRule = function serializeAws_restXmlServerSideEncryptionRule(input, context) {\n  var bodyNode = new __XmlNode(\"ServerSideEncryptionRule\");\n\n  if (input.ApplyServerSideEncryptionByDefault !== undefined && input.ApplyServerSideEncryptionByDefault !== null) {\n    var node = serializeAws_restXmlServerSideEncryptionByDefault(input.ApplyServerSideEncryptionByDefault, context).withName(\"ApplyServerSideEncryptionByDefault\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.BucketKeyEnabled !== undefined && input.BucketKeyEnabled !== null) {\n    var node = new __XmlNode(\"BucketKeyEnabled\").addChildNode(new __XmlText(String(input.BucketKeyEnabled))).withName(\"BucketKeyEnabled\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlServerSideEncryptionRules = function serializeAws_restXmlServerSideEncryptionRules(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlServerSideEncryptionRule(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlSourceSelectionCriteria = function serializeAws_restXmlSourceSelectionCriteria(input, context) {\n  var bodyNode = new __XmlNode(\"SourceSelectionCriteria\");\n\n  if (input.SseKmsEncryptedObjects !== undefined && input.SseKmsEncryptedObjects !== null) {\n    var node = serializeAws_restXmlSseKmsEncryptedObjects(input.SseKmsEncryptedObjects, context).withName(\"SseKmsEncryptedObjects\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.ReplicaModifications !== undefined && input.ReplicaModifications !== null) {\n    var node = serializeAws_restXmlReplicaModifications(input.ReplicaModifications, context).withName(\"ReplicaModifications\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSSEKMS = function serializeAws_restXmlSSEKMS(input, context) {\n  var bodyNode = new __XmlNode(\"SSE-KMS\");\n\n  if (input.KeyId !== undefined && input.KeyId !== null) {\n    var node = new __XmlNode(\"SSEKMSKeyId\").addChildNode(new __XmlText(input.KeyId)).withName(\"KeyId\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSseKmsEncryptedObjects = function serializeAws_restXmlSseKmsEncryptedObjects(input, context) {\n  var bodyNode = new __XmlNode(\"SseKmsEncryptedObjects\");\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"SseKmsEncryptedObjectsStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlSSES3 = function serializeAws_restXmlSSES3(input, context) {\n  var bodyNode = new __XmlNode(\"SSE-S3\");\n  return bodyNode;\n};\n\nvar serializeAws_restXmlStorageClassAnalysis = function serializeAws_restXmlStorageClassAnalysis(input, context) {\n  var bodyNode = new __XmlNode(\"StorageClassAnalysis\");\n\n  if (input.DataExport !== undefined && input.DataExport !== null) {\n    var node = serializeAws_restXmlStorageClassAnalysisDataExport(input.DataExport, context).withName(\"DataExport\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlStorageClassAnalysisDataExport = function serializeAws_restXmlStorageClassAnalysisDataExport(input, context) {\n  var bodyNode = new __XmlNode(\"StorageClassAnalysisDataExport\");\n\n  if (input.OutputSchemaVersion !== undefined && input.OutputSchemaVersion !== null) {\n    var node = new __XmlNode(\"StorageClassAnalysisSchemaVersion\").addChildNode(new __XmlText(input.OutputSchemaVersion)).withName(\"OutputSchemaVersion\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Destination !== undefined && input.Destination !== null) {\n    var node = serializeAws_restXmlAnalyticsExportDestination(input.Destination, context).withName(\"Destination\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTag = function serializeAws_restXmlTag(input, context) {\n  var bodyNode = new __XmlNode(\"Tag\");\n\n  if (input.Key !== undefined && input.Key !== null) {\n    var node = new __XmlNode(\"ObjectKey\").addChildNode(new __XmlText(input.Key)).withName(\"Key\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Value !== undefined && input.Value !== null) {\n    var node = new __XmlNode(\"Value\").addChildNode(new __XmlText(input.Value)).withName(\"Value\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTagging = function serializeAws_restXmlTagging(input, context) {\n  var bodyNode = new __XmlNode(\"Tagging\");\n\n  if (input.TagSet !== undefined && input.TagSet !== null) {\n    var nodes = serializeAws_restXmlTagSet(input.TagSet, context);\n    var containerNode_6 = new __XmlNode(\"TagSet\");\n    nodes.map(function (node) {\n      containerNode_6.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_6);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTagSet = function serializeAws_restXmlTagSet(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlTag(entry, context);\n    return node.withName(\"Tag\");\n  });\n};\n\nvar serializeAws_restXmlTargetGrant = function serializeAws_restXmlTargetGrant(input, context) {\n  var bodyNode = new __XmlNode(\"TargetGrant\");\n\n  if (input.Grantee !== undefined && input.Grantee !== null) {\n    var node = serializeAws_restXmlGrantee(input.Grantee, context).withName(\"Grantee\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Permission !== undefined && input.Permission !== null) {\n    var node = new __XmlNode(\"BucketLogsPermission\").addChildNode(new __XmlText(input.Permission)).withName(\"Permission\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTargetGrants = function serializeAws_restXmlTargetGrants(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlTargetGrant(entry, context);\n    return node.withName(\"Grant\");\n  });\n};\n\nvar serializeAws_restXmlTiering = function serializeAws_restXmlTiering(input, context) {\n  var bodyNode = new __XmlNode(\"Tiering\");\n\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"IntelligentTieringDays\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.AccessTier !== undefined && input.AccessTier !== null) {\n    var node = new __XmlNode(\"IntelligentTieringAccessTier\").addChildNode(new __XmlText(input.AccessTier)).withName(\"AccessTier\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTieringList = function serializeAws_restXmlTieringList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlTiering(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlTopicConfiguration = function serializeAws_restXmlTopicConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"TopicConfiguration\");\n\n  if (input.Id !== undefined && input.Id !== null) {\n    var node = new __XmlNode(\"NotificationId\").addChildNode(new __XmlText(input.Id)).withName(\"Id\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.TopicArn !== undefined && input.TopicArn !== null) {\n    var node = new __XmlNode(\"TopicArn\").addChildNode(new __XmlText(input.TopicArn)).withName(\"Topic\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Events !== undefined && input.Events !== null) {\n    var nodes = serializeAws_restXmlEventList(input.Events, context);\n    nodes.map(function (node) {\n      node = node.withName(\"Event\");\n      bodyNode.addChildNode(node);\n    });\n  }\n\n  if (input.Filter !== undefined && input.Filter !== null) {\n    var node = serializeAws_restXmlNotificationConfigurationFilter(input.Filter, context).withName(\"Filter\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTopicConfigurationList = function serializeAws_restXmlTopicConfigurationList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlTopicConfiguration(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlTransition = function serializeAws_restXmlTransition(input, context) {\n  var bodyNode = new __XmlNode(\"Transition\");\n\n  if (input.Date !== undefined && input.Date !== null) {\n    var node = new __XmlNode(\"Date\").addChildNode(new __XmlText(input.Date.toISOString().split(\".\")[0] + \"Z\")).withName(\"Date\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Days !== undefined && input.Days !== null) {\n    var node = new __XmlNode(\"Days\").addChildNode(new __XmlText(String(input.Days))).withName(\"Days\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.StorageClass !== undefined && input.StorageClass !== null) {\n    var node = new __XmlNode(\"TransitionStorageClass\").addChildNode(new __XmlText(input.StorageClass)).withName(\"StorageClass\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlTransitionList = function serializeAws_restXmlTransitionList(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlTransition(entry, context);\n    return node.withName(\"member\");\n  });\n};\n\nvar serializeAws_restXmlUserMetadata = function serializeAws_restXmlUserMetadata(input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    var node = serializeAws_restXmlMetadataEntry(entry, context);\n    return node.withName(\"MetadataEntry\");\n  });\n};\n\nvar serializeAws_restXmlVersioningConfiguration = function serializeAws_restXmlVersioningConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"VersioningConfiguration\");\n\n  if (input.MFADelete !== undefined && input.MFADelete !== null) {\n    var node = new __XmlNode(\"MFADelete\").addChildNode(new __XmlText(input.MFADelete)).withName(\"MfaDelete\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.Status !== undefined && input.Status !== null) {\n    var node = new __XmlNode(\"BucketVersioningStatus\").addChildNode(new __XmlText(input.Status)).withName(\"Status\");\n    bodyNode.addChildNode(node);\n  }\n\n  return bodyNode;\n};\n\nvar serializeAws_restXmlWebsiteConfiguration = function serializeAws_restXmlWebsiteConfiguration(input, context) {\n  var bodyNode = new __XmlNode(\"WebsiteConfiguration\");\n\n  if (input.ErrorDocument !== undefined && input.ErrorDocument !== null) {\n    var node = serializeAws_restXmlErrorDocument(input.ErrorDocument, context).withName(\"ErrorDocument\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.IndexDocument !== undefined && input.IndexDocument !== null) {\n    var node = serializeAws_restXmlIndexDocument(input.IndexDocument, context).withName(\"IndexDocument\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RedirectAllRequestsTo !== undefined && input.RedirectAllRequestsTo !== null) {\n    var node = serializeAws_restXmlRedirectAllRequestsTo(input.RedirectAllRequestsTo, context).withName(\"RedirectAllRequestsTo\");\n    bodyNode.addChildNode(node);\n  }\n\n  if (input.RoutingRules !== undefined && input.RoutingRules !== null) {\n    var nodes = serializeAws_restXmlRoutingRules(input.RoutingRules, context);\n    var containerNode_7 = new __XmlNode(\"RoutingRules\");\n    nodes.map(function (node) {\n      containerNode_7.addChildNode(node);\n    });\n    bodyNode.addChildNode(containerNode_7);\n  }\n\n  return bodyNode;\n};\n\nvar deserializeAws_restXmlAbortIncompleteMultipartUpload = function deserializeAws_restXmlAbortIncompleteMultipartUpload(output, context) {\n  var contents = {\n    DaysAfterInitiation: undefined\n  };\n\n  if (output[\"DaysAfterInitiation\"] !== undefined) {\n    contents.DaysAfterInitiation = parseInt(output[\"DaysAfterInitiation\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAccessControlTranslation = function deserializeAws_restXmlAccessControlTranslation(output, context) {\n  var contents = {\n    Owner: undefined\n  };\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = output[\"Owner\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAllowedHeaders = function deserializeAws_restXmlAllowedHeaders(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_restXmlAllowedMethods = function deserializeAws_restXmlAllowedMethods(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_restXmlAllowedOrigins = function deserializeAws_restXmlAllowedOrigins(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_restXmlAnalyticsAndOperator = function deserializeAws_restXmlAnalyticsAndOperator(output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsConfiguration = function deserializeAws_restXmlAnalyticsConfiguration(output, context) {\n  var contents = {\n    Id: undefined,\n    Filter: undefined,\n    StorageClassAnalysis: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlAnalyticsFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"StorageClassAnalysis\"] !== undefined) {\n    contents.StorageClassAnalysis = deserializeAws_restXmlStorageClassAnalysis(output[\"StorageClassAnalysis\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsConfigurationList = function deserializeAws_restXmlAnalyticsConfigurationList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlAnalyticsConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlAnalyticsExportDestination = function deserializeAws_restXmlAnalyticsExportDestination(output, context) {\n  var contents = {\n    S3BucketDestination: undefined\n  };\n\n  if (output[\"S3BucketDestination\"] !== undefined) {\n    contents.S3BucketDestination = deserializeAws_restXmlAnalyticsS3BucketDestination(output[\"S3BucketDestination\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlAnalyticsFilter = function deserializeAws_restXmlAnalyticsFilter(output, context) {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: output[\"Prefix\"]\n    };\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context)\n    };\n  }\n\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlAnalyticsAndOperator(output[\"And\"], context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_restXmlAnalyticsS3BucketDestination = function deserializeAws_restXmlAnalyticsS3BucketDestination(output, context) {\n  var contents = {\n    Format: undefined,\n    BucketAccountId: undefined,\n    Bucket: undefined,\n    Prefix: undefined\n  };\n\n  if (output[\"Format\"] !== undefined) {\n    contents.Format = output[\"Format\"];\n  }\n\n  if (output[\"BucketAccountId\"] !== undefined) {\n    contents.BucketAccountId = output[\"BucketAccountId\"];\n  }\n\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = output[\"Bucket\"];\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlBucket = function deserializeAws_restXmlBucket(output, context) {\n  var contents = {\n    Name: undefined,\n    CreationDate: undefined\n  };\n\n  if (output[\"Name\"] !== undefined) {\n    contents.Name = output[\"Name\"];\n  }\n\n  if (output[\"CreationDate\"] !== undefined) {\n    contents.CreationDate = new Date(output[\"CreationDate\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlBuckets = function deserializeAws_restXmlBuckets(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlBucket(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlCommonPrefix = function deserializeAws_restXmlCommonPrefix(output, context) {\n  var contents = {\n    Prefix: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCommonPrefixList = function deserializeAws_restXmlCommonPrefixList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlCommonPrefix(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlCondition = function deserializeAws_restXmlCondition(output, context) {\n  var contents = {\n    HttpErrorCodeReturnedEquals: undefined,\n    KeyPrefixEquals: undefined\n  };\n\n  if (output[\"HttpErrorCodeReturnedEquals\"] !== undefined) {\n    contents.HttpErrorCodeReturnedEquals = output[\"HttpErrorCodeReturnedEquals\"];\n  }\n\n  if (output[\"KeyPrefixEquals\"] !== undefined) {\n    contents.KeyPrefixEquals = output[\"KeyPrefixEquals\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCopyObjectResult = function deserializeAws_restXmlCopyObjectResult(output, context) {\n  var contents = {\n    ETag: undefined,\n    LastModified: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCopyPartResult = function deserializeAws_restXmlCopyPartResult(output, context) {\n  var contents = {\n    ETag: undefined,\n    LastModified: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCORSRule = function deserializeAws_restXmlCORSRule(output, context) {\n  var contents = {\n    AllowedHeaders: undefined,\n    AllowedMethods: undefined,\n    AllowedOrigins: undefined,\n    ExposeHeaders: undefined,\n    MaxAgeSeconds: undefined\n  };\n\n  if (output.AllowedHeader === \"\") {\n    contents.AllowedHeaders = [];\n  }\n\n  if (output[\"AllowedHeader\"] !== undefined) {\n    contents.AllowedHeaders = deserializeAws_restXmlAllowedHeaders(__getArrayIfSingleItem(output[\"AllowedHeader\"]), context);\n  }\n\n  if (output.AllowedMethod === \"\") {\n    contents.AllowedMethods = [];\n  }\n\n  if (output[\"AllowedMethod\"] !== undefined) {\n    contents.AllowedMethods = deserializeAws_restXmlAllowedMethods(__getArrayIfSingleItem(output[\"AllowedMethod\"]), context);\n  }\n\n  if (output.AllowedOrigin === \"\") {\n    contents.AllowedOrigins = [];\n  }\n\n  if (output[\"AllowedOrigin\"] !== undefined) {\n    contents.AllowedOrigins = deserializeAws_restXmlAllowedOrigins(__getArrayIfSingleItem(output[\"AllowedOrigin\"]), context);\n  }\n\n  if (output.ExposeHeader === \"\") {\n    contents.ExposeHeaders = [];\n  }\n\n  if (output[\"ExposeHeader\"] !== undefined) {\n    contents.ExposeHeaders = deserializeAws_restXmlExposeHeaders(__getArrayIfSingleItem(output[\"ExposeHeader\"]), context);\n  }\n\n  if (output[\"MaxAgeSeconds\"] !== undefined) {\n    contents.MaxAgeSeconds = parseInt(output[\"MaxAgeSeconds\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlCORSRules = function deserializeAws_restXmlCORSRules(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlCORSRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlDefaultRetention = function deserializeAws_restXmlDefaultRetention(output, context) {\n  var contents = {\n    Mode: undefined,\n    Days: undefined,\n    Years: undefined\n  };\n\n  if (output[\"Mode\"] !== undefined) {\n    contents.Mode = output[\"Mode\"];\n  }\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n\n  if (output[\"Years\"] !== undefined) {\n    contents.Years = parseInt(output[\"Years\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeletedObject = function deserializeAws_restXmlDeletedObject(output, context) {\n  var contents = {\n    Key: undefined,\n    VersionId: undefined,\n    DeleteMarker: undefined,\n    DeleteMarkerVersionId: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n\n  if (output[\"DeleteMarker\"] !== undefined) {\n    contents.DeleteMarker = output[\"DeleteMarker\"] == \"true\";\n  }\n\n  if (output[\"DeleteMarkerVersionId\"] !== undefined) {\n    contents.DeleteMarkerVersionId = output[\"DeleteMarkerVersionId\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeletedObjects = function deserializeAws_restXmlDeletedObjects(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlDeletedObject(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlDeleteMarkerEntry = function deserializeAws_restXmlDeleteMarkerEntry(output, context) {\n  var contents = {\n    Owner: undefined,\n    Key: undefined,\n    VersionId: undefined,\n    IsLatest: undefined,\n    LastModified: undefined\n  };\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n\n  if (output[\"IsLatest\"] !== undefined) {\n    contents.IsLatest = output[\"IsLatest\"] == \"true\";\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeleteMarkerReplication = function deserializeAws_restXmlDeleteMarkerReplication(output, context) {\n  var contents = {\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlDeleteMarkers = function deserializeAws_restXmlDeleteMarkers(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlDeleteMarkerEntry(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlDestination = function deserializeAws_restXmlDestination(output, context) {\n  var contents = {\n    Bucket: undefined,\n    Account: undefined,\n    StorageClass: undefined,\n    AccessControlTranslation: undefined,\n    EncryptionConfiguration: undefined,\n    ReplicationTime: undefined,\n    Metrics: undefined\n  };\n\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = output[\"Bucket\"];\n  }\n\n  if (output[\"Account\"] !== undefined) {\n    contents.Account = output[\"Account\"];\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  if (output[\"AccessControlTranslation\"] !== undefined) {\n    contents.AccessControlTranslation = deserializeAws_restXmlAccessControlTranslation(output[\"AccessControlTranslation\"], context);\n  }\n\n  if (output[\"EncryptionConfiguration\"] !== undefined) {\n    contents.EncryptionConfiguration = deserializeAws_restXmlEncryptionConfiguration(output[\"EncryptionConfiguration\"], context);\n  }\n\n  if (output[\"ReplicationTime\"] !== undefined) {\n    contents.ReplicationTime = deserializeAws_restXmlReplicationTime(output[\"ReplicationTime\"], context);\n  }\n\n  if (output[\"Metrics\"] !== undefined) {\n    contents.Metrics = deserializeAws_restXmlMetrics(output[\"Metrics\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlEncryptionConfiguration = function deserializeAws_restXmlEncryptionConfiguration(output, context) {\n  var contents = {\n    ReplicaKmsKeyID: undefined\n  };\n\n  if (output[\"ReplicaKmsKeyID\"] !== undefined) {\n    contents.ReplicaKmsKeyID = output[\"ReplicaKmsKeyID\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXml_Error = function deserializeAws_restXml_Error(output, context) {\n  var contents = {\n    Key: undefined,\n    VersionId: undefined,\n    Code: undefined,\n    Message: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n\n  if (output[\"Code\"] !== undefined) {\n    contents.Code = output[\"Code\"];\n  }\n\n  if (output[\"Message\"] !== undefined) {\n    contents.Message = output[\"Message\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlErrorDocument = function deserializeAws_restXmlErrorDocument(output, context) {\n  var contents = {\n    Key: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlErrors = function deserializeAws_restXmlErrors(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXml_Error(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlEventList = function deserializeAws_restXmlEventList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_restXmlExistingObjectReplication = function deserializeAws_restXmlExistingObjectReplication(output, context) {\n  var contents = {\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlExposeHeaders = function deserializeAws_restXmlExposeHeaders(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_restXmlFilterRule = function deserializeAws_restXmlFilterRule(output, context) {\n  var contents = {\n    Name: undefined,\n    Value: undefined\n  };\n\n  if (output[\"Name\"] !== undefined) {\n    contents.Name = output[\"Name\"];\n  }\n\n  if (output[\"Value\"] !== undefined) {\n    contents.Value = output[\"Value\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlFilterRuleList = function deserializeAws_restXmlFilterRuleList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlFilterRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlGrant = function deserializeAws_restXmlGrant(output, context) {\n  var contents = {\n    Grantee: undefined,\n    Permission: undefined\n  };\n\n  if (output[\"Grantee\"] !== undefined) {\n    contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n  }\n\n  if (output[\"Permission\"] !== undefined) {\n    contents.Permission = output[\"Permission\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlGrantee = function deserializeAws_restXmlGrantee(output, context) {\n  var contents = {\n    DisplayName: undefined,\n    EmailAddress: undefined,\n    ID: undefined,\n    URI: undefined,\n    Type: undefined\n  };\n\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = output[\"DisplayName\"];\n  }\n\n  if (output[\"EmailAddress\"] !== undefined) {\n    contents.EmailAddress = output[\"EmailAddress\"];\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n\n  if (output[\"URI\"] !== undefined) {\n    contents.URI = output[\"URI\"];\n  }\n\n  if (output[\"xsi:type\"] !== undefined) {\n    contents.Type = output[\"xsi:type\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlGrants = function deserializeAws_restXmlGrants(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlGrant(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlIndexDocument = function deserializeAws_restXmlIndexDocument(output, context) {\n  var contents = {\n    Suffix: undefined\n  };\n\n  if (output[\"Suffix\"] !== undefined) {\n    contents.Suffix = output[\"Suffix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInitiator = function deserializeAws_restXmlInitiator(output, context) {\n  var contents = {\n    ID: undefined,\n    DisplayName: undefined\n  };\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = output[\"DisplayName\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlIntelligentTieringAndOperator = function deserializeAws_restXmlIntelligentTieringAndOperator(output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlIntelligentTieringConfiguration = function deserializeAws_restXmlIntelligentTieringConfiguration(output, context) {\n  var contents = {\n    Id: undefined,\n    Filter: undefined,\n    Status: undefined,\n    Tierings: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlIntelligentTieringFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  if (output.Tiering === \"\") {\n    contents.Tierings = [];\n  }\n\n  if (output[\"Tiering\"] !== undefined) {\n    contents.Tierings = deserializeAws_restXmlTieringList(__getArrayIfSingleItem(output[\"Tiering\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlIntelligentTieringConfigurationList = function deserializeAws_restXmlIntelligentTieringConfigurationList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlIntelligentTieringConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlIntelligentTieringFilter = function deserializeAws_restXmlIntelligentTieringFilter(output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tag: undefined,\n    And: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tag = deserializeAws_restXmlTag(output[\"Tag\"], context);\n  }\n\n  if (output[\"And\"] !== undefined) {\n    contents.And = deserializeAws_restXmlIntelligentTieringAndOperator(output[\"And\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryConfiguration = function deserializeAws_restXmlInventoryConfiguration(output, context) {\n  var contents = {\n    Destination: undefined,\n    IsEnabled: undefined,\n    Filter: undefined,\n    Id: undefined,\n    IncludedObjectVersions: undefined,\n    OptionalFields: undefined,\n    Schedule: undefined\n  };\n\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlInventoryDestination(output[\"Destination\"], context);\n  }\n\n  if (output[\"IsEnabled\"] !== undefined) {\n    contents.IsEnabled = output[\"IsEnabled\"] == \"true\";\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlInventoryFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"IncludedObjectVersions\"] !== undefined) {\n    contents.IncludedObjectVersions = output[\"IncludedObjectVersions\"];\n  }\n\n  if (output.OptionalFields === \"\") {\n    contents.OptionalFields = [];\n  }\n\n  if (output[\"OptionalFields\"] !== undefined && output[\"OptionalFields\"][\"Field\"] !== undefined) {\n    contents.OptionalFields = deserializeAws_restXmlInventoryOptionalFields(__getArrayIfSingleItem(output[\"OptionalFields\"][\"Field\"]), context);\n  }\n\n  if (output[\"Schedule\"] !== undefined) {\n    contents.Schedule = deserializeAws_restXmlInventorySchedule(output[\"Schedule\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryConfigurationList = function deserializeAws_restXmlInventoryConfigurationList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlInventoryConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlInventoryDestination = function deserializeAws_restXmlInventoryDestination(output, context) {\n  var contents = {\n    S3BucketDestination: undefined\n  };\n\n  if (output[\"S3BucketDestination\"] !== undefined) {\n    contents.S3BucketDestination = deserializeAws_restXmlInventoryS3BucketDestination(output[\"S3BucketDestination\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryEncryption = function deserializeAws_restXmlInventoryEncryption(output, context) {\n  var contents = {\n    SSES3: undefined,\n    SSEKMS: undefined\n  };\n\n  if (output[\"SSE-S3\"] !== undefined) {\n    contents.SSES3 = deserializeAws_restXmlSSES3(output[\"SSE-S3\"], context);\n  }\n\n  if (output[\"SSE-KMS\"] !== undefined) {\n    contents.SSEKMS = deserializeAws_restXmlSSEKMS(output[\"SSE-KMS\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryFilter = function deserializeAws_restXmlInventoryFilter(output, context) {\n  var contents = {\n    Prefix: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventoryOptionalFields = function deserializeAws_restXmlInventoryOptionalFields(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_restXmlInventoryS3BucketDestination = function deserializeAws_restXmlInventoryS3BucketDestination(output, context) {\n  var contents = {\n    AccountId: undefined,\n    Bucket: undefined,\n    Format: undefined,\n    Prefix: undefined,\n    Encryption: undefined\n  };\n\n  if (output[\"AccountId\"] !== undefined) {\n    contents.AccountId = output[\"AccountId\"];\n  }\n\n  if (output[\"Bucket\"] !== undefined) {\n    contents.Bucket = output[\"Bucket\"];\n  }\n\n  if (output[\"Format\"] !== undefined) {\n    contents.Format = output[\"Format\"];\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output[\"Encryption\"] !== undefined) {\n    contents.Encryption = deserializeAws_restXmlInventoryEncryption(output[\"Encryption\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlInventorySchedule = function deserializeAws_restXmlInventorySchedule(output, context) {\n  var contents = {\n    Frequency: undefined\n  };\n\n  if (output[\"Frequency\"] !== undefined) {\n    contents.Frequency = output[\"Frequency\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLambdaFunctionConfiguration = function deserializeAws_restXmlLambdaFunctionConfiguration(output, context) {\n  var contents = {\n    Id: undefined,\n    LambdaFunctionArn: undefined,\n    Events: undefined,\n    Filter: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"CloudFunction\"] !== undefined) {\n    contents.LambdaFunctionArn = output[\"CloudFunction\"];\n  }\n\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n\n  if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLambdaFunctionConfigurationList = function deserializeAws_restXmlLambdaFunctionConfigurationList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlLambdaFunctionConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlLifecycleExpiration = function deserializeAws_restXmlLifecycleExpiration(output, context) {\n  var contents = {\n    Date: undefined,\n    Days: undefined,\n    ExpiredObjectDeleteMarker: undefined\n  };\n\n  if (output[\"Date\"] !== undefined) {\n    contents.Date = new Date(output[\"Date\"]);\n  }\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n\n  if (output[\"ExpiredObjectDeleteMarker\"] !== undefined) {\n    contents.ExpiredObjectDeleteMarker = output[\"ExpiredObjectDeleteMarker\"] == \"true\";\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleRule = function deserializeAws_restXmlLifecycleRule(output, context) {\n  var contents = {\n    Expiration: undefined,\n    ID: undefined,\n    Prefix: undefined,\n    Filter: undefined,\n    Status: undefined,\n    Transitions: undefined,\n    NoncurrentVersionTransitions: undefined,\n    NoncurrentVersionExpiration: undefined,\n    AbortIncompleteMultipartUpload: undefined\n  };\n\n  if (output[\"Expiration\"] !== undefined) {\n    contents.Expiration = deserializeAws_restXmlLifecycleExpiration(output[\"Expiration\"], context);\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlLifecycleRuleFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  if (output.Transition === \"\") {\n    contents.Transitions = [];\n  }\n\n  if (output[\"Transition\"] !== undefined) {\n    contents.Transitions = deserializeAws_restXmlTransitionList(__getArrayIfSingleItem(output[\"Transition\"]), context);\n  }\n\n  if (output.NoncurrentVersionTransition === \"\") {\n    contents.NoncurrentVersionTransitions = [];\n  }\n\n  if (output[\"NoncurrentVersionTransition\"] !== undefined) {\n    contents.NoncurrentVersionTransitions = deserializeAws_restXmlNoncurrentVersionTransitionList(__getArrayIfSingleItem(output[\"NoncurrentVersionTransition\"]), context);\n  }\n\n  if (output[\"NoncurrentVersionExpiration\"] !== undefined) {\n    contents.NoncurrentVersionExpiration = deserializeAws_restXmlNoncurrentVersionExpiration(output[\"NoncurrentVersionExpiration\"], context);\n  }\n\n  if (output[\"AbortIncompleteMultipartUpload\"] !== undefined) {\n    contents.AbortIncompleteMultipartUpload = deserializeAws_restXmlAbortIncompleteMultipartUpload(output[\"AbortIncompleteMultipartUpload\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleRuleAndOperator = function deserializeAws_restXmlLifecycleRuleAndOperator(output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlLifecycleRuleFilter = function deserializeAws_restXmlLifecycleRuleFilter(output, context) {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: output[\"Prefix\"]\n    };\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context)\n    };\n  }\n\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlLifecycleRuleAndOperator(output[\"And\"], context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_restXmlLifecycleRules = function deserializeAws_restXmlLifecycleRules(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlLifecycleRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlLoggingEnabled = function deserializeAws_restXmlLoggingEnabled(output, context) {\n  var contents = {\n    TargetBucket: undefined,\n    TargetGrants: undefined,\n    TargetPrefix: undefined\n  };\n\n  if (output[\"TargetBucket\"] !== undefined) {\n    contents.TargetBucket = output[\"TargetBucket\"];\n  }\n\n  if (output.TargetGrants === \"\") {\n    contents.TargetGrants = [];\n  }\n\n  if (output[\"TargetGrants\"] !== undefined && output[\"TargetGrants\"][\"Grant\"] !== undefined) {\n    contents.TargetGrants = deserializeAws_restXmlTargetGrants(__getArrayIfSingleItem(output[\"TargetGrants\"][\"Grant\"]), context);\n  }\n\n  if (output[\"TargetPrefix\"] !== undefined) {\n    contents.TargetPrefix = output[\"TargetPrefix\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetrics = function deserializeAws_restXmlMetrics(output, context) {\n  var contents = {\n    Status: undefined,\n    EventThreshold: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  if (output[\"EventThreshold\"] !== undefined) {\n    contents.EventThreshold = deserializeAws_restXmlReplicationTimeValue(output[\"EventThreshold\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetricsAndOperator = function deserializeAws_restXmlMetricsAndOperator(output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetricsConfiguration = function deserializeAws_restXmlMetricsConfiguration(output, context) {\n  var contents = {\n    Id: undefined,\n    Filter: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlMetricsFilter(output[\"Filter\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMetricsConfigurationList = function deserializeAws_restXmlMetricsConfigurationList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlMetricsConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlMetricsFilter = function deserializeAws_restXmlMetricsFilter(output, context) {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: output[\"Prefix\"]\n    };\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context)\n    };\n  }\n\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlMetricsAndOperator(output[\"And\"], context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_restXmlMultipartUpload = function deserializeAws_restXmlMultipartUpload(output, context) {\n  var contents = {\n    UploadId: undefined,\n    Key: undefined,\n    Initiated: undefined,\n    StorageClass: undefined,\n    Owner: undefined,\n    Initiator: undefined\n  };\n\n  if (output[\"UploadId\"] !== undefined) {\n    contents.UploadId = output[\"UploadId\"];\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"Initiated\"] !== undefined) {\n    contents.Initiated = new Date(output[\"Initiated\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  if (output[\"Initiator\"] !== undefined) {\n    contents.Initiator = deserializeAws_restXmlInitiator(output[\"Initiator\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlMultipartUploadList = function deserializeAws_restXmlMultipartUploadList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlMultipartUpload(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlNoncurrentVersionExpiration = function deserializeAws_restXmlNoncurrentVersionExpiration(output, context) {\n  var contents = {\n    NoncurrentDays: undefined\n  };\n\n  if (output[\"NoncurrentDays\"] !== undefined) {\n    contents.NoncurrentDays = parseInt(output[\"NoncurrentDays\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlNoncurrentVersionTransition = function deserializeAws_restXmlNoncurrentVersionTransition(output, context) {\n  var contents = {\n    NoncurrentDays: undefined,\n    StorageClass: undefined\n  };\n\n  if (output[\"NoncurrentDays\"] !== undefined) {\n    contents.NoncurrentDays = parseInt(output[\"NoncurrentDays\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlNoncurrentVersionTransitionList = function deserializeAws_restXmlNoncurrentVersionTransitionList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlNoncurrentVersionTransition(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlNotificationConfigurationFilter = function deserializeAws_restXmlNotificationConfigurationFilter(output, context) {\n  var contents = {\n    Key: undefined\n  };\n\n  if (output[\"S3Key\"] !== undefined) {\n    contents.Key = deserializeAws_restXmlS3KeyFilter(output[\"S3Key\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXml_Object = function deserializeAws_restXml_Object(output, context) {\n  var contents = {\n    Key: undefined,\n    LastModified: undefined,\n    ETag: undefined,\n    Size: undefined,\n    StorageClass: undefined,\n    Owner: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = parseInt(output[\"Size\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectList = function deserializeAws_restXmlObjectList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXml_Object(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlObjectLockConfiguration = function deserializeAws_restXmlObjectLockConfiguration(output, context) {\n  var contents = {\n    ObjectLockEnabled: undefined,\n    Rule: undefined\n  };\n\n  if (output[\"ObjectLockEnabled\"] !== undefined) {\n    contents.ObjectLockEnabled = output[\"ObjectLockEnabled\"];\n  }\n\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rule = deserializeAws_restXmlObjectLockRule(output[\"Rule\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectLockLegalHold = function deserializeAws_restXmlObjectLockLegalHold(output, context) {\n  var contents = {\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectLockRetention = function deserializeAws_restXmlObjectLockRetention(output, context) {\n  var contents = {\n    Mode: undefined,\n    RetainUntilDate: undefined\n  };\n\n  if (output[\"Mode\"] !== undefined) {\n    contents.Mode = output[\"Mode\"];\n  }\n\n  if (output[\"RetainUntilDate\"] !== undefined) {\n    contents.RetainUntilDate = new Date(output[\"RetainUntilDate\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectLockRule = function deserializeAws_restXmlObjectLockRule(output, context) {\n  var contents = {\n    DefaultRetention: undefined\n  };\n\n  if (output[\"DefaultRetention\"] !== undefined) {\n    contents.DefaultRetention = deserializeAws_restXmlDefaultRetention(output[\"DefaultRetention\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectVersion = function deserializeAws_restXmlObjectVersion(output, context) {\n  var contents = {\n    ETag: undefined,\n    Size: undefined,\n    StorageClass: undefined,\n    Key: undefined,\n    VersionId: undefined,\n    IsLatest: undefined,\n    LastModified: undefined,\n    Owner: undefined\n  };\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = parseInt(output[\"Size\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"VersionId\"] !== undefined) {\n    contents.VersionId = output[\"VersionId\"];\n  }\n\n  if (output[\"IsLatest\"] !== undefined) {\n    contents.IsLatest = output[\"IsLatest\"] == \"true\";\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  if (output[\"Owner\"] !== undefined) {\n    contents.Owner = deserializeAws_restXmlOwner(output[\"Owner\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlObjectVersionList = function deserializeAws_restXmlObjectVersionList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlObjectVersion(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlOwner = function deserializeAws_restXmlOwner(output, context) {\n  var contents = {\n    DisplayName: undefined,\n    ID: undefined\n  };\n\n  if (output[\"DisplayName\"] !== undefined) {\n    contents.DisplayName = output[\"DisplayName\"];\n  }\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlOwnershipControls = function deserializeAws_restXmlOwnershipControls(output, context) {\n  var contents = {\n    Rules: undefined\n  };\n\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  }\n\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlOwnershipControlsRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlOwnershipControlsRule = function deserializeAws_restXmlOwnershipControlsRule(output, context) {\n  var contents = {\n    ObjectOwnership: undefined\n  };\n\n  if (output[\"ObjectOwnership\"] !== undefined) {\n    contents.ObjectOwnership = output[\"ObjectOwnership\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlOwnershipControlsRules = function deserializeAws_restXmlOwnershipControlsRules(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlOwnershipControlsRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlPart = function deserializeAws_restXmlPart(output, context) {\n  var contents = {\n    PartNumber: undefined,\n    LastModified: undefined,\n    ETag: undefined,\n    Size: undefined\n  };\n\n  if (output[\"PartNumber\"] !== undefined) {\n    contents.PartNumber = parseInt(output[\"PartNumber\"]);\n  }\n\n  if (output[\"LastModified\"] !== undefined) {\n    contents.LastModified = new Date(output[\"LastModified\"]);\n  }\n\n  if (output[\"ETag\"] !== undefined) {\n    contents.ETag = output[\"ETag\"];\n  }\n\n  if (output[\"Size\"] !== undefined) {\n    contents.Size = parseInt(output[\"Size\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlParts = function deserializeAws_restXmlParts(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlPart(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlPolicyStatus = function deserializeAws_restXmlPolicyStatus(output, context) {\n  var contents = {\n    IsPublic: undefined\n  };\n\n  if (output[\"IsPublic\"] !== undefined) {\n    contents.IsPublic = output[\"IsPublic\"] == \"true\";\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlPublicAccessBlockConfiguration = function deserializeAws_restXmlPublicAccessBlockConfiguration(output, context) {\n  var contents = {\n    BlockPublicAcls: undefined,\n    IgnorePublicAcls: undefined,\n    BlockPublicPolicy: undefined,\n    RestrictPublicBuckets: undefined\n  };\n\n  if (output[\"BlockPublicAcls\"] !== undefined) {\n    contents.BlockPublicAcls = output[\"BlockPublicAcls\"] == \"true\";\n  }\n\n  if (output[\"IgnorePublicAcls\"] !== undefined) {\n    contents.IgnorePublicAcls = output[\"IgnorePublicAcls\"] == \"true\";\n  }\n\n  if (output[\"BlockPublicPolicy\"] !== undefined) {\n    contents.BlockPublicPolicy = output[\"BlockPublicPolicy\"] == \"true\";\n  }\n\n  if (output[\"RestrictPublicBuckets\"] !== undefined) {\n    contents.RestrictPublicBuckets = output[\"RestrictPublicBuckets\"] == \"true\";\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlQueueConfiguration = function deserializeAws_restXmlQueueConfiguration(output, context) {\n  var contents = {\n    Id: undefined,\n    QueueArn: undefined,\n    Events: undefined,\n    Filter: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"Queue\"] !== undefined) {\n    contents.QueueArn = output[\"Queue\"];\n  }\n\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n\n  if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlQueueConfigurationList = function deserializeAws_restXmlQueueConfigurationList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlQueueConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlRedirect = function deserializeAws_restXmlRedirect(output, context) {\n  var contents = {\n    HostName: undefined,\n    HttpRedirectCode: undefined,\n    Protocol: undefined,\n    ReplaceKeyPrefixWith: undefined,\n    ReplaceKeyWith: undefined\n  };\n\n  if (output[\"HostName\"] !== undefined) {\n    contents.HostName = output[\"HostName\"];\n  }\n\n  if (output[\"HttpRedirectCode\"] !== undefined) {\n    contents.HttpRedirectCode = output[\"HttpRedirectCode\"];\n  }\n\n  if (output[\"Protocol\"] !== undefined) {\n    contents.Protocol = output[\"Protocol\"];\n  }\n\n  if (output[\"ReplaceKeyPrefixWith\"] !== undefined) {\n    contents.ReplaceKeyPrefixWith = output[\"ReplaceKeyPrefixWith\"];\n  }\n\n  if (output[\"ReplaceKeyWith\"] !== undefined) {\n    contents.ReplaceKeyWith = output[\"ReplaceKeyWith\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlRedirectAllRequestsTo = function deserializeAws_restXmlRedirectAllRequestsTo(output, context) {\n  var contents = {\n    HostName: undefined,\n    Protocol: undefined\n  };\n\n  if (output[\"HostName\"] !== undefined) {\n    contents.HostName = output[\"HostName\"];\n  }\n\n  if (output[\"Protocol\"] !== undefined) {\n    contents.Protocol = output[\"Protocol\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicaModifications = function deserializeAws_restXmlReplicaModifications(output, context) {\n  var contents = {\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationConfiguration = function deserializeAws_restXmlReplicationConfiguration(output, context) {\n  var contents = {\n    Role: undefined,\n    Rules: undefined\n  };\n\n  if (output[\"Role\"] !== undefined) {\n    contents.Role = output[\"Role\"];\n  }\n\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  }\n\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlReplicationRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationRule = function deserializeAws_restXmlReplicationRule(output, context) {\n  var contents = {\n    ID: undefined,\n    Priority: undefined,\n    Prefix: undefined,\n    Filter: undefined,\n    Status: undefined,\n    SourceSelectionCriteria: undefined,\n    ExistingObjectReplication: undefined,\n    Destination: undefined,\n    DeleteMarkerReplication: undefined\n  };\n\n  if (output[\"ID\"] !== undefined) {\n    contents.ID = output[\"ID\"];\n  }\n\n  if (output[\"Priority\"] !== undefined) {\n    contents.Priority = parseInt(output[\"Priority\"]);\n  }\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlReplicationRuleFilter(output[\"Filter\"], context);\n  }\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  if (output[\"SourceSelectionCriteria\"] !== undefined) {\n    contents.SourceSelectionCriteria = deserializeAws_restXmlSourceSelectionCriteria(output[\"SourceSelectionCriteria\"], context);\n  }\n\n  if (output[\"ExistingObjectReplication\"] !== undefined) {\n    contents.ExistingObjectReplication = deserializeAws_restXmlExistingObjectReplication(output[\"ExistingObjectReplication\"], context);\n  }\n\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlDestination(output[\"Destination\"], context);\n  }\n\n  if (output[\"DeleteMarkerReplication\"] !== undefined) {\n    contents.DeleteMarkerReplication = deserializeAws_restXmlDeleteMarkerReplication(output[\"DeleteMarkerReplication\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationRuleAndOperator = function deserializeAws_restXmlReplicationRuleAndOperator(output, context) {\n  var contents = {\n    Prefix: undefined,\n    Tags: undefined\n  };\n\n  if (output[\"Prefix\"] !== undefined) {\n    contents.Prefix = output[\"Prefix\"];\n  }\n\n  if (output.Tag === \"\") {\n    contents.Tags = [];\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    contents.Tags = deserializeAws_restXmlTagSet(__getArrayIfSingleItem(output[\"Tag\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationRuleFilter = function deserializeAws_restXmlReplicationRuleFilter(output, context) {\n  if (output[\"Prefix\"] !== undefined) {\n    return {\n      Prefix: output[\"Prefix\"]\n    };\n  }\n\n  if (output[\"Tag\"] !== undefined) {\n    return {\n      Tag: deserializeAws_restXmlTag(output[\"Tag\"], context)\n    };\n  }\n\n  if (output[\"And\"] !== undefined) {\n    return {\n      And: deserializeAws_restXmlReplicationRuleAndOperator(output[\"And\"], context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_restXmlReplicationRules = function deserializeAws_restXmlReplicationRules(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlReplicationRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlReplicationTime = function deserializeAws_restXmlReplicationTime(output, context) {\n  var contents = {\n    Status: undefined,\n    Time: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  if (output[\"Time\"] !== undefined) {\n    contents.Time = deserializeAws_restXmlReplicationTimeValue(output[\"Time\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlReplicationTimeValue = function deserializeAws_restXmlReplicationTimeValue(output, context) {\n  var contents = {\n    Minutes: undefined\n  };\n\n  if (output[\"Minutes\"] !== undefined) {\n    contents.Minutes = parseInt(output[\"Minutes\"]);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlRoutingRule = function deserializeAws_restXmlRoutingRule(output, context) {\n  var contents = {\n    Condition: undefined,\n    Redirect: undefined\n  };\n\n  if (output[\"Condition\"] !== undefined) {\n    contents.Condition = deserializeAws_restXmlCondition(output[\"Condition\"], context);\n  }\n\n  if (output[\"Redirect\"] !== undefined) {\n    contents.Redirect = deserializeAws_restXmlRedirect(output[\"Redirect\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlRoutingRules = function deserializeAws_restXmlRoutingRules(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlRoutingRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlS3KeyFilter = function deserializeAws_restXmlS3KeyFilter(output, context) {\n  var contents = {\n    FilterRules: undefined\n  };\n\n  if (output.FilterRule === \"\") {\n    contents.FilterRules = [];\n  }\n\n  if (output[\"FilterRule\"] !== undefined) {\n    contents.FilterRules = deserializeAws_restXmlFilterRuleList(__getArrayIfSingleItem(output[\"FilterRule\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionByDefault = function deserializeAws_restXmlServerSideEncryptionByDefault(output, context) {\n  var contents = {\n    SSEAlgorithm: undefined,\n    KMSMasterKeyID: undefined\n  };\n\n  if (output[\"SSEAlgorithm\"] !== undefined) {\n    contents.SSEAlgorithm = output[\"SSEAlgorithm\"];\n  }\n\n  if (output[\"KMSMasterKeyID\"] !== undefined) {\n    contents.KMSMasterKeyID = output[\"KMSMasterKeyID\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionConfiguration = function deserializeAws_restXmlServerSideEncryptionConfiguration(output, context) {\n  var contents = {\n    Rules: undefined\n  };\n\n  if (output.Rule === \"\") {\n    contents.Rules = [];\n  }\n\n  if (output[\"Rule\"] !== undefined) {\n    contents.Rules = deserializeAws_restXmlServerSideEncryptionRules(__getArrayIfSingleItem(output[\"Rule\"]), context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionRule = function deserializeAws_restXmlServerSideEncryptionRule(output, context) {\n  var contents = {\n    ApplyServerSideEncryptionByDefault: undefined,\n    BucketKeyEnabled: undefined\n  };\n\n  if (output[\"ApplyServerSideEncryptionByDefault\"] !== undefined) {\n    contents.ApplyServerSideEncryptionByDefault = deserializeAws_restXmlServerSideEncryptionByDefault(output[\"ApplyServerSideEncryptionByDefault\"], context);\n  }\n\n  if (output[\"BucketKeyEnabled\"] !== undefined) {\n    contents.BucketKeyEnabled = output[\"BucketKeyEnabled\"] == \"true\";\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlServerSideEncryptionRules = function deserializeAws_restXmlServerSideEncryptionRules(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlServerSideEncryptionRule(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlSourceSelectionCriteria = function deserializeAws_restXmlSourceSelectionCriteria(output, context) {\n  var contents = {\n    SseKmsEncryptedObjects: undefined,\n    ReplicaModifications: undefined\n  };\n\n  if (output[\"SseKmsEncryptedObjects\"] !== undefined) {\n    contents.SseKmsEncryptedObjects = deserializeAws_restXmlSseKmsEncryptedObjects(output[\"SseKmsEncryptedObjects\"], context);\n  }\n\n  if (output[\"ReplicaModifications\"] !== undefined) {\n    contents.ReplicaModifications = deserializeAws_restXmlReplicaModifications(output[\"ReplicaModifications\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlSSEKMS = function deserializeAws_restXmlSSEKMS(output, context) {\n  var contents = {\n    KeyId: undefined\n  };\n\n  if (output[\"KeyId\"] !== undefined) {\n    contents.KeyId = output[\"KeyId\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlSseKmsEncryptedObjects = function deserializeAws_restXmlSseKmsEncryptedObjects(output, context) {\n  var contents = {\n    Status: undefined\n  };\n\n  if (output[\"Status\"] !== undefined) {\n    contents.Status = output[\"Status\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlSSES3 = function deserializeAws_restXmlSSES3(output, context) {\n  var contents = {};\n  return contents;\n};\n\nvar deserializeAws_restXmlStorageClassAnalysis = function deserializeAws_restXmlStorageClassAnalysis(output, context) {\n  var contents = {\n    DataExport: undefined\n  };\n\n  if (output[\"DataExport\"] !== undefined) {\n    contents.DataExport = deserializeAws_restXmlStorageClassAnalysisDataExport(output[\"DataExport\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlStorageClassAnalysisDataExport = function deserializeAws_restXmlStorageClassAnalysisDataExport(output, context) {\n  var contents = {\n    OutputSchemaVersion: undefined,\n    Destination: undefined\n  };\n\n  if (output[\"OutputSchemaVersion\"] !== undefined) {\n    contents.OutputSchemaVersion = output[\"OutputSchemaVersion\"];\n  }\n\n  if (output[\"Destination\"] !== undefined) {\n    contents.Destination = deserializeAws_restXmlAnalyticsExportDestination(output[\"Destination\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTag = function deserializeAws_restXmlTag(output, context) {\n  var contents = {\n    Key: undefined,\n    Value: undefined\n  };\n\n  if (output[\"Key\"] !== undefined) {\n    contents.Key = output[\"Key\"];\n  }\n\n  if (output[\"Value\"] !== undefined) {\n    contents.Value = output[\"Value\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTagSet = function deserializeAws_restXmlTagSet(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlTag(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlTargetGrant = function deserializeAws_restXmlTargetGrant(output, context) {\n  var contents = {\n    Grantee: undefined,\n    Permission: undefined\n  };\n\n  if (output[\"Grantee\"] !== undefined) {\n    contents.Grantee = deserializeAws_restXmlGrantee(output[\"Grantee\"], context);\n  }\n\n  if (output[\"Permission\"] !== undefined) {\n    contents.Permission = output[\"Permission\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTargetGrants = function deserializeAws_restXmlTargetGrants(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlTargetGrant(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlTiering = function deserializeAws_restXmlTiering(output, context) {\n  var contents = {\n    Days: undefined,\n    AccessTier: undefined\n  };\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n\n  if (output[\"AccessTier\"] !== undefined) {\n    contents.AccessTier = output[\"AccessTier\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTieringList = function deserializeAws_restXmlTieringList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlTiering(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlTopicConfiguration = function deserializeAws_restXmlTopicConfiguration(output, context) {\n  var contents = {\n    Id: undefined,\n    TopicArn: undefined,\n    Events: undefined,\n    Filter: undefined\n  };\n\n  if (output[\"Id\"] !== undefined) {\n    contents.Id = output[\"Id\"];\n  }\n\n  if (output[\"Topic\"] !== undefined) {\n    contents.TopicArn = output[\"Topic\"];\n  }\n\n  if (output.Event === \"\") {\n    contents.Events = [];\n  }\n\n  if (output[\"Event\"] !== undefined) {\n    contents.Events = deserializeAws_restXmlEventList(__getArrayIfSingleItem(output[\"Event\"]), context);\n  }\n\n  if (output[\"Filter\"] !== undefined) {\n    contents.Filter = deserializeAws_restXmlNotificationConfigurationFilter(output[\"Filter\"], context);\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTopicConfigurationList = function deserializeAws_restXmlTopicConfigurationList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlTopicConfiguration(entry, context);\n  });\n};\n\nvar deserializeAws_restXmlTransition = function deserializeAws_restXmlTransition(output, context) {\n  var contents = {\n    Date: undefined,\n    Days: undefined,\n    StorageClass: undefined\n  };\n\n  if (output[\"Date\"] !== undefined) {\n    contents.Date = new Date(output[\"Date\"]);\n  }\n\n  if (output[\"Days\"] !== undefined) {\n    contents.Days = parseInt(output[\"Days\"]);\n  }\n\n  if (output[\"StorageClass\"] !== undefined) {\n    contents.StorageClass = output[\"StorageClass\"];\n  }\n\n  return contents;\n};\n\nvar deserializeAws_restXmlTransitionList = function deserializeAws_restXmlTransitionList(output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restXmlTransition(entry, context);\n  });\n};\n\nvar deserializeMetadata = function deserializeMetadata(output) {\n  var _a;\n\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n}; // Collect low-level response body stream to Uint8Array.\n\n\nvar collectBody = function collectBody(streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n}; // Encode Uint8Array data into string with utf-8.\n\n\nvar collectBodyString = function collectBodyString(streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar isSerializableHeaderValue = function isSerializableHeaderValue(value) {\n  return value !== undefined && value !== null && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\n\nvar decodeEscapedXML = function decodeEscapedXML(str) {\n  return str.replace(/&amp;/g, \"&\").replace(/&apos;/g, \"'\").replace(/&quot;/g, '\"').replace(/&gt;/g, \">\").replace(/&lt;/g, \"<\");\n};\n\nvar parseBody = function parseBody(streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      var parsedObj = xmlParse(encoded, {\n        attributeNamePrefix: \"\",\n        ignoreAttributes: false,\n        parseNodeValue: false,\n        tagValueProcessor: function tagValueProcessor(val, tagName) {\n          return decodeEscapedXML(val);\n        }\n      });\n      var textNodeName = \"#text\";\n      var key = Object.keys(parsedObj)[0];\n      var parsedObjToReturn = parsedObj[key];\n\n      if (parsedObjToReturn[textNodeName]) {\n        parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n        delete parsedObjToReturn[textNodeName];\n      }\n\n      return __getValueFromTextNode(parsedObjToReturn);\n    }\n\n    return {};\n  });\n};\n\nvar loadRestXmlErrorCode = function loadRestXmlErrorCode(output, data) {\n  if (data.Code !== undefined) {\n    return data.Code;\n  }\n\n  if (output.statusCode == 404) {\n    return \"NotFound\";\n  }\n\n  return \"\";\n};","import { __read } from \"tslib\";\n/**\n * Validate whether a string is an ARN.\n */\n\nexport var validate = function validate(str) {\n  return typeof str === \"string\" && str.indexOf(\"arn:\") === 0 && str.split(\":\").length >= 6;\n};\n/**\n * Parse an ARN string into structure with partition, service, region, accountId and resource values\n */\n\nexport var parse = function parse(arn) {\n  var segments = arn.split(\":\");\n  if (segments.length < 6 || segments[0] !== \"arn\") throw new Error(\"Malformed ARN\");\n\n  var _a = __read(segments),\n      //Skip \"arn\" literal\n  partition = _a[1],\n      service = _a[2],\n      region = _a[3],\n      accountId = _a[4],\n      resource = _a.slice(5);\n\n  return {\n    partition: partition,\n    service: service,\n    region: region,\n    accountId: accountId,\n    resource: resource.join(\":\")\n  };\n};\n/**\n * Build an ARN with service, partition, region, accountId, and resources strings\n */\n\nexport var build = function build(arnObject) {\n  var _a = arnObject.partition,\n      partition = _a === void 0 ? \"aws\" : _a,\n      service = arnObject.service,\n      region = arnObject.region,\n      accountId = arnObject.accountId,\n      resource = arnObject.resource;\n\n  if ([service, region, accountId, resource].some(function (segment) {\n    return typeof segment !== \"string\";\n  })) {\n    throw new Error(\"Input ARN object is invalid\");\n  }\n\n  return \"arn:\" + partition + \":\" + service + \":\" + region + \":\" + accountId + \":\" + resource;\n};","import { __read } from \"tslib\";\nvar DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nvar IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nvar DOTS_PATTERN = /\\.\\./;\nexport var DOT_PATTERN = /\\./;\nexport var S3_HOSTNAME_PATTERN = /^(.+\\.)?s3[.-]([a-z0-9-]+)\\./;\nvar S3_US_EAST_1_ALTNAME_PATTERN = /^s3(-external-1)?\\.amazonaws\\.com$/;\nvar AWS_PARTITION_SUFFIX = \"amazonaws.com\";\nexport var isBucketNameOptions = function isBucketNameOptions(options) {\n  return typeof options.bucketName === \"string\";\n};\n/**\n * Get pseudo region from supplied region. For example, if supplied with `fips-us-west-2`, it returns `us-west-2`.\n * @internal\n */\n\nexport var getPseudoRegion = function getPseudoRegion(region) {\n  return isFipsRegion(region) ? region.replace(/fips-|-fips/, \"\") : region;\n};\n/**\n * Determines whether a given string is DNS compliant per the rules outlined by\n * S3. Length, capitaization, and leading dot restrictions are enforced by the\n * DOMAIN_PATTERN regular expression.\n * @internal\n *\n * @see https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html\n */\n\nexport var isDnsCompatibleBucketName = function isDnsCompatibleBucketName(bucketName) {\n  return DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\n};\n\nvar getRegionalSuffix = function getRegionalSuffix(hostname) {\n  var parts = hostname.match(S3_HOSTNAME_PATTERN);\n  return [parts[2], hostname.replace(new RegExp(\"^\" + parts[0]), \"\")];\n};\n\nexport var getSuffix = function getSuffix(hostname) {\n  return S3_US_EAST_1_ALTNAME_PATTERN.test(hostname) ? [\"us-east-1\", AWS_PARTITION_SUFFIX] : getRegionalSuffix(hostname);\n};\n/**\n * Infer region and hostname suffix from a complete hostname\n * @internal\n * @param hostname - Hostname\n * @returns [Region, Hostname suffix]\n */\n\nexport var getSuffixForArnEndpoint = function getSuffixForArnEndpoint(hostname) {\n  return S3_US_EAST_1_ALTNAME_PATTERN.test(hostname) ? [hostname.replace(\".\" + AWS_PARTITION_SUFFIX, \"\"), AWS_PARTITION_SUFFIX] : getRegionalSuffix(hostname);\n};\nexport var validateArnEndpointOptions = function validateArnEndpointOptions(options) {\n  if (options.pathStyleEndpoint) {\n    throw new Error(\"Path-style S3 endpoint is not supported when bucket is an ARN\");\n  }\n\n  if (options.accelerateEndpoint) {\n    throw new Error(\"Accelerate endpoint is not supported when bucket is an ARN\");\n  }\n\n  if (!options.tlsCompatible) {\n    throw new Error(\"HTTPS is required when bucket is an ARN\");\n  }\n};\nexport var validateService = function validateService(service) {\n  if (service !== \"s3\" && service !== \"s3-outposts\") {\n    throw new Error(\"Expect 's3' or 's3-outposts' in ARN service component\");\n  }\n};\nexport var validateS3Service = function validateS3Service(service) {\n  if (service !== \"s3\") {\n    throw new Error(\"Expect 's3' in Accesspoint ARN service component\");\n  }\n};\nexport var validateOutpostService = function validateOutpostService(service) {\n  if (service !== \"s3-outposts\") {\n    throw new Error(\"Expect 's3-posts' in Outpost ARN service component\");\n  }\n};\n/**\n * Validate partition inferred from ARN is the same to `options.clientPartition`.\n * @internal\n */\n\nexport var validatePartition = function validatePartition(partition, options) {\n  if (partition !== options.clientPartition) {\n    throw new Error(\"Partition in ARN is incompatible, got \\\"\" + partition + \"\\\" but expected \\\"\" + options.clientPartition + \"\\\"\");\n  }\n};\n/**\n * validate region value inferred from ARN. If `options.useArnRegion` is set, it validates the region is not a FIPS\n * region. If `options.useArnRegion` is unset, it validates the region is equal to `options.clientRegion` or\n * `options.clientSigningRegion`.\n * @internal\n */\n\nexport var validateRegion = function validateRegion(region, options) {\n  if (region === \"\") {\n    throw new Error(\"ARN region is empty\");\n  }\n\n  if (!options.useArnRegion && !isEqualRegions(region, options.clientRegion) && !isEqualRegions(region, options.clientSigningRegion)) {\n    throw new Error(\"Region in ARN is incompatible, got \" + region + \" but expected \" + options.clientRegion);\n  }\n\n  if (options.useArnRegion && isFipsRegion(region)) {\n    throw new Error(\"Endpoint does not support FIPS region\");\n  }\n};\n\nvar isFipsRegion = function isFipsRegion(region) {\n  return region.startsWith(\"fips-\") || region.endsWith(\"-fips\");\n};\n\nvar isEqualRegions = function isEqualRegions(regionA, regionB) {\n  return regionA === regionB || getPseudoRegion(regionA) === regionB || regionA === getPseudoRegion(regionB);\n};\n/**\n * Validate an account ID\n * @internal\n */\n\n\nexport var validateAccountId = function validateAccountId(accountId) {\n  if (!/[0-9]{12}/.exec(accountId)) {\n    throw new Error(\"Access point ARN accountID does not match regex '[0-9]{12}'\");\n  }\n};\n/**\n * Validate a host label according to https://tools.ietf.org/html/rfc3986#section-3.2.2\n * @internal\n */\n\nexport var validateDNSHostLabel = function validateDNSHostLabel(label, options) {\n  if (options === void 0) {\n    options = {\n      tlsCompatible: true\n    };\n  } // reference: https://tools.ietf.org/html/rfc3986#section-3.2.2\n\n\n  if (label.length >= 64 || !/^[a-z0-9][a-z0-9.-]+[a-z0-9]$/.test(label) || /(\\d+\\.){3}\\d+/.test(label) || /[.-]{2}/.test(label) || (options === null || options === void 0 ? void 0 : options.tlsCompatible) && DOT_PATTERN.test(label)) {\n    throw new Error(\"Invalid DNS label \" + label);\n  }\n};\n/**\n * Validate and parse an Access Point ARN or Outposts ARN\n * @internal\n *\n * @param resource - The resource section of an ARN\n * @returns Access Point Name and optional Outpost ID.\n */\n\nexport var getArnResources = function getArnResources(resource) {\n  var delimiter = resource.includes(\":\") ? \":\" : \"/\";\n\n  var _a = __read(resource.split(delimiter)),\n      resourceType = _a[0],\n      rest = _a.slice(1);\n\n  if (resourceType === \"accesspoint\") {\n    // Parse accesspoint ARN\n    if (rest.length !== 1 || rest[0] === \"\") {\n      throw new Error(\"Access Point ARN should have one resource accesspoint\" + delimiter + \"{accesspointname}\");\n    }\n\n    return {\n      accesspointName: rest[0]\n    };\n  } else if (resourceType === \"outpost\") {\n    // Parse outpost ARN\n    if (!rest[0] || rest[1] !== \"accesspoint\" || !rest[2] || rest.length !== 3) {\n      throw new Error(\"Outpost ARN should have resource outpost\" + delimiter + \"{outpostId}\" + delimiter + \"accesspoint\" + delimiter + \"{accesspointName}\");\n    }\n\n    var _b = __read(rest, 3),\n        outpostId = _b[0],\n        _ = _b[1],\n        accesspointName = _b[2];\n\n    return {\n      outpostId: outpostId,\n      accesspointName: accesspointName\n    };\n  } else {\n    throw new Error(\"ARN resource should begin with 'accesspoint\" + delimiter + \"' or 'outpost\" + delimiter + \"'\");\n  }\n};\n/**\n * Throw if dual stack configuration is set to true.\n * @internal\n */\n\nexport var validateNoDualstack = function validateNoDualstack(dualstackEndpoint) {\n  if (dualstackEndpoint) throw new Error(\"Dualstack endpoint is not supported with Outpost\");\n};\n/**\n * Validate region is not appended or prepended with a `fips-`\n * @internal\n */\n\nexport var validateNoFIPS = function validateNoFIPS(region) {\n  if (isFipsRegion(region !== null && region !== void 0 ? region : \"\")) throw new Error(\"FIPS region is not supported with Outpost, got \" + region);\n};","import { __assign, __read } from \"tslib\";\nimport { DOT_PATTERN, getArnResources, getSuffix, getSuffixForArnEndpoint, isBucketNameOptions, isDnsCompatibleBucketName, validateAccountId, validateArnEndpointOptions, validateDNSHostLabel, validateNoDualstack, validateNoFIPS, validateOutpostService, validatePartition, validateRegion, validateS3Service, validateService } from \"./bucketHostnameUtils\";\nexport var bucketHostname = function bucketHostname(options) {\n  var isCustomEndpoint = options.isCustomEndpoint,\n      baseHostname = options.baseHostname,\n      dualstackEndpoint = options.dualstackEndpoint,\n      accelerateEndpoint = options.accelerateEndpoint;\n\n  if (isCustomEndpoint) {\n    if (dualstackEndpoint) throw new Error(\"Dualstack endpoint is not supported with custom endpoint\");\n    if (accelerateEndpoint) throw new Error(\"Accelerate endpoint is not supported with custom endpoint\");\n  }\n\n  return isBucketNameOptions(options) ? // Construct endpoint when bucketName is a string referring to a bucket name\n  getEndpointFromBucketName(__assign(__assign({}, options), {\n    isCustomEndpoint: isCustomEndpoint\n  })) : // Construct endpoint when bucketName is an ARN referring to an S3 resource like Access Point\n  getEndpointFromArn(__assign(__assign({}, options), {\n    isCustomEndpoint: isCustomEndpoint\n  }));\n};\n\nvar getEndpointFromArn = function getEndpointFromArn(options) {\n  var isCustomEndpoint = options.isCustomEndpoint,\n      baseHostname = options.baseHostname;\n\n  var _a = __read(isCustomEndpoint ? [options.clientRegion, baseHostname] : // Infer client region and hostname suffix from hostname from endpoints.json, like `s3.us-west-2.amazonaws.com`\n  getSuffixForArnEndpoint(baseHostname), 2),\n      clientRegion = _a[0],\n      hostnameSuffix = _a[1];\n\n  var pathStyleEndpoint = options.pathStyleEndpoint,\n      _b = options.dualstackEndpoint,\n      dualstackEndpoint = _b === void 0 ? false : _b,\n      _c = options.accelerateEndpoint,\n      accelerateEndpoint = _c === void 0 ? false : _c,\n      _d = options.tlsCompatible,\n      tlsCompatible = _d === void 0 ? true : _d,\n      useArnRegion = options.useArnRegion,\n      bucketName = options.bucketName,\n      _e = options.clientPartition,\n      clientPartition = _e === void 0 ? \"aws\" : _e,\n      _f = options.clientSigningRegion,\n      clientSigningRegion = _f === void 0 ? clientRegion : _f;\n  validateArnEndpointOptions({\n    pathStyleEndpoint: pathStyleEndpoint,\n    accelerateEndpoint: accelerateEndpoint,\n    tlsCompatible: tlsCompatible\n  }); // Validate and parse the ARN supplied as a bucket name\n\n  var service = bucketName.service,\n      partition = bucketName.partition,\n      accountId = bucketName.accountId,\n      region = bucketName.region,\n      resource = bucketName.resource;\n  validateService(service);\n  validatePartition(partition, {\n    clientPartition: clientPartition\n  });\n  validateAccountId(accountId);\n  validateRegion(region, {\n    useArnRegion: useArnRegion,\n    clientRegion: clientRegion,\n    clientSigningRegion: clientSigningRegion\n  });\n\n  var _g = getArnResources(resource),\n      accesspointName = _g.accesspointName,\n      outpostId = _g.outpostId;\n\n  validateDNSHostLabel(accesspointName + \"-\" + accountId, {\n    tlsCompatible: tlsCompatible\n  });\n  var endpointRegion = useArnRegion ? region : clientRegion;\n  var signingRegion = useArnRegion ? region : clientSigningRegion;\n\n  if (outpostId) {\n    // if this is an Outpost ARN\n    validateOutpostService(service);\n    validateDNSHostLabel(outpostId, {\n      tlsCompatible: tlsCompatible\n    });\n    validateNoDualstack(dualstackEndpoint);\n    validateNoFIPS(endpointRegion);\n    var hostnamePrefix_1 = accesspointName + \"-\" + accountId + \".\" + outpostId;\n    return {\n      bucketEndpoint: true,\n      hostname: \"\" + hostnamePrefix_1 + (isCustomEndpoint ? \"\" : \".s3-outposts.\" + endpointRegion) + \".\" + hostnameSuffix,\n      signingRegion: signingRegion,\n      signingService: \"s3-outposts\"\n    };\n  } // construct endpoint from Accesspoint ARN\n\n\n  validateS3Service(service);\n  var hostnamePrefix = accesspointName + \"-\" + accountId;\n  return {\n    bucketEndpoint: true,\n    hostname: \"\" + hostnamePrefix + (isCustomEndpoint ? \"\" : \".s3-accesspoint\" + (dualstackEndpoint ? \".dualstack\" : \"\") + \".\" + endpointRegion) + \".\" + hostnameSuffix,\n    signingRegion: signingRegion\n  };\n};\n\nvar getEndpointFromBucketName = function getEndpointFromBucketName(_a) {\n  var _b = _a.accelerateEndpoint,\n      accelerateEndpoint = _b === void 0 ? false : _b,\n      region = _a.clientRegion,\n      baseHostname = _a.baseHostname,\n      bucketName = _a.bucketName,\n      _c = _a.dualstackEndpoint,\n      dualstackEndpoint = _c === void 0 ? false : _c,\n      _d = _a.pathStyleEndpoint,\n      pathStyleEndpoint = _d === void 0 ? false : _d,\n      _e = _a.tlsCompatible,\n      tlsCompatible = _e === void 0 ? true : _e,\n      _f = _a.isCustomEndpoint,\n      isCustomEndpoint = _f === void 0 ? false : _f;\n\n  var _g = __read(isCustomEndpoint ? [region, baseHostname] : getSuffix(baseHostname), 2),\n      clientRegion = _g[0],\n      hostnameSuffix = _g[1];\n\n  if (pathStyleEndpoint || !isDnsCompatibleBucketName(bucketName) || tlsCompatible && DOT_PATTERN.test(bucketName)) {\n    return {\n      bucketEndpoint: false,\n      hostname: dualstackEndpoint ? \"s3.dualstack.\" + clientRegion + \".\" + hostnameSuffix : baseHostname\n    };\n  }\n\n  if (accelerateEndpoint) {\n    baseHostname = \"s3-accelerate\" + (dualstackEndpoint ? \".dualstack\" : \"\") + \".\" + hostnameSuffix;\n  } else if (dualstackEndpoint) {\n    baseHostname = \"s3.dualstack.\" + clientRegion + \".\" + hostnameSuffix;\n  }\n\n  return {\n    bucketEndpoint: true,\n    hostname: bucketName + \".\" + baseHostname\n  };\n};","import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { parse as parseArn, validate as validateArn } from \"@aws-sdk/util-arn-parser\";\nimport { bucketHostname } from \"./bucketHostname\";\nimport { getPseudoRegion } from \"./bucketHostnameUtils\";\nexport var bucketEndpointMiddleware = function bucketEndpointMiddleware(options) {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var bucketName, replaceBucketInPath, request, bucketArn, clientRegion, _a, _b, partition, _c, signingRegion, useArnRegion, _d, hostname, bucketEndpoint, modifiedSigningRegion, signingService, clientRegion, _e, _f, hostname, bucketEndpoint;\n\n        return __generator(this, function (_g) {\n          switch (_g.label) {\n            case 0:\n              bucketName = args.input.Bucket;\n              replaceBucketInPath = options.bucketEndpoint;\n              request = args.request;\n              if (!HttpRequest.isInstance(request)) return [3\n              /*break*/\n              , 8];\n              if (!options.bucketEndpoint) return [3\n              /*break*/\n              , 1];\n              request.hostname = bucketName;\n              return [3\n              /*break*/\n              , 7];\n\n            case 1:\n              if (!validateArn(bucketName)) return [3\n              /*break*/\n              , 5];\n              bucketArn = parseArn(bucketName);\n              _a = getPseudoRegion;\n              return [4\n              /*yield*/\n              , options.region()];\n\n            case 2:\n              clientRegion = _a.apply(void 0, [_g.sent()]);\n              return [4\n              /*yield*/\n              , options.regionInfoProvider(clientRegion)];\n\n            case 3:\n              _b = _g.sent() || {}, partition = _b.partition, _c = _b.signingRegion, signingRegion = _c === void 0 ? clientRegion : _c;\n              return [4\n              /*yield*/\n              , options.useArnRegion()];\n\n            case 4:\n              useArnRegion = _g.sent();\n              _d = bucketHostname({\n                bucketName: bucketArn,\n                baseHostname: request.hostname,\n                accelerateEndpoint: options.useAccelerateEndpoint,\n                dualstackEndpoint: options.useDualstackEndpoint,\n                pathStyleEndpoint: options.forcePathStyle,\n                tlsCompatible: request.protocol === \"https:\",\n                useArnRegion: useArnRegion,\n                clientPartition: partition,\n                clientSigningRegion: signingRegion,\n                clientRegion: clientRegion,\n                isCustomEndpoint: options.isCustomEndpoint\n              }), hostname = _d.hostname, bucketEndpoint = _d.bucketEndpoint, modifiedSigningRegion = _d.signingRegion, signingService = _d.signingService; // If the request needs to use a region or service name inferred from ARN that different from client region, we\n              // need to set them in the handler context so the signer will use them\n\n              if (modifiedSigningRegion && modifiedSigningRegion !== signingRegion) {\n                context[\"signing_region\"] = modifiedSigningRegion;\n              }\n\n              if (signingService && signingService !== \"s3\") {\n                context[\"signing_service\"] = signingService;\n              }\n\n              request.hostname = hostname;\n              replaceBucketInPath = bucketEndpoint;\n              return [3\n              /*break*/\n              , 7];\n\n            case 5:\n              _e = getPseudoRegion;\n              return [4\n              /*yield*/\n              , options.region()];\n\n            case 6:\n              clientRegion = _e.apply(void 0, [_g.sent()]);\n              _f = bucketHostname({\n                bucketName: bucketName,\n                clientRegion: clientRegion,\n                baseHostname: request.hostname,\n                accelerateEndpoint: options.useAccelerateEndpoint,\n                dualstackEndpoint: options.useDualstackEndpoint,\n                pathStyleEndpoint: options.forcePathStyle,\n                tlsCompatible: request.protocol === \"https:\",\n                isCustomEndpoint: options.isCustomEndpoint\n              }), hostname = _f.hostname, bucketEndpoint = _f.bucketEndpoint;\n              request.hostname = hostname;\n              replaceBucketInPath = bucketEndpoint;\n              _g.label = 7;\n\n            case 7:\n              if (replaceBucketInPath) {\n                request.path = request.path.replace(/^(\\/)?[^\\/]+/, \"\");\n\n                if (request.path === \"\") {\n                  request.path = \"/\";\n                }\n              }\n\n              _g.label = 8;\n\n            case 8:\n              return [2\n              /*return*/\n              , next(__assign(__assign({}, args), {\n                request: request\n              }))];\n          }\n        });\n      });\n    };\n  };\n};\nexport var bucketEndpointMiddlewareOptions = {\n  tags: [\"BUCKET_ENDPOINT\"],\n  name: \"bucketEndpointMiddleware\",\n  relation: \"before\",\n  toMiddleware: \"hostHeaderMiddleware\",\n  override: true\n};\nexport var getBucketEndpointPlugin = function getBucketEndpointPlugin(options) {\n  return {\n    applyToStack: function applyToStack(clientStack) {\n      clientStack.addRelativeTo(bucketEndpointMiddleware(options), bucketEndpointMiddlewareOptions);\n    }\n  };\n};","import { __assign } from \"tslib\";\nexport function resolveBucketEndpointConfig(input) {\n  var _a = input.bucketEndpoint,\n      bucketEndpoint = _a === void 0 ? false : _a,\n      _b = input.forcePathStyle,\n      forcePathStyle = _b === void 0 ? false : _b,\n      _c = input.useAccelerateEndpoint,\n      useAccelerateEndpoint = _c === void 0 ? false : _c,\n      _d = input.useDualstackEndpoint,\n      useDualstackEndpoint = _d === void 0 ? false : _d,\n      _e = input.useArnRegion,\n      useArnRegion = _e === void 0 ? false : _e;\n  return __assign(__assign({}, input), {\n    bucketEndpoint: bucketEndpoint,\n    forcePathStyle: forcePathStyle,\n    useAccelerateEndpoint: useAccelerateEndpoint,\n    useDualstackEndpoint: useDualstackEndpoint,\n    useArnRegion: typeof useArnRegion === \"function\" ? useArnRegion : function () {\n      return Promise.resolve(useArnRegion);\n    }\n  });\n}\nexport var NODE_USE_ARN_REGION_ENV_NAME = \"AWS_S3_USE_ARN_REGION\";\nexport var NODE_USE_ARN_REGION_INI_NAME = \"s3_use_arn_region\";\n/**\n * Config to load useArnRegion from environment variables and shared INI files\n *\n * @api private\n */\n\nexport var NODE_USE_ARN_REGION_CONFIG_OPTIONS = {\n  environmentVariableSelector: function environmentVariableSelector(env) {\n    if (!Object.prototype.hasOwnProperty.call(env, NODE_USE_ARN_REGION_ENV_NAME)) return undefined;\n    if (env[NODE_USE_ARN_REGION_ENV_NAME] === \"true\") return true;\n    if (env[NODE_USE_ARN_REGION_ENV_NAME] === \"false\") return false;\n    throw new Error(\"Cannot load env \" + NODE_USE_ARN_REGION_ENV_NAME + \". Expected \\\"true\\\" or \\\"false\\\", got \" + env[NODE_USE_ARN_REGION_ENV_NAME] + \".\");\n  },\n  configFileSelector: function configFileSelector(profile) {\n    if (!Object.prototype.hasOwnProperty.call(profile, NODE_USE_ARN_REGION_INI_NAME)) return undefined;\n    if (profile[NODE_USE_ARN_REGION_INI_NAME] === \"true\") return true;\n    if (profile[NODE_USE_ARN_REGION_INI_NAME] === \"false\") return false;\n    throw new Error(\"Cannot load shared config entry \" + NODE_USE_ARN_REGION_INI_NAME + \". Expected \\\"true\\\" or \\\"false\\\", got \" + profile[NODE_USE_ARN_REGION_INI_NAME] + \".\");\n  },\n  default: false\n};","import { __assign, __awaiter, __generator, __values } from \"tslib\";\nexport function ssecMiddleware(options) {\n  var _this = this;\n\n  return function (next) {\n    return function (args) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var input, properties, properties_1, properties_1_1, prop, value, valueView, encoded, hash, _a, _b, _c, _d, e_1_1;\n\n        var e_1, _e, _f;\n\n        return __generator(this, function (_g) {\n          switch (_g.label) {\n            case 0:\n              input = __assign({}, args.input);\n              properties = [{\n                target: \"SSECustomerKey\",\n                hash: \"SSECustomerKeyMD5\"\n              }, {\n                target: \"CopySourceSSECustomerKey\",\n                hash: \"CopySourceSSECustomerKeyMD5\"\n              }];\n              _g.label = 1;\n\n            case 1:\n              _g.trys.push([1, 6, 7, 8]);\n\n              properties_1 = __values(properties), properties_1_1 = properties_1.next();\n              _g.label = 2;\n\n            case 2:\n              if (!!properties_1_1.done) return [3\n              /*break*/\n              , 5];\n              prop = properties_1_1.value;\n              value = input[prop.target];\n              if (!value) return [3\n              /*break*/\n              , 4];\n              valueView = ArrayBuffer.isView(value) ? new Uint8Array(value.buffer, value.byteOffset, value.byteLength) : typeof value === \"string\" ? options.utf8Decoder(value) : new Uint8Array(value);\n              encoded = options.base64Encoder(valueView);\n              hash = new options.md5();\n              hash.update(valueView);\n              _a = [__assign({}, input)];\n              _f = {}, _f[prop.target] = encoded;\n              _b = prop.hash;\n              _d = (_c = options).base64Encoder;\n              return [4\n              /*yield*/\n              , hash.digest()];\n\n            case 3:\n              input = __assign.apply(void 0, _a.concat([(_f[_b] = _d.apply(_c, [_g.sent()]), _f)]));\n              _g.label = 4;\n\n            case 4:\n              properties_1_1 = properties_1.next();\n              return [3\n              /*break*/\n              , 2];\n\n            case 5:\n              return [3\n              /*break*/\n              , 8];\n\n            case 6:\n              e_1_1 = _g.sent();\n              e_1 = {\n                error: e_1_1\n              };\n              return [3\n              /*break*/\n              , 8];\n\n            case 7:\n              try {\n                if (properties_1_1 && !properties_1_1.done && (_e = properties_1.return)) _e.call(properties_1);\n              } finally {\n                if (e_1) throw e_1.error;\n              }\n\n              return [7\n              /*endfinally*/\n              ];\n\n            case 8:\n              return [2\n              /*return*/\n              , next(__assign(__assign({}, args), {\n                input: input\n              }))];\n          }\n        });\n      });\n    };\n  };\n}\nexport var ssecMiddlewareOptions = {\n  name: \"ssecMiddleware\",\n  step: \"initialize\",\n  tags: [\"SSE\"],\n  override: true\n};\nexport var getSsecPlugin = function getSsecPlugin(config) {\n  return {\n    applyToStack: function applyToStack(clientStack) {\n      clientStack.add(ssecMiddleware(config), ssecMiddlewareOptions);\n    }\n  };\n};","import { __extends } from \"tslib\";\nimport { GetObjectOutput, GetObjectRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlGetObjectCommand, serializeAws_restXmlGetObjectCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getSsecPlugin } from \"@aws-sdk/middleware-ssec\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Retrieves objects from Amazon S3. To use <code>GET</code>, you must have <code>READ</code>\n *          access to the object. If you grant <code>READ</code> access to the anonymous user, you can\n *          return the object without using an authorization header.</p>\n *\n *          <p>An Amazon S3 bucket has no directory hierarchy such as you would find in a typical computer\n *          file system. You can, however, create a logical hierarchy by using object key names that\n *          imply a folder structure. For example, instead of naming an object <code>sample.jpg</code>,\n *          you can name it <code>photos/2006/February/sample.jpg</code>.</p>\n *\n *          <p>To get an object from such a logical hierarchy, specify the full key name for the object\n *          in the <code>GET</code> operation. For a virtual hosted-style request example, if you have\n *          the object <code>photos/2006/February/sample.jpg</code>, specify the resource as\n *             <code>/photos/2006/February/sample.jpg</code>. For a path-style request example, if you\n *          have the object <code>photos/2006/February/sample.jpg</code> in the bucket named\n *             <code>examplebucket</code>, specify the resource as\n *             <code>/examplebucket/photos/2006/February/sample.jpg</code>. For more information about\n *          request types, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html#VirtualHostingSpecifyBucket\">HTTP Host Header Bucket Specification</a>.</p>\n *\n *          <p>To distribute large files to many people, you can save bandwidth costs by using\n *          BitTorrent. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3Torrent.html\">Amazon S3\n *             Torrent</a>. For more information about returning the ACL of an object, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html\">GetObjectAcl</a>.</p>\n *\n *          <p>If the object you are retrieving is stored in the S3 Glacier or\n *          S3 Glacier Deep Archive storage class, or S3 Intelligent-Tiering Archive or\n *          S3 Intelligent-Tiering Deep Archive tiers, before you can retrieve the object you must first restore a\n *          copy using <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html\">RestoreObject</a>. Otherwise, this operation returns an\n *             <code>InvalidObjectStateError</code> error. For information about restoring archived\n *          objects, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/restoring-objects.html\">Restoring Archived\n *             Objects</a>.</p>\n *\n *          <p>Encryption request headers, like <code>x-amz-server-side-encryption</code>, should not\n *          be sent for GET requests if your object uses server-side encryption with CMKs stored in AWS\n *          KMS (SSE-KMS) or server-side encryption with Amazon S3–managed encryption keys (SSE-S3). If your\n *          object does use these types of keys, you’ll get an HTTP 400 BadRequest error.</p>\n *          <p>If you encrypt an object by using server-side encryption with customer-provided\n *          encryption keys (SSE-C) when you store the object in Amazon S3, then when you GET the object,\n *          you must use the following headers:</p>\n *          <ul>\n *             <li>\n *                <p>x-amz-server-side-encryption-customer-algorithm</p>\n *             </li>\n *             <li>\n *                <p>x-amz-server-side-encryption-customer-key</p>\n *             </li>\n *             <li>\n *                <p>x-amz-server-side-encryption-customer-key-MD5</p>\n *             </li>\n *          </ul>\n *          <p>For more information about SSE-C, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ServerSideEncryptionCustomerKeys.html\">Server-Side Encryption (Using\n *             Customer-Provided Encryption Keys)</a>.</p>\n *\n *          <p>Assuming you have permission to read object tags (permission for the\n *             <code>s3:GetObjectVersionTagging</code> action), the response also returns the\n *             <code>x-amz-tagging-count</code> header that provides the count of number of tags\n *          associated with the object. You can use <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html\">GetObjectTagging</a> to retrieve\n *          the tag set associated with an object.</p>\n *\n *          <p>\n *             <b>Permissions</b>\n *          </p>\n *          <p>You need the <code>s3:GetObject</code> permission for this operation. For more\n *          information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html\">Specifying Permissions\n *             in a Policy</a>. If the object you request does not exist, the error Amazon S3 returns\n *          depends on whether you also have the <code>s3:ListBucket</code> permission.</p>\n *          <ul>\n *             <li>\n *                <p>If you have the <code>s3:ListBucket</code> permission on the bucket, Amazon S3 will\n *                return an HTTP status code 404 (\"no such key\") error.</p>\n *             </li>\n *             <li>\n *                <p>If you don’t have the <code>s3:ListBucket</code> permission, Amazon S3 will return an\n *                HTTP status code 403 (\"access denied\") error.</p>\n *             </li>\n *          </ul>\n *\n *\n *          <p>\n *             <b>Versioning</b>\n *          </p>\n *          <p>By default, the GET operation returns the current version of an object. To return a\n *          different version, use the <code>versionId</code> subresource.</p>\n *\n *          <note>\n *             <p>If the current version of the object is a delete marker, Amazon S3 behaves as if the\n *             object was deleted and includes <code>x-amz-delete-marker: true</code> in the\n *             response.</p>\n *          </note>\n *\n *\n *          <p>For more information about versioning, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketVersioning.html\">PutBucketVersioning</a>. </p>\n *\n *          <p>\n *             <b>Overriding Response Header Values</b>\n *          </p>\n *          <p>There are times when you want to override certain response header values in a GET\n *          response. For example, you might override the Content-Disposition response header value in\n *          your GET request.</p>\n *\n *          <p>You can override values for a set of response headers using the following query\n *          parameters. These response header values are sent only on a successful request, that is,\n *          when status code 200 OK is returned. The set of headers you can override using these\n *          parameters is a subset of the headers that Amazon S3 accepts when you create an object. The\n *          response headers that you can override for the GET response are <code>Content-Type</code>,\n *             <code>Content-Language</code>, <code>Expires</code>, <code>Cache-Control</code>,\n *             <code>Content-Disposition</code>, and <code>Content-Encoding</code>. To override these\n *          header values in the GET response, you use the following request parameters.</p>\n *\n *          <note>\n *             <p>You must sign the request, either using an Authorization header or a presigned URL,\n *             when using these parameters. They cannot be used with an unsigned (anonymous)\n *             request.</p>\n *          </note>\n *          <ul>\n *             <li>\n *                <p>\n *                   <code>response-content-type</code>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <code>response-content-language</code>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <code>response-expires</code>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <code>response-cache-control</code>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <code>response-content-disposition</code>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <code>response-content-encoding</code>\n *                </p>\n *             </li>\n *          </ul>\n *\n *          <p>\n *             <b>Additional Considerations about Request Headers</b>\n *          </p>\n *\n *          <p>If both of the <code>If-Match</code> and <code>If-Unmodified-Since</code> headers are\n *          present in the request as follows: <code>If-Match</code> condition evaluates to\n *             <code>true</code>, and; <code>If-Unmodified-Since</code> condition evaluates to\n *             <code>false</code>; then, S3 returns 200 OK and the data requested. </p>\n *\n *          <p>If both of the <code>If-None-Match</code> and <code>If-Modified-Since</code> headers are\n *          present in the request as follows:<code> If-None-Match</code> condition evaluates to\n *             <code>false</code>, and; <code>If-Modified-Since</code> condition evaluates to\n *             <code>true</code>; then, S3 returns 304 Not Modified response code.</p>\n *\n *          <p>For more information about conditional requests, see <a href=\"https://tools.ietf.org/html/rfc7232\">RFC 7232</a>.</p>\n *\n *          <p>The following operations are related to <code>GetObject</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html\">ListBuckets</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectAcl.html\">GetObjectAcl</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar GetObjectCommand =\n/** @class */\nfunction (_super) {\n  __extends(GetObjectCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function GetObjectCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  GetObjectCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getSsecPlugin(configuration));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"GetObjectCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: GetObjectRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: GetObjectOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  GetObjectCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlGetObjectCommand(input, context);\n  };\n\n  GetObjectCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlGetObjectCommand(output, context);\n  };\n\n  return GetObjectCommand;\n}($Command);\n\nexport { GetObjectCommand };","import { __extends } from \"tslib\";\nimport { DeleteObjectOutput, DeleteObjectRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlDeleteObjectCommand, serializeAws_restXmlDeleteObjectCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Removes the null version (if there is one) of an object and inserts a delete marker,\n *          which becomes the latest version of the object. If there isn't a null version, Amazon S3 does\n *          not remove any objects.</p>\n *\n *          <p>To remove a specific version, you must be the bucket owner and you must use the version\n *          Id subresource. Using this subresource permanently deletes the version. If the object\n *          deleted is a delete marker, Amazon S3 sets the response header,\n *          <code>x-amz-delete-marker</code>, to true. </p>\n *\n *          <p>If the object you want to delete is in a bucket where the bucket versioning\n *          configuration is MFA Delete enabled, you must include the <code>x-amz-mfa</code> request\n *          header in the DELETE <code>versionId</code> request. Requests that include\n *             <code>x-amz-mfa</code> must use HTTPS. </p>\n *\n *          <p> For more information about MFA Delete, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMFADelete.html\">Using MFA Delete</a>. To see sample requests that use versioning, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTObjectDELETE.html#ExampleVersionObjectDelete\">Sample Request</a>. </p>\n *\n *          <p>You can delete objects by explicitly calling the DELETE Object API or configure its\n *          lifecycle (<a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html\">PutBucketLifecycle</a>) to\n *          enable Amazon S3 to remove them for you. If you want to block users or accounts from removing or\n *          deleting objects from your bucket, you must deny them the <code>s3:DeleteObject</code>,\n *             <code>s3:DeleteObjectVersion</code>, and <code>s3:PutLifeCycleConfiguration</code>\n *          actions. </p>\n *\n *          <p>The following operation is related to <code>DeleteObject</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html\">PutObject</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar DeleteObjectCommand =\n/** @class */\nfunction (_super) {\n  __extends(DeleteObjectCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function DeleteObjectCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  DeleteObjectCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"DeleteObjectCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: DeleteObjectRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: DeleteObjectOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  DeleteObjectCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlDeleteObjectCommand(input, context);\n  };\n\n  DeleteObjectCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlDeleteObjectCommand(output, context);\n  };\n\n  return DeleteObjectCommand;\n}($Command);\n\nexport { DeleteObjectCommand };","import { __extends } from \"tslib\";\nimport { ListObjectsOutput, ListObjectsRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlListObjectsCommand, serializeAws_restXmlListObjectsCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Returns some or all (up to 1,000) of the objects in a bucket. You can use the request\n *          parameters as selection criteria to return a subset of the objects in a bucket. A 200 OK\n *          response can contain valid or invalid XML. Be sure to design your application to parse the\n *          contents of the response and handle it appropriately.</p>\n *          <important>\n *             <p>This API has been revised. We recommend that you use the newer version, <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html\">ListObjectsV2</a>, when developing applications. For backward compatibility,\n *             Amazon S3 continues to support <code>ListObjects</code>.</p>\n *          </important>\n *\n *\n *          <p>The following operations are related to <code>ListObjects</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html\">ListObjectsV2</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\">GetObject</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html\">PutObject</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\">CreateBucket</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html\">ListBuckets</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar ListObjectsCommand =\n/** @class */\nfunction (_super) {\n  __extends(ListObjectsCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function ListObjectsCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  ListObjectsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"ListObjectsCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: ListObjectsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: ListObjectsOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  ListObjectsCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlListObjectsCommand(input, context);\n  };\n\n  ListObjectsCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlListObjectsCommand(output, context);\n  };\n\n  return ListObjectsCommand;\n}($Command);\n\nexport { ListObjectsCommand };","import { toHex } from \"@aws-sdk/util-hex-encoding\";\n/**\n * A lossless representation of a signed, 64-bit integer. Instances of this\n * class may be used in arithmetic expressions as if they were numeric\n * primitives, but the binary representation will be preserved unchanged as the\n * `bytes` property of the object. The bytes should be encoded as big-endian,\n * two's complement integers.\n */\n\nvar Int64 =\n/** @class */\nfunction () {\n  function Int64(bytes) {\n    this.bytes = bytes;\n\n    if (bytes.byteLength !== 8) {\n      throw new Error(\"Int64 buffers must be exactly 8 bytes\");\n    }\n  }\n\n  Int64.fromNumber = function (number) {\n    if (number > 9223372036854775807 || number < -9223372036854775808) {\n      throw new Error(number + \" is too large (or, if negative, too small) to represent as an Int64\");\n    }\n\n    var bytes = new Uint8Array(8);\n\n    for (var i = 7, remaining = Math.abs(Math.round(number)); i > -1 && remaining > 0; i--, remaining /= 256) {\n      bytes[i] = remaining;\n    }\n\n    if (number < 0) {\n      negate(bytes);\n    }\n\n    return new Int64(bytes);\n  };\n  /**\n   * Called implicitly by infix arithmetic operators.\n   */\n\n\n  Int64.prototype.valueOf = function () {\n    var bytes = this.bytes.slice(0);\n    var negative = bytes[0] & 128;\n\n    if (negative) {\n      negate(bytes);\n    }\n\n    return parseInt(toHex(bytes), 16) * (negative ? -1 : 1);\n  };\n\n  Int64.prototype.toString = function () {\n    return String(this.valueOf());\n  };\n\n  return Int64;\n}();\n\nexport { Int64 };\n\nfunction negate(bytes) {\n  for (var i = 0; i < 8; i++) {\n    bytes[i] ^= 0xff;\n  }\n\n  for (var i = 7; i > -1; i--) {\n    bytes[i]++;\n    if (bytes[i] !== 0) break;\n  }\n}","import { __values } from \"tslib\";\nimport { fromHex, toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { Int64 } from \"./Int64\";\n/**\n * @internal\n */\n\nvar HeaderMarshaller =\n/** @class */\nfunction () {\n  function HeaderMarshaller(toUtf8, fromUtf8) {\n    this.toUtf8 = toUtf8;\n    this.fromUtf8 = fromUtf8;\n  }\n\n  HeaderMarshaller.prototype.format = function (headers) {\n    var e_1, _a, e_2, _b;\n\n    var chunks = [];\n\n    try {\n      for (var _c = __values(Object.keys(headers)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var headerName = _d.value;\n        var bytes = this.fromUtf8(headerName);\n        chunks.push(Uint8Array.from([bytes.byteLength]), bytes, this.formatHeaderValue(headers[headerName]));\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    var out = new Uint8Array(chunks.reduce(function (carry, bytes) {\n      return carry + bytes.byteLength;\n    }, 0));\n    var position = 0;\n\n    try {\n      for (var chunks_1 = __values(chunks), chunks_1_1 = chunks_1.next(); !chunks_1_1.done; chunks_1_1 = chunks_1.next()) {\n        var chunk = chunks_1_1.value;\n        out.set(chunk, position);\n        position += chunk.byteLength;\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (chunks_1_1 && !chunks_1_1.done && (_b = chunks_1.return)) _b.call(chunks_1);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return out;\n  };\n\n  HeaderMarshaller.prototype.formatHeaderValue = function (header) {\n    switch (header.type) {\n      case \"boolean\":\n        return Uint8Array.from([header.value ? 0\n        /* boolTrue */\n        : 1\n        /* boolFalse */\n        ]);\n\n      case \"byte\":\n        return Uint8Array.from([2\n        /* byte */\n        , header.value]);\n\n      case \"short\":\n        var shortView = new DataView(new ArrayBuffer(3));\n        shortView.setUint8(0, 3\n        /* short */\n        );\n        shortView.setInt16(1, header.value, false);\n        return new Uint8Array(shortView.buffer);\n\n      case \"integer\":\n        var intView = new DataView(new ArrayBuffer(5));\n        intView.setUint8(0, 4\n        /* integer */\n        );\n        intView.setInt32(1, header.value, false);\n        return new Uint8Array(intView.buffer);\n\n      case \"long\":\n        var longBytes = new Uint8Array(9);\n        longBytes[0] = 5\n        /* long */\n        ;\n        longBytes.set(header.value.bytes, 1);\n        return longBytes;\n\n      case \"binary\":\n        var binView = new DataView(new ArrayBuffer(3 + header.value.byteLength));\n        binView.setUint8(0, 6\n        /* byteArray */\n        );\n        binView.setUint16(1, header.value.byteLength, false);\n        var binBytes = new Uint8Array(binView.buffer);\n        binBytes.set(header.value, 3);\n        return binBytes;\n\n      case \"string\":\n        var utf8Bytes = this.fromUtf8(header.value);\n        var strView = new DataView(new ArrayBuffer(3 + utf8Bytes.byteLength));\n        strView.setUint8(0, 7\n        /* string */\n        );\n        strView.setUint16(1, utf8Bytes.byteLength, false);\n        var strBytes = new Uint8Array(strView.buffer);\n        strBytes.set(utf8Bytes, 3);\n        return strBytes;\n\n      case \"timestamp\":\n        var tsBytes = new Uint8Array(9);\n        tsBytes[0] = 8\n        /* timestamp */\n        ;\n        tsBytes.set(Int64.fromNumber(header.value.valueOf()).bytes, 1);\n        return tsBytes;\n\n      case \"uuid\":\n        if (!UUID_PATTERN.test(header.value)) {\n          throw new Error(\"Invalid UUID received: \" + header.value);\n        }\n\n        var uuidBytes = new Uint8Array(17);\n        uuidBytes[0] = 9\n        /* uuid */\n        ;\n        uuidBytes.set(fromHex(header.value.replace(/\\-/g, \"\")), 1);\n        return uuidBytes;\n    }\n  };\n\n  HeaderMarshaller.prototype.parse = function (headers) {\n    var out = {};\n    var position = 0;\n\n    while (position < headers.byteLength) {\n      var nameLength = headers.getUint8(position++);\n      var name = this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, nameLength));\n      position += nameLength;\n\n      switch (headers.getUint8(position++)) {\n        case 0\n        /* boolTrue */\n        :\n          out[name] = {\n            type: BOOLEAN_TAG,\n            value: true\n          };\n          break;\n\n        case 1\n        /* boolFalse */\n        :\n          out[name] = {\n            type: BOOLEAN_TAG,\n            value: false\n          };\n          break;\n\n        case 2\n        /* byte */\n        :\n          out[name] = {\n            type: BYTE_TAG,\n            value: headers.getInt8(position++)\n          };\n          break;\n\n        case 3\n        /* short */\n        :\n          out[name] = {\n            type: SHORT_TAG,\n            value: headers.getInt16(position, false)\n          };\n          position += 2;\n          break;\n\n        case 4\n        /* integer */\n        :\n          out[name] = {\n            type: INT_TAG,\n            value: headers.getInt32(position, false)\n          };\n          position += 4;\n          break;\n\n        case 5\n        /* long */\n        :\n          out[name] = {\n            type: LONG_TAG,\n            value: new Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8))\n          };\n          position += 8;\n          break;\n\n        case 6\n        /* byteArray */\n        :\n          var binaryLength = headers.getUint16(position, false);\n          position += 2;\n          out[name] = {\n            type: BINARY_TAG,\n            value: new Uint8Array(headers.buffer, headers.byteOffset + position, binaryLength)\n          };\n          position += binaryLength;\n          break;\n\n        case 7\n        /* string */\n        :\n          var stringLength = headers.getUint16(position, false);\n          position += 2;\n          out[name] = {\n            type: STRING_TAG,\n            value: this.toUtf8(new Uint8Array(headers.buffer, headers.byteOffset + position, stringLength))\n          };\n          position += stringLength;\n          break;\n\n        case 8\n        /* timestamp */\n        :\n          out[name] = {\n            type: TIMESTAMP_TAG,\n            value: new Date(new Int64(new Uint8Array(headers.buffer, headers.byteOffset + position, 8)).valueOf())\n          };\n          position += 8;\n          break;\n\n        case 9\n        /* uuid */\n        :\n          var uuidBytes = new Uint8Array(headers.buffer, headers.byteOffset + position, 16);\n          position += 16;\n          out[name] = {\n            type: UUID_TAG,\n            value: toHex(uuidBytes.subarray(0, 4)) + \"-\" + toHex(uuidBytes.subarray(4, 6)) + \"-\" + toHex(uuidBytes.subarray(6, 8)) + \"-\" + toHex(uuidBytes.subarray(8, 10)) + \"-\" + toHex(uuidBytes.subarray(10))\n          };\n          break;\n\n        default:\n          throw new Error(\"Unrecognized header type tag\");\n      }\n    }\n\n    return out;\n  };\n\n  return HeaderMarshaller;\n}();\n\nexport { HeaderMarshaller };\nvar HEADER_VALUE_TYPE;\n\n(function (HEADER_VALUE_TYPE) {\n  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolTrue\"] = 0] = \"boolTrue\";\n  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"boolFalse\"] = 1] = \"boolFalse\";\n  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byte\"] = 2] = \"byte\";\n  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"short\"] = 3] = \"short\";\n  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"integer\"] = 4] = \"integer\";\n  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"long\"] = 5] = \"long\";\n  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"byteArray\"] = 6] = \"byteArray\";\n  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"string\"] = 7] = \"string\";\n  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"timestamp\"] = 8] = \"timestamp\";\n  HEADER_VALUE_TYPE[HEADER_VALUE_TYPE[\"uuid\"] = 9] = \"uuid\";\n})(HEADER_VALUE_TYPE || (HEADER_VALUE_TYPE = {}));\n\nvar BOOLEAN_TAG = \"boolean\";\nvar BYTE_TAG = \"byte\";\nvar SHORT_TAG = \"short\";\nvar INT_TAG = \"integer\";\nvar LONG_TAG = \"long\";\nvar BINARY_TAG = \"binary\";\nvar STRING_TAG = \"string\";\nvar TIMESTAMP_TAG = \"timestamp\";\nvar UUID_TAG = \"uuid\";\nvar UUID_PATTERN = /^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/;","import { Crc32 } from \"@aws-crypto/crc32\";\nimport { HeaderMarshaller } from \"./HeaderMarshaller\";\nimport { splitMessage } from \"./splitMessage\";\n/**\n * A marshaller that can convert binary-packed event stream messages into\n * JavaScript objects and back again into their binary format.\n */\n\nvar EventStreamMarshaller =\n/** @class */\nfunction () {\n  function EventStreamMarshaller(toUtf8, fromUtf8) {\n    this.headerMarshaller = new HeaderMarshaller(toUtf8, fromUtf8);\n  }\n  /**\n   * Convert a structured JavaScript object with tagged headers into a binary\n   * event stream message.\n   */\n\n\n  EventStreamMarshaller.prototype.marshall = function (_a) {\n    var rawHeaders = _a.headers,\n        body = _a.body;\n    var headers = this.headerMarshaller.format(rawHeaders);\n    var length = headers.byteLength + body.byteLength + 16;\n    var out = new Uint8Array(length);\n    var view = new DataView(out.buffer, out.byteOffset, out.byteLength);\n    var checksum = new Crc32(); // Format message\n\n    view.setUint32(0, length, false);\n    view.setUint32(4, headers.byteLength, false);\n    view.setUint32(8, checksum.update(out.subarray(0, 8)).digest(), false);\n    out.set(headers, 12);\n    out.set(body, headers.byteLength + 12); // Write trailing message checksum\n\n    view.setUint32(length - 4, checksum.update(out.subarray(8, length - 4)).digest(), false);\n    return out;\n  };\n  /**\n   * Convert a binary event stream message into a JavaScript object with an\n   * opaque, binary body and tagged, parsed headers.\n   */\n\n\n  EventStreamMarshaller.prototype.unmarshall = function (message) {\n    var _a = splitMessage(message),\n        headers = _a.headers,\n        body = _a.body;\n\n    return {\n      headers: this.headerMarshaller.parse(headers),\n      body: body\n    };\n  };\n  /**\n   * Convert a structured JavaScript object with tagged headers into a binary\n   * event stream message header.\n   */\n\n\n  EventStreamMarshaller.prototype.formatHeaders = function (rawHeaders) {\n    return this.headerMarshaller.format(rawHeaders);\n  };\n\n  return EventStreamMarshaller;\n}();\n\nexport { EventStreamMarshaller };","import { Crc32 } from \"@aws-crypto/crc32\"; // All prelude components are unsigned, 32-bit integers\n\nvar PRELUDE_MEMBER_LENGTH = 4; // The prelude consists of two components\n\nvar PRELUDE_LENGTH = PRELUDE_MEMBER_LENGTH * 2; // Checksums are always CRC32 hashes.\n\nvar CHECKSUM_LENGTH = 4; // Messages must include a full prelude, a prelude checksum, and a message checksum\n\nvar MINIMUM_MESSAGE_LENGTH = PRELUDE_LENGTH + CHECKSUM_LENGTH * 2;\n/**\n * @internal\n */\n\nexport function splitMessage(_a) {\n  var byteLength = _a.byteLength,\n      byteOffset = _a.byteOffset,\n      buffer = _a.buffer;\n\n  if (byteLength < MINIMUM_MESSAGE_LENGTH) {\n    throw new Error(\"Provided message too short to accommodate event stream message overhead\");\n  }\n\n  var view = new DataView(buffer, byteOffset, byteLength);\n  var messageLength = view.getUint32(0, false);\n\n  if (byteLength !== messageLength) {\n    throw new Error(\"Reported message length does not match received message length\");\n  }\n\n  var headerLength = view.getUint32(PRELUDE_MEMBER_LENGTH, false);\n  var expectedPreludeChecksum = view.getUint32(PRELUDE_LENGTH, false);\n  var expectedMessageChecksum = view.getUint32(byteLength - CHECKSUM_LENGTH, false);\n  var checksummer = new Crc32().update(new Uint8Array(buffer, byteOffset, PRELUDE_LENGTH));\n\n  if (expectedPreludeChecksum !== checksummer.digest()) {\n    throw new Error(\"The prelude checksum specified in the message (\" + expectedPreludeChecksum + \") does not match the calculated CRC32 checksum (\" + checksummer.digest() + \")\");\n  }\n\n  checksummer.update(new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH, byteLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH)));\n\n  if (expectedMessageChecksum !== checksummer.digest()) {\n    throw new Error(\"The message checksum (\" + checksummer.digest() + \") did not match the expected value of \" + expectedMessageChecksum);\n  }\n\n  return {\n    headers: new DataView(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH, headerLength),\n    body: new Uint8Array(buffer, byteOffset + PRELUDE_LENGTH + CHECKSUM_LENGTH + headerLength, messageLength - headerLength - (PRELUDE_LENGTH + CHECKSUM_LENGTH + CHECKSUM_LENGTH))\n  };\n}","import { __asyncGenerator, __asyncValues, __await, __generator } from \"tslib\";\nimport { EventStreamMarshaller as EventMarshaller } from \"@aws-sdk/eventstream-marshaller\";\nimport { getChunkedStream } from \"./getChunkedStream\";\nimport { getUnmarshalledStream } from \"./getUnmarshalledStream\";\n\nvar EventStreamMarshaller =\n/** @class */\nfunction () {\n  function EventStreamMarshaller(_a) {\n    var utf8Encoder = _a.utf8Encoder,\n        utf8Decoder = _a.utf8Decoder;\n    this.eventMarshaller = new EventMarshaller(utf8Encoder, utf8Decoder);\n    this.utfEncoder = utf8Encoder;\n  }\n\n  EventStreamMarshaller.prototype.deserialize = function (body, deserializer) {\n    var chunkedStream = getChunkedStream(body);\n    var unmarshalledStream = getUnmarshalledStream(chunkedStream, {\n      eventMarshaller: this.eventMarshaller,\n      deserializer: deserializer,\n      toUtf8: this.utfEncoder\n    });\n    return unmarshalledStream;\n  };\n\n  EventStreamMarshaller.prototype.serialize = function (input, serializer) {\n    var _a; // eslint-disable-next-line @typescript-eslint/no-this-alias\n\n\n    var self = this;\n\n    var serializedIterator = function serializedIterator() {\n      return __asyncGenerator(this, arguments, function () {\n        var input_1, input_1_1, chunk, payloadBuf, e_1_1;\n\n        var e_1, _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              _b.trys.push([0, 7, 8, 13]);\n\n              input_1 = __asyncValues(input);\n              _b.label = 1;\n\n            case 1:\n              return [4\n              /*yield*/\n              , __await(input_1.next())];\n\n            case 2:\n              if (!(input_1_1 = _b.sent(), !input_1_1.done)) return [3\n              /*break*/\n              , 6];\n              chunk = input_1_1.value;\n              payloadBuf = self.eventMarshaller.marshall(serializer(chunk));\n              return [4\n              /*yield*/\n              , __await(payloadBuf)];\n\n            case 3:\n              return [4\n              /*yield*/\n              , _b.sent()];\n\n            case 4:\n              _b.sent();\n\n              _b.label = 5;\n\n            case 5:\n              return [3\n              /*break*/\n              , 1];\n\n            case 6:\n              return [3\n              /*break*/\n              , 13];\n\n            case 7:\n              e_1_1 = _b.sent();\n              e_1 = {\n                error: e_1_1\n              };\n              return [3\n              /*break*/\n              , 13];\n\n            case 8:\n              _b.trys.push([8,, 11, 12]);\n\n              if (!(input_1_1 && !input_1_1.done && (_a = input_1.return))) return [3\n              /*break*/\n              , 10];\n              return [4\n              /*yield*/\n              , __await(_a.call(input_1))];\n\n            case 9:\n              _b.sent();\n\n              _b.label = 10;\n\n            case 10:\n              return [3\n              /*break*/\n              , 12];\n\n            case 11:\n              if (e_1) throw e_1.error;\n              return [7\n              /*endfinally*/\n              ];\n\n            case 12:\n              return [7\n              /*endfinally*/\n              ];\n\n            case 13:\n              return [4\n              /*yield*/\n              , __await(new Uint8Array(0))];\n\n            case 14:\n              // Ending frame\n              return [4\n              /*yield*/\n              , _b.sent()];\n\n            case 15:\n              // Ending frame\n              _b.sent();\n\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    };\n\n    return _a = {}, _a[Symbol.asyncIterator] = serializedIterator, _a;\n  };\n\n  return EventStreamMarshaller;\n}();\n\nexport { EventStreamMarshaller };","import { __asyncGenerator, __asyncValues, __await, __generator } from \"tslib\";\nexport function getUnmarshalledStream(source, options) {\n  var _a;\n\n  return _a = {}, _a[Symbol.asyncIterator] = function () {\n    return __asyncGenerator(this, arguments, function () {\n      var source_1, source_1_1, chunk, message, messageType, unmodeledError, code, exception, deserializedException, error, event, deserialized, e_1_1;\n\n      var _a, _b;\n\n      var e_1, _c;\n\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            _d.trys.push([0, 12, 13, 18]);\n\n            source_1 = __asyncValues(source);\n            _d.label = 1;\n\n          case 1:\n            return [4\n            /*yield*/\n            , __await(source_1.next())];\n\n          case 2:\n            if (!(source_1_1 = _d.sent(), !source_1_1.done)) return [3\n            /*break*/\n            , 11];\n            chunk = source_1_1.value;\n            message = options.eventMarshaller.unmarshall(chunk);\n            messageType = message.headers[\":message-type\"].value;\n            if (!(messageType === \"error\")) return [3\n            /*break*/\n            , 3];\n            unmodeledError = new Error(message.headers[\":error-message\"].value || \"UnknownError\");\n            unmodeledError.name = message.headers[\":error-code\"].value;\n            throw unmodeledError;\n\n          case 3:\n            if (!(messageType === \"exception\")) return [3\n            /*break*/\n            , 5];\n            code = message.headers[\":exception-type\"].value;\n            exception = (_a = {}, _a[code] = message, _a);\n            return [4\n            /*yield*/\n            , __await(options.deserializer(exception))];\n\n          case 4:\n            deserializedException = _d.sent();\n\n            if (deserializedException.$unknown) {\n              error = new Error(options.toUtf8(message.body));\n              error.name = code;\n              throw error;\n            }\n\n            throw deserializedException[code];\n\n          case 5:\n            if (!(messageType === \"event\")) return [3\n            /*break*/\n            , 9];\n            event = (_b = {}, _b[message.headers[\":event-type\"].value] = message, _b);\n            return [4\n            /*yield*/\n            , __await(options.deserializer(event))];\n\n          case 6:\n            deserialized = _d.sent();\n            if (deserialized.$unknown) return [3\n            /*break*/\n            , 10];\n            return [4\n            /*yield*/\n            , __await(deserialized)];\n\n          case 7:\n            return [4\n            /*yield*/\n            , _d.sent()];\n\n          case 8:\n            _d.sent();\n\n            return [3\n            /*break*/\n            , 10];\n\n          case 9:\n            throw Error(\"Unrecognizable event type: \" + message.headers[\":event-type\"].value);\n\n          case 10:\n            return [3\n            /*break*/\n            , 1];\n\n          case 11:\n            return [3\n            /*break*/\n            , 18];\n\n          case 12:\n            e_1_1 = _d.sent();\n            e_1 = {\n              error: e_1_1\n            };\n            return [3\n            /*break*/\n            , 18];\n\n          case 13:\n            _d.trys.push([13,, 16, 17]);\n\n            if (!(source_1_1 && !source_1_1.done && (_c = source_1.return))) return [3\n            /*break*/\n            , 15];\n            return [4\n            /*yield*/\n            , __await(_c.call(source_1))];\n\n          case 14:\n            _d.sent();\n\n            _d.label = 15;\n\n          case 15:\n            return [3\n            /*break*/\n            , 17];\n\n          case 16:\n            if (e_1) throw e_1.error;\n            return [7\n            /*endfinally*/\n            ];\n\n          case 17:\n            return [7\n            /*endfinally*/\n            ];\n\n          case 18:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }, _a;\n}","import { __asyncGenerator, __await, __generator } from \"tslib\";\nexport function getChunkedStream(source) {\n  var _a;\n\n  var currentMessageTotalLength = 0;\n  var currentMessagePendingLength = 0;\n  var currentMessage = null;\n  var messageLengthBuffer = null;\n\n  var allocateMessage = function allocateMessage(size) {\n    if (typeof size !== \"number\") {\n      throw new Error(\"Attempted to allocate an event message where size was not a number: \" + size);\n    }\n\n    currentMessageTotalLength = size;\n    currentMessagePendingLength = 4;\n    currentMessage = new Uint8Array(size);\n    var currentMessageView = new DataView(currentMessage.buffer);\n    currentMessageView.setUint32(0, size, false); //set big-endian Uint32 to 0~3 bytes\n  };\n\n  var iterator = function iterator() {\n    return __asyncGenerator(this, arguments, function () {\n      var sourceIterator, _a, value, done, chunkLength, currentOffset, bytesRemaining, numBytesForTotal, numBytesToWrite;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            sourceIterator = source[Symbol.asyncIterator]();\n            _b.label = 1;\n\n          case 1:\n            if (!true) return [3\n            /*break*/\n            , 16];\n            return [4\n            /*yield*/\n            , __await(sourceIterator.next())];\n\n          case 2:\n            _a = _b.sent(), value = _a.value, done = _a.done;\n            if (!done) return [3\n            /*break*/\n            , 10];\n            if (!!currentMessageTotalLength) return [3\n            /*break*/\n            , 4];\n            return [4\n            /*yield*/\n            , __await(void 0)];\n\n          case 3:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 4:\n            if (!(currentMessageTotalLength === currentMessagePendingLength)) return [3\n            /*break*/\n            , 7];\n            return [4\n            /*yield*/\n            , __await(currentMessage)];\n\n          case 5:\n            return [4\n            /*yield*/\n            , _b.sent()];\n\n          case 6:\n            _b.sent();\n\n            return [3\n            /*break*/\n            , 8];\n\n          case 7:\n            throw new Error(\"Truncated event message received.\");\n\n          case 8:\n            return [4\n            /*yield*/\n            , __await(void 0)];\n\n          case 9:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 10:\n            chunkLength = value.length;\n            currentOffset = 0;\n            _b.label = 11;\n\n          case 11:\n            if (!(currentOffset < chunkLength)) return [3\n            /*break*/\n            , 15]; // create new message if necessary\n\n            if (!currentMessage) {\n              bytesRemaining = chunkLength - currentOffset; // prevent edge case where total length spans 2 chunks\n\n              if (!messageLengthBuffer) {\n                messageLengthBuffer = new Uint8Array(4);\n              }\n\n              numBytesForTotal = Math.min(4 - currentMessagePendingLength, // remaining bytes to fill the messageLengthBuffer\n              bytesRemaining // bytes left in chunk\n              );\n              messageLengthBuffer.set( // @ts-ignore error TS2532: Object is possibly 'undefined' for value\n              value.slice(currentOffset, currentOffset + numBytesForTotal), currentMessagePendingLength);\n              currentMessagePendingLength += numBytesForTotal;\n              currentOffset += numBytesForTotal;\n\n              if (currentMessagePendingLength < 4) {\n                // not enough information to create the current message\n                return [3\n                /*break*/\n                , 15];\n              }\n\n              allocateMessage(new DataView(messageLengthBuffer.buffer).getUint32(0, false));\n              messageLengthBuffer = null;\n            }\n\n            numBytesToWrite = Math.min(currentMessageTotalLength - currentMessagePendingLength, // number of bytes left to complete message\n            chunkLength - currentOffset // number of bytes left in the original chunk\n            );\n            currentMessage.set( // @ts-ignore error TS2532: Object is possibly 'undefined' for value\n            value.slice(currentOffset, currentOffset + numBytesToWrite), currentMessagePendingLength);\n            currentMessagePendingLength += numBytesToWrite;\n            currentOffset += numBytesToWrite;\n            if (!(currentMessageTotalLength && currentMessageTotalLength === currentMessagePendingLength)) return [3\n            /*break*/\n            , 14];\n            return [4\n            /*yield*/\n            , __await(currentMessage)];\n\n          case 12:\n            // push out the message\n            return [4\n            /*yield*/\n            , _b.sent()];\n\n          case 13:\n            // push out the message\n            _b.sent(); // cleanup\n\n\n            currentMessage = null;\n            currentMessageTotalLength = 0;\n            currentMessagePendingLength = 0;\n            _b.label = 14;\n\n          case 14:\n            return [3\n            /*break*/\n            , 11];\n\n          case 15:\n            return [3\n            /*break*/\n            , 1];\n\n          case 16:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  return _a = {}, _a[Symbol.asyncIterator] = iterator, _a;\n}","import { EventStreamMarshaller as EventMarshaller } from \"@aws-sdk/eventstream-marshaller\";\nimport { EventStreamMarshaller as UniversalEventStreamMarshaller } from \"@aws-sdk/eventstream-serde-universal\";\nimport { iterableToReadableStream, readableStreamtoIterable } from \"./utils\";\n/**\n * Utility class used to serialize and deserialize event streams in\n * browsers and ReactNative.\n *\n * In browsers where ReadableStream API is available:\n * * deserialize from ReadableStream to an async iterable of output structure\n * * serialize from async iterable of input structure to ReadableStream\n * In ReactNative where only async iterable API is available:\n * * deserialize from async iterable of binaries to async iterable of output structure\n * * serialize from async iterable of input structure to async iterable of binaries\n *\n * We use ReadableStream API in browsers because of the consistency with other\n * streaming operations, where ReadableStream API is used to denote streaming data.\n * Whereas in ReactNative, ReadableStream API is not available, we use async iterable\n * for streaming data although it has lower throughput.\n */\n\nvar EventStreamMarshaller =\n/** @class */\nfunction () {\n  function EventStreamMarshaller(_a) {\n    var utf8Encoder = _a.utf8Encoder,\n        utf8Decoder = _a.utf8Decoder;\n    this.eventMarshaller = new EventMarshaller(utf8Encoder, utf8Decoder);\n    this.universalMarshaller = new UniversalEventStreamMarshaller({\n      utf8Decoder: utf8Decoder,\n      utf8Encoder: utf8Encoder\n    });\n  }\n\n  EventStreamMarshaller.prototype.deserialize = function (body, deserializer) {\n    var bodyIterable = isReadableStream(body) ? readableStreamtoIterable(body) : body;\n    return this.universalMarshaller.deserialize(bodyIterable, deserializer);\n  };\n  /**\n   * Generate a stream that serialize events into stream of binary chunks;\n   *\n   * Caveat is that streaming request payload doesn't work on browser with native\n   * xhr or fetch handler currently because they don't support upload streaming.\n   * reference:\n   * * https://bugs.chromium.org/p/chromium/issues/detail?id=688906\n   * * https://bugzilla.mozilla.org/show_bug.cgi?id=1387483\n   *\n   */\n\n\n  EventStreamMarshaller.prototype.serialize = function (input, serializer) {\n    var serialziedIterable = this.universalMarshaller.serialize(input, serializer);\n    return typeof ReadableStream === \"function\" ? iterableToReadableStream(serialziedIterable) : serialziedIterable;\n  };\n\n  return EventStreamMarshaller;\n}();\n\nexport { EventStreamMarshaller };\n\nvar isReadableStream = function isReadableStream(body) {\n  return typeof ReadableStream === \"function\" && body instanceof ReadableStream;\n};","import { __asyncGenerator, __await, __awaiter, __generator } from \"tslib\";\n/**\n * A util function converting ReadableStream into an async iterable.\n * Reference: https://jakearchibald.com/2017/async-iterators-and-generators/#making-streams-iterate\n */\n\nexport var readableStreamtoIterable = function readableStreamtoIterable(readableStream) {\n  var _a;\n\n  return _a = {}, _a[Symbol.asyncIterator] = function () {\n    return __asyncGenerator(this, arguments, function () {\n      var reader, _a, done, value;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            reader = readableStream.getReader();\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1,, 9, 10]);\n\n            _b.label = 2;\n\n          case 2:\n            if (!true) return [3\n            /*break*/\n            , 8];\n            return [4\n            /*yield*/\n            , __await(reader.read())];\n\n          case 3:\n            _a = _b.sent(), done = _a.done, value = _a.value;\n            if (!done) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , __await(void 0)];\n\n          case 4:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 5:\n            return [4\n            /*yield*/\n            , __await(value)];\n\n          case 6:\n            return [4\n            /*yield*/\n            , _b.sent()];\n\n          case 7:\n            _b.sent();\n\n            return [3\n            /*break*/\n            , 2];\n\n          case 8:\n            return [3\n            /*break*/\n            , 10];\n\n          case 9:\n            reader.releaseLock();\n            return [7\n            /*endfinally*/\n            ];\n\n          case 10:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }, _a;\n};\n/**\n * A util function converting async iterable to a ReadableStream.\n */\n\nexport var iterableToReadableStream = function iterableToReadableStream(asyncIterable) {\n  var iterator = asyncIterable[Symbol.asyncIterator]();\n  return new ReadableStream({\n    pull: function pull(controller) {\n      return __awaiter(this, void 0, void 0, function () {\n        var _a, done, value;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , iterator.next()];\n\n            case 1:\n              _a = _b.sent(), done = _a.done, value = _a.value;\n\n              if (done) {\n                return [2\n                /*return*/\n                , controller.close()];\n              }\n\n              controller.enqueue(value);\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n};","export function blobReader(blob, onChunk, chunkSize) {\n  if (chunkSize === void 0) {\n    chunkSize = 1024 * 1024;\n  }\n\n  return new Promise(function (resolve, reject) {\n    var fileReader = new FileReader();\n    fileReader.addEventListener(\"error\", reject);\n    fileReader.addEventListener(\"abort\", reject);\n    var size = blob.size;\n    var totalBytesRead = 0;\n\n    function read() {\n      if (totalBytesRead >= size) {\n        resolve();\n        return;\n      }\n\n      fileReader.readAsArrayBuffer(blob.slice(totalBytesRead, Math.min(size, totalBytesRead + chunkSize)));\n    }\n\n    fileReader.addEventListener(\"load\", function (event) {\n      var result = event.target.result;\n      onChunk(new Uint8Array(result));\n      totalBytesRead += result.byteLength; // read the next block\n\n      read();\n    }); // kick off the read\n\n    read();\n  });\n}","import { __awaiter, __generator } from \"tslib\";\nimport { blobReader } from \"@aws-sdk/chunked-blob-reader\";\nexport var blobHasher = function blobHasher(hashCtor, blob) {\n  return __awaiter(this, void 0, void 0, function () {\n    var hash;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          hash = new hashCtor();\n          return [4\n          /*yield*/\n          , blobReader(blob, function (chunk) {\n            hash.update(chunk);\n          })];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , hash.digest()];\n      }\n    });\n  });\n};","/**\n * @internal\n */\nexport var BLOCK_SIZE = 64;\n/**\n * @internal\n */\n\nexport var DIGEST_LENGTH = 16;\n/**\n * @internal\n */\n\nexport var INIT = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476];","import { __awaiter, __generator } from \"tslib\";\nimport { fromUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { BLOCK_SIZE, DIGEST_LENGTH, INIT } from \"./constants\";\n\nvar Md5 =\n/** @class */\nfunction () {\n  function Md5() {\n    this.state = Uint32Array.from(INIT);\n    this.buffer = new DataView(new ArrayBuffer(BLOCK_SIZE));\n    this.bufferLength = 0;\n    this.bytesHashed = 0;\n    this.finished = false;\n  }\n\n  Md5.prototype.update = function (sourceData) {\n    if (isEmptyData(sourceData)) {\n      return;\n    } else if (this.finished) {\n      throw new Error(\"Attempted to update an already finished hash.\");\n    }\n\n    var data = convertToBuffer(sourceData);\n    var position = 0;\n    var byteLength = data.byteLength;\n    this.bytesHashed += byteLength;\n\n    while (byteLength > 0) {\n      this.buffer.setUint8(this.bufferLength++, data[position++]);\n      byteLength--;\n\n      if (this.bufferLength === BLOCK_SIZE) {\n        this.hashBuffer();\n        this.bufferLength = 0;\n      }\n    }\n  };\n\n  Md5.prototype.digest = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, buffer, undecoratedLength, bytesHashed, bitsHashed, i, i, out, i;\n\n      return __generator(this, function (_b) {\n        if (!this.finished) {\n          _a = this, buffer = _a.buffer, undecoratedLength = _a.bufferLength, bytesHashed = _a.bytesHashed;\n          bitsHashed = bytesHashed * 8;\n          buffer.setUint8(this.bufferLength++, 128); // Ensure the final block has enough room for the hashed length\n\n          if (undecoratedLength % BLOCK_SIZE >= BLOCK_SIZE - 8) {\n            for (i = this.bufferLength; i < BLOCK_SIZE; i++) {\n              buffer.setUint8(i, 0);\n            }\n\n            this.hashBuffer();\n            this.bufferLength = 0;\n          }\n\n          for (i = this.bufferLength; i < BLOCK_SIZE - 8; i++) {\n            buffer.setUint8(i, 0);\n          }\n\n          buffer.setUint32(BLOCK_SIZE - 8, bitsHashed >>> 0, true);\n          buffer.setUint32(BLOCK_SIZE - 4, Math.floor(bitsHashed / 0x100000000), true);\n          this.hashBuffer();\n          this.finished = true;\n        }\n\n        out = new DataView(new ArrayBuffer(DIGEST_LENGTH));\n\n        for (i = 0; i < 4; i++) {\n          out.setUint32(i * 4, this.state[i], true);\n        }\n\n        return [2\n        /*return*/\n        , new Uint8Array(out.buffer, out.byteOffset, out.byteLength)];\n      });\n    });\n  };\n\n  Md5.prototype.hashBuffer = function () {\n    var _a = this,\n        buffer = _a.buffer,\n        state = _a.state;\n\n    var a = state[0],\n        b = state[1],\n        c = state[2],\n        d = state[3];\n    a = ff(a, b, c, d, buffer.getUint32(0, true), 7, 0xd76aa478);\n    d = ff(d, a, b, c, buffer.getUint32(4, true), 12, 0xe8c7b756);\n    c = ff(c, d, a, b, buffer.getUint32(8, true), 17, 0x242070db);\n    b = ff(b, c, d, a, buffer.getUint32(12, true), 22, 0xc1bdceee);\n    a = ff(a, b, c, d, buffer.getUint32(16, true), 7, 0xf57c0faf);\n    d = ff(d, a, b, c, buffer.getUint32(20, true), 12, 0x4787c62a);\n    c = ff(c, d, a, b, buffer.getUint32(24, true), 17, 0xa8304613);\n    b = ff(b, c, d, a, buffer.getUint32(28, true), 22, 0xfd469501);\n    a = ff(a, b, c, d, buffer.getUint32(32, true), 7, 0x698098d8);\n    d = ff(d, a, b, c, buffer.getUint32(36, true), 12, 0x8b44f7af);\n    c = ff(c, d, a, b, buffer.getUint32(40, true), 17, 0xffff5bb1);\n    b = ff(b, c, d, a, buffer.getUint32(44, true), 22, 0x895cd7be);\n    a = ff(a, b, c, d, buffer.getUint32(48, true), 7, 0x6b901122);\n    d = ff(d, a, b, c, buffer.getUint32(52, true), 12, 0xfd987193);\n    c = ff(c, d, a, b, buffer.getUint32(56, true), 17, 0xa679438e);\n    b = ff(b, c, d, a, buffer.getUint32(60, true), 22, 0x49b40821);\n    a = gg(a, b, c, d, buffer.getUint32(4, true), 5, 0xf61e2562);\n    d = gg(d, a, b, c, buffer.getUint32(24, true), 9, 0xc040b340);\n    c = gg(c, d, a, b, buffer.getUint32(44, true), 14, 0x265e5a51);\n    b = gg(b, c, d, a, buffer.getUint32(0, true), 20, 0xe9b6c7aa);\n    a = gg(a, b, c, d, buffer.getUint32(20, true), 5, 0xd62f105d);\n    d = gg(d, a, b, c, buffer.getUint32(40, true), 9, 0x02441453);\n    c = gg(c, d, a, b, buffer.getUint32(60, true), 14, 0xd8a1e681);\n    b = gg(b, c, d, a, buffer.getUint32(16, true), 20, 0xe7d3fbc8);\n    a = gg(a, b, c, d, buffer.getUint32(36, true), 5, 0x21e1cde6);\n    d = gg(d, a, b, c, buffer.getUint32(56, true), 9, 0xc33707d6);\n    c = gg(c, d, a, b, buffer.getUint32(12, true), 14, 0xf4d50d87);\n    b = gg(b, c, d, a, buffer.getUint32(32, true), 20, 0x455a14ed);\n    a = gg(a, b, c, d, buffer.getUint32(52, true), 5, 0xa9e3e905);\n    d = gg(d, a, b, c, buffer.getUint32(8, true), 9, 0xfcefa3f8);\n    c = gg(c, d, a, b, buffer.getUint32(28, true), 14, 0x676f02d9);\n    b = gg(b, c, d, a, buffer.getUint32(48, true), 20, 0x8d2a4c8a);\n    a = hh(a, b, c, d, buffer.getUint32(20, true), 4, 0xfffa3942);\n    d = hh(d, a, b, c, buffer.getUint32(32, true), 11, 0x8771f681);\n    c = hh(c, d, a, b, buffer.getUint32(44, true), 16, 0x6d9d6122);\n    b = hh(b, c, d, a, buffer.getUint32(56, true), 23, 0xfde5380c);\n    a = hh(a, b, c, d, buffer.getUint32(4, true), 4, 0xa4beea44);\n    d = hh(d, a, b, c, buffer.getUint32(16, true), 11, 0x4bdecfa9);\n    c = hh(c, d, a, b, buffer.getUint32(28, true), 16, 0xf6bb4b60);\n    b = hh(b, c, d, a, buffer.getUint32(40, true), 23, 0xbebfbc70);\n    a = hh(a, b, c, d, buffer.getUint32(52, true), 4, 0x289b7ec6);\n    d = hh(d, a, b, c, buffer.getUint32(0, true), 11, 0xeaa127fa);\n    c = hh(c, d, a, b, buffer.getUint32(12, true), 16, 0xd4ef3085);\n    b = hh(b, c, d, a, buffer.getUint32(24, true), 23, 0x04881d05);\n    a = hh(a, b, c, d, buffer.getUint32(36, true), 4, 0xd9d4d039);\n    d = hh(d, a, b, c, buffer.getUint32(48, true), 11, 0xe6db99e5);\n    c = hh(c, d, a, b, buffer.getUint32(60, true), 16, 0x1fa27cf8);\n    b = hh(b, c, d, a, buffer.getUint32(8, true), 23, 0xc4ac5665);\n    a = ii(a, b, c, d, buffer.getUint32(0, true), 6, 0xf4292244);\n    d = ii(d, a, b, c, buffer.getUint32(28, true), 10, 0x432aff97);\n    c = ii(c, d, a, b, buffer.getUint32(56, true), 15, 0xab9423a7);\n    b = ii(b, c, d, a, buffer.getUint32(20, true), 21, 0xfc93a039);\n    a = ii(a, b, c, d, buffer.getUint32(48, true), 6, 0x655b59c3);\n    d = ii(d, a, b, c, buffer.getUint32(12, true), 10, 0x8f0ccc92);\n    c = ii(c, d, a, b, buffer.getUint32(40, true), 15, 0xffeff47d);\n    b = ii(b, c, d, a, buffer.getUint32(4, true), 21, 0x85845dd1);\n    a = ii(a, b, c, d, buffer.getUint32(32, true), 6, 0x6fa87e4f);\n    d = ii(d, a, b, c, buffer.getUint32(60, true), 10, 0xfe2ce6e0);\n    c = ii(c, d, a, b, buffer.getUint32(24, true), 15, 0xa3014314);\n    b = ii(b, c, d, a, buffer.getUint32(52, true), 21, 0x4e0811a1);\n    a = ii(a, b, c, d, buffer.getUint32(16, true), 6, 0xf7537e82);\n    d = ii(d, a, b, c, buffer.getUint32(44, true), 10, 0xbd3af235);\n    c = ii(c, d, a, b, buffer.getUint32(8, true), 15, 0x2ad7d2bb);\n    b = ii(b, c, d, a, buffer.getUint32(36, true), 21, 0xeb86d391);\n    state[0] = a + state[0] & 0xffffffff;\n    state[1] = b + state[1] & 0xffffffff;\n    state[2] = c + state[2] & 0xffffffff;\n    state[3] = d + state[3] & 0xffffffff;\n  };\n\n  return Md5;\n}();\n\nexport { Md5 };\n\nfunction cmn(q, a, b, x, s, t) {\n  a = (a + q & 0xffffffff) + (x + t & 0xffffffff) & 0xffffffff;\n  return (a << s | a >>> 32 - s) + b & 0xffffffff;\n}\n\nfunction ff(a, b, c, d, x, s, t) {\n  return cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction gg(a, b, c, d, x, s, t) {\n  return cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction hh(a, b, c, d, x, s, t) {\n  return cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction ii(a, b, c, d, x, s, t) {\n  return cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nfunction isEmptyData(data) {\n  if (typeof data === \"string\") {\n    return data.length === 0;\n  }\n\n  return data.byteLength === 0;\n}\n\nfunction convertToBuffer(data) {\n  if (typeof data === \"string\") {\n    return fromUtf8(data);\n  }\n\n  if (ArrayBuffer.isView(data)) {\n    return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n  }\n\n  return new Uint8Array(data);\n}","import { __assign } from \"tslib\"; // Partition default templates\n\nvar AWS_TEMPLATE = \"s3.{region}.amazonaws.com\";\nvar AWS_CN_TEMPLATE = \"s3.{region}.amazonaws.com.cn\";\nvar AWS_ISO_TEMPLATE = \"s3.{region}.c2s.ic.gov\";\nvar AWS_ISO_B_TEMPLATE = \"s3.{region}.sc2s.sgov.gov\";\nvar AWS_US_GOV_TEMPLATE = \"s3.{region}.amazonaws.com\"; // Partition regions\n\nvar AWS_REGIONS = new Set([\"af-south-1\", \"ap-east-1\", \"ap-northeast-1\", \"ap-northeast-2\", \"ap-south-1\", \"ap-southeast-1\", \"ap-southeast-2\", \"ca-central-1\", \"eu-central-1\", \"eu-north-1\", \"eu-south-1\", \"eu-west-1\", \"eu-west-2\", \"eu-west-3\", \"me-south-1\", \"sa-east-1\", \"us-east-1\", \"us-east-2\", \"us-west-1\", \"us-west-2\"]);\nvar AWS_CN_REGIONS = new Set([\"cn-north-1\", \"cn-northwest-1\"]);\nvar AWS_ISO_REGIONS = new Set([\"us-iso-east-1\"]);\nvar AWS_ISO_B_REGIONS = new Set([\"us-isob-east-1\"]);\nvar AWS_US_GOV_REGIONS = new Set([\"us-gov-east-1\", \"us-gov-west-1\"]);\nexport var defaultRegionInfoProvider = function defaultRegionInfoProvider(region, options) {\n  var regionInfo = undefined;\n\n  switch (region) {\n    // First, try to match exact region names.\n    case \"af-south-1\":\n      regionInfo = {\n        hostname: \"s3.af-south-1.amazonaws.com\",\n        partition: \"aws\"\n      };\n      break;\n\n    case \"ap-east-1\":\n      regionInfo = {\n        hostname: \"s3.ap-east-1.amazonaws.com\",\n        partition: \"aws\"\n      };\n      break;\n\n    case \"ap-northeast-1\":\n      regionInfo = {\n        hostname: \"s3.ap-northeast-1.amazonaws.com\",\n        partition: \"aws\"\n      };\n      break;\n\n    case \"ap-northeast-2\":\n      regionInfo = {\n        hostname: \"s3.ap-northeast-2.amazonaws.com\",\n        partition: \"aws\"\n      };\n      break;\n\n    case \"ap-south-1\":\n      regionInfo = {\n        hostname: \"s3.ap-south-1.amazonaws.com\",\n        partition: \"aws\"\n      };\n      break;\n\n    case \"ap-southeast-1\":\n      regionInfo = {\n        hostname: \"s3.ap-southeast-1.amazonaws.com\",\n        partition: \"aws\"\n      };\n      break;\n\n    case \"ap-southeast-2\":\n      regionInfo = {\n        hostname: \"s3.ap-southeast-2.amazonaws.com\",\n        partition: \"aws\"\n      };\n      break;\n\n    case \"aws-global\":\n      regionInfo = {\n        hostname: \"s3.amazonaws.com\",\n        partition: \"aws\",\n        signingRegion: \"us-east-1\"\n      };\n      break;\n\n    case \"ca-central-1\":\n      regionInfo = {\n        hostname: \"s3.ca-central-1.amazonaws.com\",\n        partition: \"aws\"\n      };\n      break;\n\n    case \"cn-north-1\":\n      regionInfo = {\n        hostname: \"s3.cn-north-1.amazonaws.com.cn\",\n        partition: \"aws-cn\"\n      };\n      break;\n\n    case \"cn-northwest-1\":\n      regionInfo = {\n        hostname: \"s3.cn-northwest-1.amazonaws.com.cn\",\n        partition: \"aws-cn\"\n      };\n      break;\n\n    case \"eu-central-1\":\n      regionInfo = {\n        hostname: \"s3.eu-central-1.amazonaws.com\",\n        partition: \"aws\"\n      };\n      break;\n\n    case \"eu-north-1\":\n      regionInfo = {\n        hostname: \"s3.eu-north-1.amazonaws.com\",\n        partition: \"aws\"\n      };\n      break;\n\n    case \"eu-south-1\":\n      regionInfo = {\n        hostname: \"s3.eu-south-1.amazonaws.com\",\n        partition: \"aws\"\n      };\n      break;\n\n    case \"eu-west-1\":\n      regionInfo = {\n        hostname: \"s3.eu-west-1.amazonaws.com\",\n        partition: \"aws\"\n      };\n      break;\n\n    case \"eu-west-2\":\n      regionInfo = {\n        hostname: \"s3.eu-west-2.amazonaws.com\",\n        partition: \"aws\"\n      };\n      break;\n\n    case \"eu-west-3\":\n      regionInfo = {\n        hostname: \"s3.eu-west-3.amazonaws.com\",\n        partition: \"aws\"\n      };\n      break;\n\n    case \"fips-us-gov-west-1\":\n      regionInfo = {\n        hostname: \"s3-fips.us-gov-west-1.amazonaws.com\",\n        partition: \"aws-us-gov\",\n        signingRegion: \"us-gov-west-1\"\n      };\n      break;\n\n    case \"me-south-1\":\n      regionInfo = {\n        hostname: \"s3.me-south-1.amazonaws.com\",\n        partition: \"aws\"\n      };\n      break;\n\n    case \"s3-external-1\":\n      regionInfo = {\n        hostname: \"s3-external-1.amazonaws.com\",\n        partition: \"aws\",\n        signingRegion: \"us-east-1\"\n      };\n      break;\n\n    case \"sa-east-1\":\n      regionInfo = {\n        hostname: \"s3.sa-east-1.amazonaws.com\",\n        partition: \"aws\"\n      };\n      break;\n\n    case \"us-east-1\":\n      regionInfo = {\n        hostname: \"s3.us-east-1.amazonaws.com\",\n        partition: \"aws\"\n      };\n      break;\n\n    case \"us-east-2\":\n      regionInfo = {\n        hostname: \"s3.us-east-2.amazonaws.com\",\n        partition: \"aws\"\n      };\n      break;\n\n    case \"us-gov-east-1\":\n      regionInfo = {\n        hostname: \"s3.us-gov-east-1.amazonaws.com\",\n        partition: \"aws-us-gov\"\n      };\n      break;\n\n    case \"us-gov-west-1\":\n      regionInfo = {\n        hostname: \"s3.us-gov-west-1.amazonaws.com\",\n        partition: \"aws-us-gov\"\n      };\n      break;\n\n    case \"us-iso-east-1\":\n      regionInfo = {\n        hostname: \"s3.us-iso-east-1.c2s.ic.gov\",\n        partition: \"aws-iso\"\n      };\n      break;\n\n    case \"us-isob-east-1\":\n      regionInfo = {\n        hostname: \"s3.us-isob-east-1.sc2s.sgov.gov\",\n        partition: \"aws-iso-b\"\n      };\n      break;\n\n    case \"us-west-1\":\n      regionInfo = {\n        hostname: \"s3.us-west-1.amazonaws.com\",\n        partition: \"aws\"\n      };\n      break;\n\n    case \"us-west-2\":\n      regionInfo = {\n        hostname: \"s3.us-west-2.amazonaws.com\",\n        partition: \"aws\"\n      };\n      break;\n    // Next, try to match partition endpoints.\n\n    default:\n      if (AWS_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws\"\n        };\n      }\n\n      if (AWS_CN_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_CN_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-cn\"\n        };\n      }\n\n      if (AWS_ISO_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_ISO_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-iso\"\n        };\n      }\n\n      if (AWS_ISO_B_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_ISO_B_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-iso-b\"\n        };\n      }\n\n      if (AWS_US_GOV_REGIONS.has(region)) {\n        regionInfo = {\n          hostname: AWS_US_GOV_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws-us-gov\"\n        };\n      } // Finally, assume it's an AWS partition endpoint.\n\n\n      if (regionInfo === undefined) {\n        regionInfo = {\n          hostname: AWS_TEMPLATE.replace(\"{region}\", region),\n          partition: \"aws\"\n        };\n      }\n\n  }\n\n  return Promise.resolve(__assign({\n    signingService: \"s3\"\n  }, regionInfo));\n};","import { defaultRegionInfoProvider } from \"./endpoints\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\n/**\n * @internal\n */\n\nexport var ClientSharedValues = {\n  apiVersion: \"2006-03-01\",\n  disableHostPrefix: false,\n  logger: {},\n  regionInfoProvider: defaultRegionInfoProvider,\n  serviceId: \"S3\",\n  signingEscapePath: false,\n  urlParser: parseUrl,\n  useArnRegion: false\n};","import { __assign } from \"tslib\";\nimport packageInfo from \"./package.json\";\nimport { Sha256 } from \"@aws-crypto/sha256-browser\";\nimport { eventStreamSerdeProvider } from \"@aws-sdk/eventstream-serde-browser\";\nimport { FetchHttpHandler, streamCollector } from \"@aws-sdk/fetch-http-handler\";\nimport { blobHasher as streamHasher } from \"@aws-sdk/hash-blob-browser\";\nimport { invalidProvider } from \"@aws-sdk/invalid-dependency\";\nimport { Md5 } from \"@aws-sdk/md5-js\";\nimport { DEFAULT_MAX_ATTEMPTS } from \"@aws-sdk/middleware-retry\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64-browser\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-browser\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-browser\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-browser\";\nimport { ClientSharedValues } from \"./runtimeConfig.shared\";\n/**\n * @internal\n */\n\nexport var ClientDefaultValues = __assign(__assign({}, ClientSharedValues), {\n  runtime: \"browser\",\n  base64Decoder: fromBase64,\n  base64Encoder: toBase64,\n  bodyLengthChecker: calculateBodyLength,\n  credentialDefaultProvider: function credentialDefaultProvider(_) {\n    return function () {\n      return Promise.reject(new Error(\"Credential is missing\"));\n    };\n  },\n  defaultUserAgentProvider: defaultUserAgent({\n    serviceId: ClientSharedValues.serviceId,\n    clientVersion: packageInfo.version\n  }),\n  eventStreamSerdeProvider: eventStreamSerdeProvider,\n  maxAttempts: DEFAULT_MAX_ATTEMPTS,\n  md5: Md5,\n  region: invalidProvider(\"Region is missing\"),\n  requestHandler: new FetchHttpHandler(),\n  sha256: Sha256,\n  streamCollector: streamCollector,\n  streamHasher: streamHasher,\n  utf8Decoder: fromUtf8,\n  utf8Encoder: toUtf8\n});","import { EventStreamMarshaller } from \"./EventStreamMarshaller\";\n/** browser event stream serde utils provider */\n\nexport var eventStreamSerdeProvider = function eventStreamSerdeProvider(options) {\n  return new EventStreamMarshaller(options);\n};","import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\nexport function addExpectContinueMiddleware(options) {\n  var _this = this;\n\n  return function (next) {\n    return function (args) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var request;\n        return __generator(this, function (_a) {\n          request = args.request;\n\n          if (HttpRequest.isInstance(request) && request.body && options.runtime === \"node\") {\n            request.headers = __assign(__assign({}, request.headers), {\n              Expect: \"100-continue\"\n            });\n          }\n\n          return [2\n          /*return*/\n          , next(__assign(__assign({}, args), {\n            request: request\n          }))];\n        });\n      });\n    };\n  };\n}\nexport var addExpectContinueMiddlewareOptions = {\n  step: \"build\",\n  tags: [\"SET_EXPECT_HEADER\", \"EXPECT_HEADER\"],\n  name: \"addExpectContinueMiddleware\",\n  override: true\n};\nexport var getAddExpectContinuePlugin = function getAddExpectContinuePlugin(options) {\n  return {\n    applyToStack: function applyToStack(clientStack) {\n      clientStack.add(addExpectContinueMiddleware(options), addExpectContinueMiddlewareOptions);\n    }\n  };\n};","import { __assign, __awaiter, __generator } from \"tslib\";\nimport { validate as validateArn } from \"@aws-sdk/util-arn-parser\";\n/**\n * @internal\n */\n\nexport function validateBucketNameMiddleware() {\n  var _this = this;\n\n  return function (next) {\n    return function (args) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var Bucket, err;\n        return __generator(this, function (_a) {\n          Bucket = args.input.Bucket;\n\n          if (typeof Bucket === \"string\" && !validateArn(Bucket) && Bucket.indexOf(\"/\") >= 0) {\n            err = new Error(\"Bucket name shouldn't contain '/', received '\" + Bucket + \"'\");\n            err.name = \"InvalidBucketName\";\n            throw err;\n          }\n\n          return [2\n          /*return*/\n          , next(__assign({}, args))];\n        });\n      });\n    };\n  };\n}\n/**\n * @internal\n */\n\nexport var validateBucketNameMiddlewareOptions = {\n  step: \"initialize\",\n  tags: [\"VALIDATE_BUCKET_NAME\"],\n  name: \"validateBucketNameMiddleware\",\n  override: true\n};\n/**\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport var getValidateBucketNamePlugin = function getValidateBucketNamePlugin(unused) {\n  return {\n    applyToStack: function applyToStack(clientStack) {\n      clientStack.add(validateBucketNameMiddleware(), validateBucketNameMiddlewareOptions);\n    }\n  };\n};","import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest } from \"@aws-sdk/protocol-http\";\n/**\n * @internal\n */\n\nexport var useRegionalEndpointMiddleware = function useRegionalEndpointMiddleware(config) {\n  return function (next) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var request, _a;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              request = args.request;\n              if (!HttpRequest.isInstance(request) || config.isCustomEndpoint) return [2\n              /*return*/\n              , next(__assign({}, args))];\n              if (!(request.hostname === \"s3.amazonaws.com\")) return [3\n              /*break*/\n              , 1];\n              request.hostname = \"s3.us-east-1.amazonaws.com\";\n              return [3\n              /*break*/\n              , 3];\n\n            case 1:\n              _a = \"aws-global\";\n              return [4\n              /*yield*/\n              , config.region()];\n\n            case 2:\n              if (_a === _b.sent()) {\n                request.hostname = \"s3.amazonaws.com\";\n              }\n\n              _b.label = 3;\n\n            case 3:\n              return [2\n              /*return*/\n              , next(__assign({}, args))];\n          }\n        });\n      });\n    };\n  };\n};\n/**\n * @internal\n */\n\nexport var useRegionalEndpointMiddlewareOptions = {\n  step: \"build\",\n  tags: [\"USE_REGIONAL_ENDPOINT\", \"S3\"],\n  name: \"useRegionalEndpointMiddleware\",\n  override: true\n};\n/**\n * @internal\n */\n\nexport var getUseRegionalEndpointPlugin = function getUseRegionalEndpointPlugin(config) {\n  return {\n    applyToStack: function applyToStack(clientStack) {\n      clientStack.add(useRegionalEndpointMiddleware(config), useRegionalEndpointMiddlewareOptions);\n    }\n  };\n};","import { __awaiter, __generator } from \"tslib\";\nimport { HttpResponse } from \"@aws-sdk/protocol-http\";\n/**\n * In case of an internal error/terminated connection, S3 operations may return 200 errors. CopyObject, UploadPartCopy,\n * CompleteMultipartUpload may return empty payload or payload with only xml Preamble.\n * @internal\n */\n\nexport var throw200ExceptionsMiddleware = function throw200ExceptionsMiddleware(config) {\n  return function (next) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var result, response, statusCode, body, bodyBytes, bodyString, err;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , next(args)];\n\n            case 1:\n              result = _a.sent();\n              response = result.response;\n              if (!HttpResponse.isInstance(response)) return [2\n              /*return*/\n              , result];\n              statusCode = response.statusCode, body = response.body;\n              if (statusCode < 200 && statusCode >= 300) return [2\n              /*return*/\n              , result];\n              return [4\n              /*yield*/\n              , collectBody(body, config)];\n\n            case 2:\n              bodyBytes = _a.sent();\n              return [4\n              /*yield*/\n              , collectBodyString(bodyBytes, config)];\n\n            case 3:\n              bodyString = _a.sent();\n\n              if (bodyBytes.length === 0) {\n                err = new Error(\"S3 aborted request\");\n                err.name = \"InternalError\";\n                throw err;\n              }\n\n              if (bodyString && bodyString.match(\"<Error>\")) {\n                // Set the error code to 4XX so that error deserializer can parse them\n                response.statusCode = 400;\n              } // Body stream is consumed and paused at this point. So replace the response.body to the collected bytes.\n              // So that the deserializer can consume the body as normal.\n\n\n              response.body = bodyBytes;\n              return [2\n              /*return*/\n              , result];\n          }\n        });\n      });\n    };\n  };\n}; // Collect low-level response body stream to Uint8Array.\n\nvar collectBody = function collectBody(streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n}; // Encode Uint8Array data into string with utf-8.\n\n\nvar collectBodyString = function collectBodyString(streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n/**\n * @internal\n */\n\n\nexport var throw200ExceptionsMiddlewareOptions = {\n  relation: \"after\",\n  toMiddleware: \"deserializerMiddleware\",\n  tags: [\"THROW_200_EXCEPTIONS\", \"S3\"],\n  name: \"throw200ExceptionsMiddleware\",\n  override: true\n};\n/**\n *\n * @internal\n */\n\nexport var getThrow200ExceptionsPlugin = function getThrow200ExceptionsPlugin(config) {\n  return {\n    applyToStack: function applyToStack(clientStack) {\n      clientStack.addRelativeTo(throw200ExceptionsMiddleware(config), throw200ExceptionsMiddlewareOptions);\n    }\n  };\n};","import { __assign, __extends } from \"tslib\";\nimport { ClientDefaultValues as __ClientDefaultValues } from \"./runtimeConfig\";\nimport { resolveEndpointsConfig, resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { resolveEventStreamSerdeConfig } from \"@aws-sdk/eventstream-serde-config-resolver\";\nimport { resolveBucketEndpointConfig } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { getAddExpectContinuePlugin } from \"@aws-sdk/middleware-expect-continue\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getUseRegionalEndpointPlugin, getValidateBucketNamePlugin } from \"@aws-sdk/middleware-sdk-s3\";\nimport { getAwsAuthPlugin, resolveAwsAuthConfig } from \"@aws-sdk/middleware-signing\";\nimport { getUserAgentPlugin, resolveUserAgentConfig } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client } from \"@aws-sdk/smithy-client\";\n/**\n * <p></p>\n */\n\nvar S3Client =\n/** @class */\nfunction (_super) {\n  __extends(S3Client, _super);\n\n  function S3Client(configuration) {\n    var _this = this;\n\n    var _config_0 = __assign(__assign({}, __ClientDefaultValues), configuration);\n\n    var _config_1 = resolveRegionConfig(_config_0);\n\n    var _config_2 = resolveEndpointsConfig(_config_1);\n\n    var _config_3 = resolveAwsAuthConfig(_config_2);\n\n    var _config_4 = resolveRetryConfig(_config_3);\n\n    var _config_5 = resolveHostHeaderConfig(_config_4);\n\n    var _config_6 = resolveBucketEndpointConfig(_config_5);\n\n    var _config_7 = resolveUserAgentConfig(_config_6);\n\n    var _config_8 = resolveEventStreamSerdeConfig(_config_7);\n\n    _this = _super.call(this, _config_8) || this;\n    _this.config = _config_8;\n\n    _this.middlewareStack.use(getAwsAuthPlugin(_this.config));\n\n    _this.middlewareStack.use(getRetryPlugin(_this.config));\n\n    _this.middlewareStack.use(getContentLengthPlugin(_this.config));\n\n    _this.middlewareStack.use(getHostHeaderPlugin(_this.config));\n\n    _this.middlewareStack.use(getLoggerPlugin(_this.config));\n\n    _this.middlewareStack.use(getValidateBucketNamePlugin(_this.config));\n\n    _this.middlewareStack.use(getUseRegionalEndpointPlugin(_this.config));\n\n    _this.middlewareStack.use(getAddExpectContinuePlugin(_this.config));\n\n    _this.middlewareStack.use(getUserAgentPlugin(_this.config));\n\n    return _this;\n  }\n\n  S3Client.prototype.destroy = function () {\n    _super.prototype.destroy.call(this);\n  };\n\n  return S3Client;\n}(__Client);\n\nexport { S3Client };","import { __assign } from \"tslib\";\nexport var resolveEventStreamSerdeConfig = function resolveEventStreamSerdeConfig(input) {\n  return __assign(__assign({}, input), {\n    eventStreamMarshaller: input.eventStreamSerdeProvider(input)\n  });\n};","import { buildQueryString } from \"@aws-sdk/querystring-builder\";\nexport function formatUrl(request) {\n  var port = request.port,\n      query = request.query;\n  var protocol = request.protocol,\n      path = request.path,\n      hostname = request.hostname;\n\n  if (protocol && protocol.substr(-1) !== \":\") {\n    protocol += \":\";\n  }\n\n  if (port) {\n    hostname += \":\" + port;\n  }\n\n  if (path && path.charAt(0) !== \"/\") {\n    path = \"/\" + path;\n  }\n\n  var queryString = query ? buildQueryString(query) : \"\";\n\n  if (queryString && queryString[0] !== \"?\") {\n    queryString = \"?\" + queryString;\n  }\n\n  return protocol + \"//\" + hostname + path + queryString;\n}","import { __awaiter, __generator } from \"tslib\";\nexport function createRequest(client, command) {\n  return __awaiter(this, void 0, void 0, function () {\n    var interceptMiddleware, clientStack, handler;\n\n    var _this = this;\n\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          interceptMiddleware = function interceptMiddleware(next) {\n            return function (args) {\n              return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                  return [2\n                  /*return*/\n                  , {\n                    output: {\n                      request: args.request\n                    },\n                    response: undefined\n                  }];\n                });\n              });\n            };\n          };\n\n          clientStack = client.middlewareStack.clone(); // @ts-ignore: add middleware to the last of 'build' step\n\n          clientStack.add(interceptMiddleware, {\n            step: \"build\",\n            priority: \"low\"\n          });\n          handler = command.resolveMiddleware(clientStack, client.config, undefined);\n          return [4\n          /*yield*/\n          , handler(command).then(function (output) {\n            return output.output.request;\n          })];\n\n        case 1:\n          // @ts-ignore\n          return [2\n          /*return*/\n          , _a.sent()];\n      }\n    });\n  });\n}","import { __assign, __awaiter, __generator, __rest } from \"tslib\";\nimport { SignatureV4 } from \"@aws-sdk/signature-v4\";\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\n\nvar S3RequestPresigner =\n/** @class */\nfunction () {\n  function S3RequestPresigner(options) {\n    var resolvedOptions = __assign({\n      // Allow `signingName` because we want to support usecase of supply client's resolved config\n      // directly. Where service equals signingName.\n      service: options.signingName || options.service || \"s3\",\n      uriEscapePath: options.uriEscapePath || false\n    }, options);\n\n    this.signer = new SignatureV4(resolvedOptions);\n  }\n\n  S3RequestPresigner.prototype.presign = function (requestToSign, _a) {\n    if (_a === void 0) {\n      _a = {};\n    }\n\n    var _b = _a.unsignableHeaders,\n        unsignableHeaders = _b === void 0 ? new Set() : _b,\n        _c = _a.unhoistableHeaders,\n        unhoistableHeaders = _c === void 0 ? new Set() : _c,\n        options = __rest(_a, [\"unsignableHeaders\", \"unhoistableHeaders\"]);\n\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_d) {\n        unsignableHeaders.add(\"content-type\"); // S3 requires SSE headers to be signed in headers instead of query\n        // See: https://github.com/aws/aws-sdk-js-v3/issues/1576\n\n        Object.keys(requestToSign.headers).map(function (header) {\n          return header.toLowerCase();\n        }).filter(function (header) {\n          return header.startsWith(\"x-amz-server-side-encryption\");\n        }).forEach(function (header) {\n          unhoistableHeaders.add(header);\n        });\n        requestToSign.headers[SHA256_HEADER] = UNSIGNED_PAYLOAD;\n\n        if (!requestToSign.headers[\"host\"]) {\n          requestToSign.headers.host = requestToSign.hostname;\n        }\n\n        return [2\n        /*return*/\n        , this.signer.presign(requestToSign, __assign({\n          expiresIn: 900,\n          unsignableHeaders: unsignableHeaders,\n          unhoistableHeaders: unhoistableHeaders\n        }, options))];\n      });\n    });\n  };\n\n  return S3RequestPresigner;\n}();\n\nexport { S3RequestPresigner };","export var UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nexport var SHA256_HEADER = \"X-Amz-Content-Sha256\";\nexport var ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexport var CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexport var AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexport var SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexport var EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexport var HOST_HEADER = \"host\";\nexport var ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";","/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { HttpResponse } from '@aws-sdk/protocol-http';\nimport { buildQueryString } from '@aws-sdk/querystring-builder';\nimport axios from 'axios';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('axios-http-handler');\nexport var SEND_PROGRESS_EVENT = 'sendProgress';\n\nvar AxiosHttpHandler =\n/** @class */\nfunction () {\n  function AxiosHttpHandler(httpOptions, emitter) {\n    if (httpOptions === void 0) {\n      httpOptions = {};\n    }\n\n    this.httpOptions = httpOptions;\n    this.emitter = emitter;\n  }\n\n  AxiosHttpHandler.prototype.destroy = function () {// Do nothing. TLS and HTTP/2 connection pooling is handled by the\n    // browser.\n  };\n\n  AxiosHttpHandler.prototype.handle = function (request, options) {\n    var requestTimeoutInMs = this.httpOptions.requestTimeout;\n    var emitter = this.emitter;\n    var path = request.path;\n\n    if (request.query) {\n      var queryString = buildQueryString(request.query);\n\n      if (queryString) {\n        path += \"?\" + queryString;\n      }\n    }\n\n    var port = request.port;\n    var url = request.protocol + \"//\" + request.hostname + (port ? \":\" + port : '') + path;\n    var axiosRequest = {};\n    axiosRequest.url = url;\n    axiosRequest.method = request.method;\n    axiosRequest.headers = request.headers; // The host header is automatically added by the browser and adding it explicitly in the\n    // axios request throws an error https://github.com/aws-amplify/amplify-js/issues/5376\n    // This is because the host header is a forbidden header for the http client to set\n    // see https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name and\n    // https://fetch.spec.whatwg.org/#forbidden-header-name\n    // The reason we are removing this header here instead of in the aws-sdk's client\n    // middleware is that the host header is required to be in the request signature and if\n    // we remove it from the middlewares, then the request fails because the header is added\n    // by the browser but is absent from the signature.\n\n    delete axiosRequest.headers['host'];\n\n    if (request.body) {\n      axiosRequest.data = request.body;\n    } else {\n      // Fix for https://github.com/aws-amplify/amplify-js/issues/5432\n      // If the POST request body is empty but content-type header is set, axios is forcibly removing it\n      // See https://github.com/axios/axios/issues/1535 and refusing to fix it https://github.com/axios/axios/issues/755\n      // This change is a workaround to set the data as null (instead of undefined) to prevent axios from\n      // removing the content-type header. Link for the source code\n      // https://github.com/axios/axios/blob/dc4bc49673943e35280e5df831f5c3d0347a9393/lib/adapters/xhr.js#L121-L123\n      if (axiosRequest.headers['Content-Type']) {\n        axiosRequest.data = null;\n      }\n    }\n\n    if (emitter) {\n      axiosRequest.onUploadProgress = function (event) {\n        emitter.emit(SEND_PROGRESS_EVENT, event);\n        logger.debug(event);\n      };\n    } // From gamma release, aws-sdk now expects all response type to be of blob or streams\n\n\n    axiosRequest.responseType = 'blob';\n    var raceOfPromises = [axios.request(axiosRequest).then(function (response) {\n      return {\n        response: new HttpResponse({\n          headers: response.headers,\n          statusCode: response.status,\n          body: response.data\n        })\n      };\n    }).catch(function (error) {\n      // Error\n      logger.error(error);\n      throw error;\n    }), requestTimeout(requestTimeoutInMs)];\n    return Promise.race(raceOfPromises);\n  };\n\n  return AxiosHttpHandler;\n}();\n\nexport { AxiosHttpHandler };\n\nfunction requestTimeout(timeoutInMs) {\n  if (timeoutInMs === void 0) {\n    timeoutInMs = 0;\n  }\n\n  return new Promise(function (resolve, reject) {\n    if (timeoutInMs) {\n      setTimeout(function () {\n        var timeoutError = new Error(\"Request did not complete within \" + timeoutInMs + \" ms\");\n        timeoutError.name = 'TimeoutError';\n        reject(timeoutError);\n      }, timeoutInMs);\n    }\n  });\n}","import { __extends } from \"tslib\";\nimport { PutObjectOutput, PutObjectRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutObjectCommand, serializeAws_restXmlPutObjectCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getSsecPlugin } from \"@aws-sdk/middleware-ssec\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Adds an object to a bucket. You must have WRITE permissions on a bucket to add an object\n *          to it.</p>\n *\n *\n *          <p>Amazon S3 never adds partial objects; if you receive a success response, Amazon S3 added the\n *          entire object to the bucket.</p>\n *\n *          <p>Amazon S3 is a distributed system. If it receives multiple write requests for the same object\n *          simultaneously, it overwrites all but the last object written. Amazon S3 does not provide object\n *          locking; if you need this, make sure to build it into your application layer or use\n *          versioning instead.</p>\n *\n *          <p>To ensure that data is not corrupted traversing the network, use the\n *             <code>Content-MD5</code> header. When you use this header, Amazon S3 checks the object\n *          against the provided MD5 value and, if they do not match, returns an error. Additionally,\n *          you can calculate the MD5 while putting an object to Amazon S3 and compare the returned ETag to\n *          the calculated MD5 value.</p>\n *          <note>\n *             <p> The <code>Content-MD5</code> header is required for any request to upload an object\n *             with a retention period configured using Amazon S3 Object Lock. For more information about\n *             Amazon S3 Object Lock, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock-overview.html\">Amazon S3 Object Lock Overview</a>\n *             in the <i>Amazon Simple Storage Service Developer Guide</i>. </p>\n *          </note>\n *\n *\n *          <p>\n *             <b>Server-side Encryption</b>\n *          </p>\n *          <p>You can optionally request server-side encryption. With server-side encryption, Amazon S3 encrypts your data as it writes it to disks in its data centers and decrypts the data\n *          when you access it. You have the option to provide your own encryption key or use AWS\n *          managed encryption keys (SSE-S3 or SSE-KMS). For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html\">Using Server-Side\n *             Encryption</a>.</p>\n *          <p>If you request server-side encryption using AWS Key Management Service (SSE-KMS), you can enable an S3 Bucket Key at the object-level. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html\">Amazon S3 Bucket Keys</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n *          <p>\n *             <b>Access Control List (ACL)-Specific Request\n *          Headers</b>\n *          </p>\n *          <p>You can use headers to grant ACL- based permissions. By default, all objects are\n *          private. Only the owner has full access control. When adding a new object, you can grant\n *          permissions to individual AWS accounts or to predefined groups defined by Amazon S3. These\n *          permissions are then added to the ACL on the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html\">Access Control List\n *             (ACL) Overview</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-using-rest-api.html\">Managing ACLs Using the REST\n *             API</a>. </p>\n *\n *          <p>\n *             <b>Storage Class Options</b>\n *          </p>\n *          <p>By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The\n *          STANDARD storage class provides high durability and high availability. Depending on\n *          performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses\n *          the OUTPOSTS Storage Class. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html\">Storage Classes</a> in the <i>Amazon S3\n *             Service Developer Guide</i>.</p>\n *\n *\n *          <p>\n *             <b>Versioning</b>\n *          </p>\n *          <p>If you enable versioning for a bucket, Amazon S3 automatically generates a unique version ID\n *          for the object being stored. Amazon S3 returns this ID in the response. When you enable\n *          versioning for a bucket, if Amazon S3 receives multiple write requests for the same object\n *          simultaneously, it stores all of the objects.</p>\n *          <p>For more information about versioning, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/AddingObjectstoVersioningEnabledBuckets.html\">Adding Objects to\n *             Versioning Enabled Buckets</a>. For information about returning the versioning state\n *          of a bucket, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html\">GetBucketVersioning</a>. </p>\n *\n *\n *          <p class=\"title\">\n *             <b>Related Resources</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CopyObject.html\">CopyObject</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html\">DeleteObject</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar PutObjectCommand =\n/** @class */\nfunction (_super) {\n  __extends(PutObjectCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function PutObjectCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  PutObjectCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getSsecPlugin(configuration));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"PutObjectCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: PutObjectRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: PutObjectOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  PutObjectCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlPutObjectCommand(input, context);\n  };\n\n  PutObjectCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlPutObjectCommand(output, context);\n  };\n\n  return PutObjectCommand;\n}($Command);\n\nexport { PutObjectCommand };","import { __assign } from \"tslib\";\nimport { Encryption } from \"./models_0\";\nimport { SENSITIVE_STRING } from \"@aws-sdk/smithy-client\";\nexport var MetadataEntry;\n\n(function (MetadataEntry) {\n  MetadataEntry.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(MetadataEntry || (MetadataEntry = {}));\n\nexport var S3Location;\n\n(function (S3Location) {\n  S3Location.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Encryption && {\n      Encryption: Encryption.filterSensitiveLog(obj.Encryption)\n    });\n  };\n})(S3Location || (S3Location = {}));\n\nexport var OutputLocation;\n\n(function (OutputLocation) {\n  OutputLocation.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.S3 && {\n      S3: S3Location.filterSensitiveLog(obj.S3)\n    });\n  };\n})(OutputLocation || (OutputLocation = {}));\n\nexport var FileHeaderInfo;\n\n(function (FileHeaderInfo) {\n  FileHeaderInfo[\"IGNORE\"] = \"IGNORE\";\n  FileHeaderInfo[\"NONE\"] = \"NONE\";\n  FileHeaderInfo[\"USE\"] = \"USE\";\n})(FileHeaderInfo || (FileHeaderInfo = {}));\n\nexport var CSVInput;\n\n(function (CSVInput) {\n  CSVInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CSVInput || (CSVInput = {}));\n\nexport var JSONType;\n\n(function (JSONType) {\n  JSONType[\"DOCUMENT\"] = \"DOCUMENT\";\n  JSONType[\"LINES\"] = \"LINES\";\n})(JSONType || (JSONType = {}));\n\nexport var JSONInput;\n\n(function (JSONInput) {\n  JSONInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(JSONInput || (JSONInput = {}));\n\nexport var ParquetInput;\n\n(function (ParquetInput) {\n  ParquetInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ParquetInput || (ParquetInput = {}));\n\nexport var InputSerialization;\n\n(function (InputSerialization) {\n  InputSerialization.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(InputSerialization || (InputSerialization = {}));\n\nexport var QuoteFields;\n\n(function (QuoteFields) {\n  QuoteFields[\"ALWAYS\"] = \"ALWAYS\";\n  QuoteFields[\"ASNEEDED\"] = \"ASNEEDED\";\n})(QuoteFields || (QuoteFields = {}));\n\nexport var CSVOutput;\n\n(function (CSVOutput) {\n  CSVOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CSVOutput || (CSVOutput = {}));\n\nexport var JSONOutput;\n\n(function (JSONOutput) {\n  JSONOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(JSONOutput || (JSONOutput = {}));\n\nexport var OutputSerialization;\n\n(function (OutputSerialization) {\n  OutputSerialization.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(OutputSerialization || (OutputSerialization = {}));\n\nexport var SelectParameters;\n\n(function (SelectParameters) {\n  SelectParameters.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(SelectParameters || (SelectParameters = {}));\n\nexport var RestoreRequestType;\n\n(function (RestoreRequestType) {\n  RestoreRequestType[\"SELECT\"] = \"SELECT\";\n})(RestoreRequestType || (RestoreRequestType = {}));\n\nexport var RestoreRequest;\n\n(function (RestoreRequest) {\n  RestoreRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.OutputLocation && {\n      OutputLocation: OutputLocation.filterSensitiveLog(obj.OutputLocation)\n    });\n  };\n})(RestoreRequest || (RestoreRequest = {}));\n\nexport var RestoreObjectRequest;\n\n(function (RestoreObjectRequest) {\n  RestoreObjectRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.RestoreRequest && {\n      RestoreRequest: RestoreRequest.filterSensitiveLog(obj.RestoreRequest)\n    });\n  };\n})(RestoreObjectRequest || (RestoreObjectRequest = {}));\n\nexport var ContinuationEvent;\n\n(function (ContinuationEvent) {\n  ContinuationEvent.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ContinuationEvent || (ContinuationEvent = {}));\n\nexport var EndEvent;\n\n(function (EndEvent) {\n  EndEvent.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(EndEvent || (EndEvent = {}));\n\nexport var Progress;\n\n(function (Progress) {\n  Progress.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Progress || (Progress = {}));\n\nexport var ProgressEvent;\n\n(function (ProgressEvent) {\n  ProgressEvent.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ProgressEvent || (ProgressEvent = {}));\n\nexport var RecordsEvent;\n\n(function (RecordsEvent) {\n  RecordsEvent.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(RecordsEvent || (RecordsEvent = {}));\n\nexport var Stats;\n\n(function (Stats) {\n  Stats.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Stats || (Stats = {}));\n\nexport var StatsEvent;\n\n(function (StatsEvent) {\n  StatsEvent.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(StatsEvent || (StatsEvent = {}));\n\nexport var SelectObjectContentEventStream;\n\n(function (SelectObjectContentEventStream) {\n  SelectObjectContentEventStream.visit = function (value, visitor) {\n    if (value.Records !== undefined) return visitor.Records(value.Records);\n    if (value.Stats !== undefined) return visitor.Stats(value.Stats);\n    if (value.Progress !== undefined) return visitor.Progress(value.Progress);\n    if (value.Cont !== undefined) return visitor.Cont(value.Cont);\n    if (value.End !== undefined) return visitor.End(value.End);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  };\n\n  SelectObjectContentEventStream.filterSensitiveLog = function (obj) {\n    var _a;\n\n    if (obj.Records !== undefined) return {\n      Records: RecordsEvent.filterSensitiveLog(obj.Records)\n    };\n    if (obj.Stats !== undefined) return {\n      Stats: StatsEvent.filterSensitiveLog(obj.Stats)\n    };\n    if (obj.Progress !== undefined) return {\n      Progress: ProgressEvent.filterSensitiveLog(obj.Progress)\n    };\n    if (obj.Cont !== undefined) return {\n      Cont: ContinuationEvent.filterSensitiveLog(obj.Cont)\n    };\n    if (obj.End !== undefined) return {\n      End: EndEvent.filterSensitiveLog(obj.End)\n    };\n    if (obj.$unknown !== undefined) return _a = {}, _a[obj.$unknown[0]] = \"UNKNOWN\", _a;\n  };\n})(SelectObjectContentEventStream || (SelectObjectContentEventStream = {}));\n\nexport var SelectObjectContentOutput;\n\n(function (SelectObjectContentOutput) {\n  SelectObjectContentOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Payload && {\n      Payload: \"STREAMING_CONTENT\"\n    });\n  };\n})(SelectObjectContentOutput || (SelectObjectContentOutput = {}));\n\nexport var RequestProgress;\n\n(function (RequestProgress) {\n  RequestProgress.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(RequestProgress || (RequestProgress = {}));\n\nexport var ScanRange;\n\n(function (ScanRange) {\n  ScanRange.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ScanRange || (ScanRange = {}));\n\nexport var SelectObjectContentRequest;\n\n(function (SelectObjectContentRequest) {\n  SelectObjectContentRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.SSECustomerKey && {\n      SSECustomerKey: SENSITIVE_STRING\n    });\n  };\n})(SelectObjectContentRequest || (SelectObjectContentRequest = {}));\n\nexport var UploadPartOutput;\n\n(function (UploadPartOutput) {\n  UploadPartOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.SSEKMSKeyId && {\n      SSEKMSKeyId: SENSITIVE_STRING\n    });\n  };\n})(UploadPartOutput || (UploadPartOutput = {}));\n\nexport var UploadPartRequest;\n\n(function (UploadPartRequest) {\n  UploadPartRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.SSECustomerKey && {\n      SSECustomerKey: SENSITIVE_STRING\n    });\n  };\n})(UploadPartRequest || (UploadPartRequest = {}));\n\nexport var CopyPartResult;\n\n(function (CopyPartResult) {\n  CopyPartResult.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CopyPartResult || (CopyPartResult = {}));\n\nexport var UploadPartCopyOutput;\n\n(function (UploadPartCopyOutput) {\n  UploadPartCopyOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.SSEKMSKeyId && {\n      SSEKMSKeyId: SENSITIVE_STRING\n    });\n  };\n})(UploadPartCopyOutput || (UploadPartCopyOutput = {}));\n\nexport var UploadPartCopyRequest;\n\n(function (UploadPartCopyRequest) {\n  UploadPartCopyRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign(__assign({}, obj), obj.SSECustomerKey && {\n      SSECustomerKey: SENSITIVE_STRING\n    }), obj.CopySourceSSECustomerKey && {\n      CopySourceSSECustomerKey: SENSITIVE_STRING\n    });\n  };\n})(UploadPartCopyRequest || (UploadPartCopyRequest = {}));","import { __extends } from \"tslib\";\nimport { CreateMultipartUploadOutput, CreateMultipartUploadRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlCreateMultipartUploadCommand, serializeAws_restXmlCreateMultipartUploadCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getSsecPlugin } from \"@aws-sdk/middleware-ssec\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>This operation initiates a multipart upload and returns an upload ID. This upload ID is\n *          used to associate all of the parts in the specific multipart upload. You specify this\n *          upload ID in each of your subsequent upload part requests (see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\">UploadPart</a>). You also include this\n *          upload ID in the final request to either complete or abort the multipart upload\n *          request.</p>\n *\n *          <p>For more information about multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html\">Multipart Upload Overview</a>.</p>\n *\n *          <p>If you have configured a lifecycle rule to abort incomplete multipart uploads, the\n *          upload must complete within the number of days specified in the bucket lifecycle\n *          configuration. Otherwise, the incomplete multipart upload becomes eligible for an abort\n *          operation and Amazon S3 aborts the multipart upload. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config\">Aborting\n *             Incomplete Multipart Uploads Using a Bucket Lifecycle Policy</a>.</p>\n *\n *          <p>For information about the permissions required to use the multipart upload API, see\n *             <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html\">Multipart Upload API and\n *             Permissions</a>.</p>\n *\n *          <p>For request signing, multipart upload is just a series of regular requests. You initiate\n *          a multipart upload, send one or more requests to upload parts, and then complete the\n *          multipart upload process. You sign each request individually. There is nothing special\n *          about signing multipart upload requests. For more information about signing, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html\">Authenticating\n *             Requests (AWS Signature Version 4)</a>.</p>\n *\n *          <note>\n *             <p> After you initiate a multipart upload and upload one or more parts, to stop being\n *             charged for storing the uploaded parts, you must either complete or abort the multipart\n *             upload. Amazon S3 frees up the space used to store the parts and stop charging you for\n *             storing them only after you either complete or abort a multipart upload. </p>\n *          </note>\n *\n *          <p>You can optionally request server-side encryption. For server-side encryption, Amazon S3\n *          encrypts your data as it writes it to disks in its data centers and decrypts it when you\n *          access it. You can provide your own encryption key, or use AWS Key Management Service (AWS\n *          KMS) customer master keys (CMKs) or Amazon S3-managed encryption keys. If you choose to provide\n *          your own encryption key, the request headers you provide in <a href=\"AmazonS3/latest/API/API_UploadPart.html\">UploadPart</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPartCopy.html\">UploadPartCopy</a> requests must match the headers you used in the request to\n *          initiate the upload by using <code>CreateMultipartUpload</code>. </p>\n *          <p>To perform a multipart upload with encryption using an AWS KMS CMK, the requester must\n *          have permission to the <code>kms:Encrypt</code>, <code>kms:Decrypt</code>,\n *             <code>kms:ReEncrypt*</code>, <code>kms:GenerateDataKey*</code>, and\n *             <code>kms:DescribeKey</code> actions on the key. These permissions are required because\n *          Amazon S3 must decrypt and read data from the encrypted file parts before it completes the\n *          multipart upload.</p>\n *\n *          <p>If your AWS Identity and Access Management (IAM) user or role is in the same AWS account\n *          as the AWS KMS CMK, then you must have these permissions on the key policy. If your IAM\n *          user or role belongs to a different account than the key, then you must have the\n *          permissions on both the key policy and your IAM user or role.</p>\n *\n *\n *          <p> For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html\">Protecting\n *             Data Using Server-Side Encryption</a>.</p>\n *\n *          <dl>\n *             <dt>Access Permissions</dt>\n *             <dd>\n *                <p>When copying an object, you can optionally specify the accounts or groups that\n *                   should be granted specific permissions on the new object. There are two ways to\n *                   grant the permissions using the request headers:</p>\n *                <ul>\n *                   <li>\n *                      <p>Specify a canned ACL with the <code>x-amz-acl</code> request header. For\n *                         more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL\">Canned ACL</a>.</p>\n *                   </li>\n *                   <li>\n *                      <p>Specify access permissions explicitly with the\n *                            <code>x-amz-grant-read</code>, <code>x-amz-grant-read-acp</code>,\n *                            <code>x-amz-grant-write-acp</code>, and\n *                            <code>x-amz-grant-full-control</code> headers. These parameters map to\n *                         the set of permissions that Amazon S3 supports in an ACL. For more information,\n *                         see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html\">Access Control List (ACL)\n *                            Overview</a>.</p>\n *                   </li>\n *                </ul>\n *                <p>You can use either a canned ACL or specify access permissions explicitly. You\n *                   cannot do both.</p>\n *             </dd>\n *             <dt>Server-Side- Encryption-Specific Request Headers</dt>\n *             <dd>\n *                <p>You can optionally tell Amazon S3 to encrypt data at rest using server-side\n *                   encryption. Server-side encryption is for data encryption at rest. Amazon S3 encrypts\n *                   your data as it writes it to disks in its data centers and decrypts it when you\n *                   access it. The option you use depends on whether you want to use AWS managed\n *                   encryption keys or provide your own encryption key. </p>\n *                <ul>\n *                   <li>\n *                      <p>Use encryption keys managed by Amazon S3 or customer master keys (CMKs) stored\n *                         in AWS Key Management Service (AWS KMS) – If you want AWS to manage the keys\n *                         used to encrypt data, specify the following headers in the request.</p>\n *                      <ul>\n *                         <li>\n *                            <p>x-amz-server-side-encryption</p>\n *                         </li>\n *                         <li>\n *                            <p>x-amz-server-side-encryption-aws-kms-key-id</p>\n *                         </li>\n *                         <li>\n *                            <p>x-amz-server-side-encryption-context</p>\n *                         </li>\n *                      </ul>\n *                      <note>\n *                         <p>If you specify <code>x-amz-server-side-encryption:aws:kms</code>, but\n *                            don't provide <code>x-amz-server-side-encryption-aws-kms-key-id</code>,\n *                            Amazon S3 uses the AWS managed CMK in AWS KMS to protect the data.</p>\n *                      </note>\n *                      <important>\n *                         <p>All GET and PUT requests for an object protected by AWS KMS fail if\n *                            you don't make them with SSL or by using SigV4.</p>\n *                      </important>\n *                      <p>For more information about server-side encryption with CMKs stored in AWS\n *                         KMS (SSE-KMS), see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html\">Protecting Data Using Server-Side Encryption with CMKs stored in AWS\n *                            KMS</a>.</p>\n *                   </li>\n *                   <li>\n *                      <p>Use customer-provided encryption keys – If you want to manage your own\n *                         encryption keys, provide all the following headers in the request.</p>\n *                      <ul>\n *                         <li>\n *                            <p>x-amz-server-side-encryption-customer-algorithm</p>\n *                         </li>\n *                         <li>\n *                            <p>x-amz-server-side-encryption-customer-key</p>\n *                         </li>\n *                         <li>\n *                            <p>x-amz-server-side-encryption-customer-key-MD5</p>\n *                         </li>\n *                      </ul>\n *                      <p>For more information about server-side encryption with CMKs stored in AWS\n *                         KMS (SSE-KMS), see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html\">Protecting Data Using Server-Side Encryption with CMKs stored in AWS\n *                            KMS</a>.</p>\n *                   </li>\n *                </ul>\n *             </dd>\n *             <dt>Access-Control-List (ACL)-Specific Request Headers</dt>\n *             <dd>\n *                <p>You also can use the following access control–related headers with this\n *                   operation. By default, all objects are private. Only the owner has full access\n *                   control. When adding a new object, you can grant permissions to individual AWS\n *                   accounts or to predefined groups defined by Amazon S3. These permissions are then added\n *                   to the access control list (ACL) on the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3_ACLs_UsingACLs.html\">Using ACLs</a>. With this\n *                   operation, you can grant access permissions using one of the following two\n *                   methods:</p>\n *                <ul>\n *                   <li>\n *                      <p>Specify a canned ACL (<code>x-amz-acl</code>) — Amazon S3 supports a set of\n *                         predefined ACLs, known as <i>canned ACLs</i>. Each canned ACL\n *                         has a predefined set of grantees and permissions. For more information, see\n *                            <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL\">Canned\n *                         ACL</a>.</p>\n *                   </li>\n *                   <li>\n *                      <p>Specify access permissions explicitly — To explicitly grant access\n *                         permissions to specific AWS accounts or groups, use the following headers.\n *                         Each header maps to specific permissions that Amazon S3 supports in an ACL. For\n *                         more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html\">Access\n *                            Control List (ACL) Overview</a>. In the header, you specify a list of\n *                         grantees who get the specific permission. To grant permissions explicitly,\n *                         use:</p>\n *                      <ul>\n *                         <li>\n *                            <p>x-amz-grant-read</p>\n *                         </li>\n *                         <li>\n *                            <p>x-amz-grant-write</p>\n *                         </li>\n *                         <li>\n *                            <p>x-amz-grant-read-acp</p>\n *                         </li>\n *                         <li>\n *                            <p>x-amz-grant-write-acp</p>\n *                         </li>\n *                         <li>\n *                            <p>x-amz-grant-full-control</p>\n *                         </li>\n *                      </ul>\n *                      <p>You specify each grantee as a type=value pair, where the type is one of\n *                         the following:</p>\n *                      <ul>\n *                         <li>\n *                            <p>\n *                               <code>id</code> – if the value specified is the canonical user ID\n *                               of an AWS account</p>\n *                         </li>\n *                         <li>\n *                            <p>\n *                               <code>uri</code> – if you are granting permissions to a predefined\n *                               group</p>\n *                         </li>\n *                         <li>\n *                            <p>\n *                               <code>emailAddress</code> – if the value specified is the email\n *                               address of an AWS account</p>\n *                            <note>\n *                               <p>Using email addresses to specify a grantee is only supported in the following AWS Regions: </p>\n *                               <ul>\n *                                  <li>\n *                                     <p>US East (N. Virginia)</p>\n *                                  </li>\n *                                  <li>\n *                                     <p>US West (N. California)</p>\n *                                  </li>\n *                                  <li>\n *                                     <p> US West (Oregon)</p>\n *                                  </li>\n *                                  <li>\n *                                     <p> Asia Pacific (Singapore)</p>\n *                                  </li>\n *                                  <li>\n *                                     <p>Asia Pacific (Sydney)</p>\n *                                  </li>\n *                                  <li>\n *                                     <p>Asia Pacific (Tokyo)</p>\n *                                  </li>\n *                                  <li>\n *                                     <p>Europe (Ireland)</p>\n *                                  </li>\n *                                  <li>\n *                                     <p>South America (São Paulo)</p>\n *                                  </li>\n *                               </ul>\n *                               <p>For a list of all the Amazon S3 supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\">Regions and Endpoints</a> in the AWS General Reference.</p>\n *                            </note>\n *                         </li>\n *                      </ul>\n *                      <p>For example, the following <code>x-amz-grant-read</code> header grants the AWS accounts identified by account IDs permissions to read object data and its metadata:</p>\n *                      <p>\n *                         <code>x-amz-grant-read: id=\"11112222333\", id=\"444455556666\" </code>\n *                      </p>\n *                   </li>\n *                </ul>\n *\n *             </dd>\n *          </dl>\n *\n *          <p>The following operations are related to <code>CreateMultipartUpload</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\">UploadPart</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html\">CompleteMultipartUpload</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html\">AbortMultipartUpload</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html\">ListParts</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html\">ListMultipartUploads</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar CreateMultipartUploadCommand =\n/** @class */\nfunction (_super) {\n  __extends(CreateMultipartUploadCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function CreateMultipartUploadCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  CreateMultipartUploadCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getSsecPlugin(configuration));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"CreateMultipartUploadCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: CreateMultipartUploadRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: CreateMultipartUploadOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  CreateMultipartUploadCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlCreateMultipartUploadCommand(input, context);\n  };\n\n  CreateMultipartUploadCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlCreateMultipartUploadCommand(output, context);\n  };\n\n  return CreateMultipartUploadCommand;\n}($Command);\n\nexport { CreateMultipartUploadCommand };","import { __extends } from \"tslib\";\nimport { UploadPartOutput, UploadPartRequest } from \"../models/models_1\";\nimport { deserializeAws_restXmlUploadPartCommand, serializeAws_restXmlUploadPartCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getSsecPlugin } from \"@aws-sdk/middleware-ssec\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Uploads a part in a multipart upload.</p>\n *          <note>\n *             <p>In this operation, you provide part data in your request. However, you have an option\n *             to specify your existing Amazon S3 object as a data source for the part you are uploading. To\n *             upload a part from an existing object, you use the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPartCopy.html\">UploadPartCopy</a> operation.\n *          </p>\n *          </note>\n *\n *          <p>You must initiate a multipart upload (see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\">CreateMultipartUpload</a>)\n *          before you can upload any part. In response to your initiate request, Amazon S3 returns an\n *          upload ID, a unique identifier, that you must include in your upload part request.</p>\n *          <p>Part numbers can be any number from 1 to 10,000, inclusive. A part number uniquely\n *          identifies a part and also defines its position within the object being created. If you\n *          upload a new part using the same part number that was used with a previous part, the\n *          previously uploaded part is overwritten. Each part must be at least 5 MB in size, except\n *          the last part. There is no size limit on the last part of your multipart upload.</p>\n *          <p>To ensure that data is not corrupted when traversing the network, specify the\n *             <code>Content-MD5</code> header in the upload part request. Amazon S3 checks the part data\n *          against the provided MD5 value. If they do not match, Amazon S3 returns an error. </p>\n *\n *          <p>If the upload request is signed with Signature Version 4, then AWS S3 uses the\n *             <code>x-amz-content-sha256</code> header as a checksum instead of\n *             <code>Content-MD5</code>. For more information see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-auth-using-authorization-header.html\">Authenticating Requests: Using the Authorization Header (AWS Signature Version\n *             4)</a>. </p>\n *\n *\n *\n *          <p>\n *             <b>Note:</b> After you initiate multipart upload and upload\n *          one or more parts, you must either complete or abort multipart upload in order to stop\n *          getting charged for storage of the uploaded parts. Only after you either complete or abort\n *          multipart upload, Amazon S3 frees up the parts storage and stops charging you for the parts\n *          storage.</p>\n *\n *          <p>For more information on multipart uploads, go to <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html\">Multipart Upload Overview</a> in the\n *             <i>Amazon Simple Storage Service Developer Guide </i>.</p>\n *          <p>For information on the permissions required to use the multipart upload API, go to\n *             <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html\">Multipart Upload API and\n *             Permissions</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n *\n *          <p>You can optionally request server-side encryption where Amazon S3 encrypts your data as it\n *          writes it to disks in its data centers and decrypts it for you when you access it. You have\n *          the option of providing your own encryption key, or you can use the AWS managed encryption\n *          keys. If you choose to provide your own encryption key, the request headers you provide in\n *          the request must match the headers you used in the request to initiate the upload by using\n *             <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\">CreateMultipartUpload</a>. For more information, go to <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html\">Using Server-Side Encryption</a> in\n *          the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n *\n *          <p>Server-side encryption is supported by the S3 Multipart Upload actions. Unless you are\n *          using a customer-provided encryption key, you don't need to specify the encryption\n *          parameters in each UploadPart request. Instead, you only need to specify the server-side\n *          encryption parameters in the initial Initiate Multipart request. For more information, see\n *             <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\">CreateMultipartUpload</a>.</p>\n *\n *          <p>If you requested server-side encryption using a customer-provided encryption key in your\n *          initiate multipart upload request, you must provide identical encryption information in\n *          each part upload using the following headers.</p>\n *\n *\n *          <ul>\n *             <li>\n *                <p>x-amz-server-side-encryption-customer-algorithm</p>\n *             </li>\n *             <li>\n *                <p>x-amz-server-side-encryption-customer-key</p>\n *             </li>\n *             <li>\n *                <p>x-amz-server-side-encryption-customer-key-MD5</p>\n *             </li>\n *          </ul>\n *\n *          <p class=\"title\">\n *             <b>Special Errors</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code: NoSuchUpload</i>\n *                      </p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause: The specified multipart upload does not exist. The upload\n *                         ID might be invalid, or the multipart upload might have been aborted or\n *                         completed.</i>\n *                      </p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i> HTTP Status Code: 404 Not Found </i>\n *                      </p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>SOAP Fault Code Prefix: Client</i>\n *                      </p>\n *                   </li>\n *                </ul>\n *             </li>\n *          </ul>\n *\n *\n *\n *\n *\n *\n *          <p class=\"title\">\n *             <b>Related Resources</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\">CreateMultipartUpload</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html\">CompleteMultipartUpload</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html\">AbortMultipartUpload</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html\">ListParts</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html\">ListMultipartUploads</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar UploadPartCommand =\n/** @class */\nfunction (_super) {\n  __extends(UploadPartCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function UploadPartCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  UploadPartCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getSsecPlugin(configuration));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"UploadPartCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: UploadPartRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: UploadPartOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  UploadPartCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlUploadPartCommand(input, context);\n  };\n\n  UploadPartCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlUploadPartCommand(output, context);\n  };\n\n  return UploadPartCommand;\n}($Command);\n\nexport { UploadPartCommand };","import { __extends } from \"tslib\";\nimport { CompleteMultipartUploadOutput, CompleteMultipartUploadRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlCompleteMultipartUploadCommand, serializeAws_restXmlCompleteMultipartUploadCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getThrow200ExceptionsPlugin } from \"@aws-sdk/middleware-sdk-s3\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Completes a multipart upload by assembling previously uploaded parts.</p>\n *          <p>You first initiate the multipart upload and then upload all parts using the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\">UploadPart</a>\n *          operation. After successfully uploading all relevant parts of an upload, you call this\n *          operation to complete the upload. Upon receiving this request, Amazon S3 concatenates all\n *          the parts in ascending order by part number to create a new object. In the Complete\n *          Multipart Upload request, you must provide the parts list. You must ensure that the parts\n *          list is complete. This operation concatenates the parts that you provide in the list. For\n *          each part in the list, you must provide the part number and the <code>ETag</code> value,\n *          returned after that part was uploaded.</p>\n *          <p>Processing of a Complete Multipart Upload request could take several minutes to\n *          complete. After Amazon S3 begins processing the request, it sends an HTTP response header that\n *          specifies a 200 OK response. While processing is in progress, Amazon S3 periodically sends white\n *          space characters to keep the connection from timing out. Because a request could fail after\n *          the initial 200 OK response has been sent, it is important that you check the response body\n *          to determine whether the request succeeded.</p>\n *          <p>Note that if <code>CompleteMultipartUpload</code> fails, applications should be prepared\n *          to retry the failed requests. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ErrorBestPractices.html\">Amazon S3 Error Best Practices</a>.</p>\n *          <p>For more information about multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html\">Uploading Objects Using Multipart\n *             Upload</a>.</p>\n *          <p>For information about permissions required to use the multipart upload API, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html\">Multipart Upload API and\n *          Permissions</a>.</p>\n *\n *\n *          <p>\n *             <code>CompleteMultipartUpload</code> has the following special errors:</p>\n *          <ul>\n *             <li>\n *                <p>Error code: <code>EntityTooSmall</code>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>Description: Your proposed upload is smaller than the minimum allowed object\n *                      size. Each part must be at least 5 MB in size, except the last part.</p>\n *                   </li>\n *                   <li>\n *                      <p>400 Bad Request</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p>Error code: <code>InvalidPart</code>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>Description: One or more of the specified parts could not be found. The part\n *                      might not have been uploaded, or the specified entity tag might not have\n *                      matched the part's entity tag.</p>\n *                   </li>\n *                   <li>\n *                      <p>400 Bad Request</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p>Error code: <code>InvalidPartOrder</code>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>Description: The list of parts was not in ascending order. The parts list\n *                      must be specified in order by part number.</p>\n *                   </li>\n *                   <li>\n *                      <p>400 Bad Request</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p>Error code: <code>NoSuchUpload</code>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>Description: The specified multipart upload does not exist. The upload ID\n *                      might be invalid, or the multipart upload might have been aborted or\n *                      completed.</p>\n *                   </li>\n *                   <li>\n *                      <p>404 Not Found</p>\n *                   </li>\n *                </ul>\n *             </li>\n *          </ul>\n *\n *          <p>The following operations are related to <code>CompleteMultipartUpload</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\">CreateMultipartUpload</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\">UploadPart</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html\">AbortMultipartUpload</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html\">ListParts</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html\">ListMultipartUploads</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar CompleteMultipartUploadCommand =\n/** @class */\nfunction (_super) {\n  __extends(CompleteMultipartUploadCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function CompleteMultipartUploadCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  CompleteMultipartUploadCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getThrow200ExceptionsPlugin(configuration));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"CompleteMultipartUploadCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: CompleteMultipartUploadRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: CompleteMultipartUploadOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  CompleteMultipartUploadCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlCompleteMultipartUploadCommand(input, context);\n  };\n\n  CompleteMultipartUploadCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlCompleteMultipartUploadCommand(output, context);\n  };\n\n  return CompleteMultipartUploadCommand;\n}($Command);\n\nexport { CompleteMultipartUploadCommand };","import { __extends } from \"tslib\";\nimport { AbortMultipartUploadOutput, AbortMultipartUploadRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlAbortMultipartUploadCommand, serializeAws_restXmlAbortMultipartUploadCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>This operation aborts a multipart upload. After a multipart upload is aborted, no\n *          additional parts can be uploaded using that upload ID. The storage consumed by any\n *          previously uploaded parts will be freed. However, if any part uploads are currently in\n *          progress, those part uploads might or might not succeed. As a result, it might be necessary\n *          to abort a given multipart upload multiple times in order to completely free all storage\n *          consumed by all parts. </p>\n *          <p>To verify that all parts have been removed, so you don't get charged for the part\n *          storage, you should call the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html\">ListParts</a> operation and ensure that\n *          the parts list is empty.</p>\n *          <p>For information about permissions required to use the multipart upload API, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html\">Multipart Upload API and\n *          Permissions</a>.</p>\n *          <p>The following operations are related to <code>AbortMultipartUpload</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\">CreateMultipartUpload</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\">UploadPart</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html\">CompleteMultipartUpload</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html\">ListParts</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html\">ListMultipartUploads</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar AbortMultipartUploadCommand =\n/** @class */\nfunction (_super) {\n  __extends(AbortMultipartUploadCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function AbortMultipartUploadCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  AbortMultipartUploadCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"AbortMultipartUploadCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: AbortMultipartUploadRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: AbortMultipartUploadOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  AbortMultipartUploadCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlAbortMultipartUploadCommand(input, context);\n  };\n\n  AbortMultipartUploadCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlAbortMultipartUploadCommand(output, context);\n  };\n\n  return AbortMultipartUploadCommand;\n}($Command);\n\nexport { AbortMultipartUploadCommand };","import { __extends } from \"tslib\";\nimport { ListPartsOutput, ListPartsRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlListPartsCommand, serializeAws_restXmlListPartsCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Lists the parts that have been uploaded for a specific multipart upload. This operation\n *          must include the upload ID, which you obtain by sending the initiate multipart upload\n *          request (see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\">CreateMultipartUpload</a>).\n *          This request returns a maximum of 1,000 uploaded parts. The default number of parts\n *          returned is 1,000 parts. You can restrict the number of parts returned by specifying the\n *             <code>max-parts</code> request parameter. If your multipart upload consists of more than\n *          1,000 parts, the response returns an <code>IsTruncated</code> field with the value of true,\n *          and a <code>NextPartNumberMarker</code> element. In subsequent <code>ListParts</code>\n *          requests you can include the part-number-marker query string parameter and set its value to\n *          the <code>NextPartNumberMarker</code> field value from the previous response.</p>\n *\n *          <p>For more information on multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html\">Uploading Objects Using Multipart\n *             Upload</a>.</p>\n *\n *          <p>For information on permissions required to use the multipart upload API, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html\">Multipart Upload API and\n *          Permissions</a>.</p>\n *\n *          <p>The following operations are related to <code>ListParts</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\">CreateMultipartUpload</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\">UploadPart</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html\">CompleteMultipartUpload</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html\">AbortMultipartUpload</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html\">ListMultipartUploads</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar ListPartsCommand =\n/** @class */\nfunction (_super) {\n  __extends(ListPartsCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function ListPartsCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  ListPartsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"ListPartsCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: ListPartsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: ListPartsOutput.filterSensitiveLog\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  ListPartsCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlListPartsCommand(input, context);\n  };\n\n  ListPartsCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlListPartsCommand(output, context);\n  };\n\n  return ListPartsCommand;\n}($Command);\n\nexport { ListPartsCommand };","/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function next() {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nimport { ConsoleLogger as Logger, getAmplifyUserAgent, Platform, Credentials } from '@aws-amplify/core';\nimport { S3Client, PutObjectCommand, CreateMultipartUploadCommand, UploadPartCommand, CompleteMultipartUploadCommand, ListPartsCommand, AbortMultipartUploadCommand } from '@aws-sdk/client-s3';\nimport { AxiosHttpHandler, SEND_PROGRESS_EVENT } from './axios-http-handler';\nimport * as events from 'events';\nimport { streamCollector } from '@aws-sdk/fetch-http-handler';\nvar logger = new Logger('AWSS3ProviderManagedUpload');\nvar localTestingStorageEndpoint = 'http://localhost:20005';\nvar SET_CONTENT_LENGTH_HEADER = 'contentLengthMiddleware';\n\nvar AWSS3ProviderManagedUpload =\n/** @class */\nfunction () {\n  function AWSS3ProviderManagedUpload(params, opts, emitter) {\n    // Defaults\n    this.minPartSize = 5 * 1024 * 1024; // in MB\n\n    this.queueSize = 4; // Data for current upload\n\n    this.body = null;\n    this.params = null;\n    this.opts = null;\n    this.multiPartMap = [];\n    this.cancel = false; // Progress reporting\n\n    this.bytesUploaded = 0;\n    this.totalBytesToUpload = 0;\n    this.emitter = null;\n    this.params = params;\n    this.opts = opts;\n    this.emitter = emitter;\n  }\n\n  AWSS3ProviderManagedUpload.prototype.upload = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, putObjectCommand, s3, uploadId, numberOfPartsToUpload, start, parts;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            _a = this;\n            return [4\n            /*yield*/\n            , this.validateAndSanitizeBody(this.params.Body)];\n\n          case 1:\n            _a.body = _b.sent();\n            this.totalBytesToUpload = this.byteLength(this.body);\n            if (!(this.totalBytesToUpload <= this.minPartSize)) return [3\n            /*break*/\n            , 3]; // Multipart upload is not required. Upload the sanitized body as is\n\n            this.params.Body = this.body;\n            putObjectCommand = new PutObjectCommand(this.params);\n            return [4\n            /*yield*/\n            , this._createNewS3Client(this.opts, this.emitter)];\n\n          case 2:\n            s3 = _b.sent();\n            return [2\n            /*return*/\n            , s3.send(putObjectCommand)];\n\n          case 3:\n            return [4\n            /*yield*/\n            , this.createMultiPartUpload()];\n\n          case 4:\n            uploadId = _b.sent();\n            numberOfPartsToUpload = Math.ceil(this.totalBytesToUpload / this.minPartSize);\n            start = 0;\n            _b.label = 5;\n\n          case 5:\n            if (!(start < numberOfPartsToUpload)) return [3\n            /*break*/\n            , 10];\n            /** This first block will try to cancel the upload if the cancel\n             *\trequest came before any parts uploads have started.\n             **/\n\n            return [4\n            /*yield*/\n            , this.checkIfUploadCancelled(uploadId)];\n\n          case 6:\n            /** This first block will try to cancel the upload if the cancel\n             *\trequest came before any parts uploads have started.\n             **/\n            _b.sent();\n\n            parts = this.createParts(start);\n            return [4\n            /*yield*/\n            , this.uploadParts(uploadId, parts)];\n\n          case 7:\n            _b.sent();\n            /** Call cleanup a second time in case there were part upload requests\n             *  in flight. This is to ensure that all parts are cleaned up.\n             */\n\n\n            return [4\n            /*yield*/\n            , this.checkIfUploadCancelled(uploadId)];\n\n          case 8:\n            /** Call cleanup a second time in case there were part upload requests\n             *  in flight. This is to ensure that all parts are cleaned up.\n             */\n            _b.sent();\n\n            _b.label = 9;\n\n          case 9:\n            start += this.queueSize;\n            return [3\n            /*break*/\n            , 5];\n\n          case 10:\n            return [4\n            /*yield*/\n            , this.finishMultiPartUpload(uploadId)];\n\n          case 11:\n            // Step 3: Finalize the upload such that S3 can recreate the file\n            return [2\n            /*return*/\n            , _b.sent()];\n        }\n      });\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.createParts = function (startPartNumber) {\n    var parts = [];\n    var partNumber = startPartNumber;\n\n    for (var bodyStart = startPartNumber * this.minPartSize; bodyStart < this.totalBytesToUpload && parts.length < this.queueSize;) {\n      var bodyEnd = Math.min(bodyStart + this.minPartSize, this.totalBytesToUpload);\n      parts.push({\n        bodyPart: this.body.slice(bodyStart, bodyEnd),\n        partNumber: ++partNumber,\n        emitter: new events.EventEmitter(),\n        _lastUploadedBytes: 0\n      });\n      bodyStart += this.minPartSize;\n    }\n\n    return parts;\n  };\n\n  AWSS3ProviderManagedUpload.prototype.createMultiPartUpload = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var createMultiPartUploadCommand, s3, response;\n\n      var _this = this;\n\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            createMultiPartUploadCommand = new CreateMultipartUploadCommand(this.params);\n            return [4\n            /*yield*/\n            , this._createNewS3Client(this.opts)];\n\n          case 1:\n            s3 = _a.sent(); // @aws-sdk/client-s3 seems to be ignoring the `ContentType` parameter, so we\n            // are explicitly adding it via middleware.\n            // https://github.com/aws/aws-sdk-js-v3/issues/2000\n\n            s3.middlewareStack.add(function (next) {\n              return function (args) {\n                if (_this.params.ContentType && args && args.request && args.request.headers) {\n                  args.request.headers['Content-Type'] = _this.params.ContentType;\n                }\n\n                return next(args);\n              };\n            }, {\n              step: 'build'\n            });\n            return [4\n            /*yield*/\n            , s3.send(createMultiPartUploadCommand)];\n\n          case 2:\n            response = _a.sent();\n            logger.debug(response.UploadId);\n            return [2\n            /*return*/\n            , response.UploadId];\n        }\n      });\n    });\n  };\n  /**\n   * @private Not to be extended outside of tests\n   * @VisibleFotTesting\n   */\n\n\n  AWSS3ProviderManagedUpload.prototype.uploadParts = function (uploadId, parts) {\n    return __awaiter(this, void 0, void 0, function () {\n      var promises, parts_1, parts_1_1, part, uploadPartCommandInput, uploadPartCommand, s3, e_1_1, allResults, i, error_1;\n\n      var e_1, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            promises = [];\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1, 6, 7, 8]);\n\n            parts_1 = __values(parts), parts_1_1 = parts_1.next();\n            _b.label = 2;\n\n          case 2:\n            if (!!parts_1_1.done) return [3\n            /*break*/\n            , 5];\n            part = parts_1_1.value;\n            this.setupEventListener(part);\n            uploadPartCommandInput = {\n              PartNumber: part.partNumber,\n              Body: part.bodyPart,\n              UploadId: uploadId,\n              Key: this.params.Key,\n              Bucket: this.params.Bucket\n            };\n            uploadPartCommand = new UploadPartCommand(uploadPartCommandInput);\n            return [4\n            /*yield*/\n            , this._createNewS3Client(this.opts, part.emitter)];\n\n          case 3:\n            s3 = _b.sent();\n            promises.push(s3.send(uploadPartCommand));\n            _b.label = 4;\n\n          case 4:\n            parts_1_1 = parts_1.next();\n            return [3\n            /*break*/\n            , 2];\n\n          case 5:\n            return [3\n            /*break*/\n            , 8];\n\n          case 6:\n            e_1_1 = _b.sent();\n            e_1 = {\n              error: e_1_1\n            };\n            return [3\n            /*break*/\n            , 8];\n\n          case 7:\n            try {\n              if (parts_1_1 && !parts_1_1.done && (_a = parts_1.return)) _a.call(parts_1);\n            } finally {\n              if (e_1) throw e_1.error;\n            }\n\n            return [7\n            /*endfinally*/\n            ];\n\n          case 8:\n            _b.trys.push([8, 10,, 11]);\n\n            return [4\n            /*yield*/\n            , Promise.all(promises)];\n\n          case 9:\n            allResults = _b.sent(); // The order of resolved promises is the same as input promise order.\n\n            for (i = 0; i < allResults.length; i++) {\n              this.multiPartMap.push({\n                PartNumber: parts[i].partNumber,\n                ETag: allResults[i].ETag\n              });\n            }\n\n            return [3\n            /*break*/\n            , 11];\n\n          case 10:\n            error_1 = _b.sent();\n            logger.error('error happened while uploading a part. Cancelling the multipart upload', error_1);\n            this.cancelUpload();\n            return [2\n            /*return*/\n            ];\n\n          case 11:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.finishMultiPartUpload = function (uploadId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var input, completeUploadCommand, s3, data, error_2;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            input = {\n              Bucket: this.params.Bucket,\n              Key: this.params.Key,\n              UploadId: uploadId,\n              MultipartUpload: {\n                Parts: this.multiPartMap\n              }\n            };\n            completeUploadCommand = new CompleteMultipartUploadCommand(input);\n            return [4\n            /*yield*/\n            , this._createNewS3Client(this.opts)];\n\n          case 1:\n            s3 = _a.sent();\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , s3.send(completeUploadCommand)];\n\n          case 3:\n            data = _a.sent();\n            return [2\n            /*return*/\n            , data.Key];\n\n          case 4:\n            error_2 = _a.sent();\n            logger.error('error happened while finishing the upload. Cancelling the multipart upload', error_2);\n            this.cancelUpload();\n            return [2\n            /*return*/\n            ];\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.checkIfUploadCancelled = function (uploadId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var errorMessage, error_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.cancel) return [3\n            /*break*/\n            , 5];\n            errorMessage = 'Upload was cancelled.';\n            _a.label = 1;\n\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n\n            return [4\n            /*yield*/\n            , this.cleanup(uploadId)];\n\n          case 2:\n            _a.sent();\n\n            return [3\n            /*break*/\n            , 4];\n\n          case 3:\n            error_3 = _a.sent();\n            errorMessage += error_3.errorMessage;\n            return [3\n            /*break*/\n            , 4];\n\n          case 4:\n            throw new Error(errorMessage);\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.cancelUpload = function () {\n    this.cancel = true;\n  };\n\n  AWSS3ProviderManagedUpload.prototype.cleanup = function (uploadId) {\n    return __awaiter(this, void 0, void 0, function () {\n      var input, s3, data;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Reset this's state\n            this.body = null;\n            this.multiPartMap = [];\n            this.bytesUploaded = 0;\n            this.totalBytesToUpload = 0;\n            input = {\n              Bucket: this.params.Bucket,\n              Key: this.params.Key,\n              UploadId: uploadId\n            };\n            return [4\n            /*yield*/\n            , this._createNewS3Client(this.opts)];\n\n          case 1:\n            s3 = _a.sent();\n            return [4\n            /*yield*/\n            , s3.send(new AbortMultipartUploadCommand(input))];\n\n          case 2:\n            _a.sent();\n\n            return [4\n            /*yield*/\n            , s3.send(new ListPartsCommand(input))];\n\n          case 3:\n            data = _a.sent();\n\n            if (data && data.Parts && data.Parts.length > 0) {\n              throw new Error('Multi Part upload clean up failed');\n            }\n\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.setupEventListener = function (part) {\n    var _this = this;\n\n    part.emitter.on(SEND_PROGRESS_EVENT, function (progress) {\n      _this.progressChanged(part.partNumber, progress.loaded - part._lastUploadedBytes);\n\n      part._lastUploadedBytes = progress.loaded;\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.progressChanged = function (partNumber, incrementalUpdate) {\n    this.bytesUploaded += incrementalUpdate;\n    this.emitter.emit(SEND_PROGRESS_EVENT, {\n      loaded: this.bytesUploaded,\n      total: this.totalBytesToUpload,\n      part: partNumber,\n      key: this.params.Key\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.byteLength = function (input) {\n    if (input === null || input === undefined) return 0;\n\n    if (typeof input.byteLength === 'number') {\n      return input.byteLength;\n    } else if (typeof input.length === 'number') {\n      return input.length;\n    } else if (typeof input.size === 'number') {\n      return input.size;\n    } else if (typeof input.path === 'string') {\n      /* NodeJs Support\n      return require('fs').lstatSync(input.path).size;\n      */\n    } else {\n      throw new Error('Cannot determine length of ' + input);\n    }\n  };\n\n  AWSS3ProviderManagedUpload.prototype.validateAndSanitizeBody = function (body) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.isGenericObject(body)) return [3\n            /*break*/\n            , 1]; // Any javascript object\n\n            return [2\n            /*return*/\n            , JSON.stringify(body)];\n\n          case 1:\n            if (!this.isBlob(body)) return [3\n            /*break*/\n            , 4];\n            if (!Platform.isReactNative) return [3\n            /*break*/\n            , 3];\n            return [4\n            /*yield*/\n            , streamCollector(body)];\n\n          case 2:\n            return [2\n            /*return*/\n            , _a.sent()];\n\n          case 3:\n            return [2\n            /*return*/\n            , body];\n\n          case 4:\n            // Files, arrayBuffer etc\n            return [2\n            /*return*/\n            , body];\n        }\n      });\n    });\n  };\n\n  AWSS3ProviderManagedUpload.prototype.isBlob = function (body) {\n    return typeof Blob !== 'undefined' && body instanceof Blob;\n  };\n\n  AWSS3ProviderManagedUpload.prototype.isGenericObject = function (body) {\n    if (body !== null && typeof body === 'object') {\n      try {\n        return !(this.byteLength(body) >= 0);\n      } catch (error) {\n        // If we cannot determine the length of the body, consider it\n        // as a generic object and upload a stringified version of it\n        return true;\n      }\n    }\n\n    return false;\n  };\n  /**\n   * @private\n   * creates an S3 client with new V3 aws sdk\n   */\n\n\n  AWSS3ProviderManagedUpload.prototype._createNewS3Client = function (config, emitter) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentials, region, dangerouslyConnectToHttpEndpointForTesting, localTestingConfig, client;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._getCredentials()];\n\n          case 1:\n            credentials = _a.sent();\n            region = config.region, dangerouslyConnectToHttpEndpointForTesting = config.dangerouslyConnectToHttpEndpointForTesting;\n            localTestingConfig = {};\n\n            if (dangerouslyConnectToHttpEndpointForTesting) {\n              localTestingConfig = {\n                endpoint: localTestingStorageEndpoint,\n                tls: false,\n                bucketEndpoint: false,\n                forcePathStyle: true\n              };\n            }\n\n            client = new S3Client(__assign(__assign({\n              region: region,\n              credentials: credentials\n            }, localTestingConfig), {\n              requestHandler: new AxiosHttpHandler({}, emitter),\n              customUserAgent: getAmplifyUserAgent()\n            }));\n            client.middlewareStack.remove(SET_CONTENT_LENGTH_HEADER);\n            return [2\n            /*return*/\n            , client];\n        }\n      });\n    });\n  };\n  /**\n   * @private\n   */\n\n\n  AWSS3ProviderManagedUpload.prototype._getCredentials = function () {\n    return Credentials.get().then(function (credentials) {\n      if (!credentials) return false;\n      var cred = Credentials.shear(credentials);\n      logger.debug('set credentials for storage', cred);\n      return cred;\n    }).catch(function (error) {\n      logger.warn('ensure credentials error', error);\n      return false;\n    });\n  };\n\n  return AWSS3ProviderManagedUpload;\n}();\n\nexport { AWSS3ProviderManagedUpload };","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nimport { ConsoleLogger as Logger, Hub, Credentials, Parser, getAmplifyUserAgent } from '@aws-amplify/core';\nimport { S3Client, GetObjectCommand, DeleteObjectCommand, ListObjectsCommand } from '@aws-sdk/client-s3';\nimport { formatUrl } from '@aws-sdk/util-format-url';\nimport { createRequest } from '@aws-sdk/util-create-request';\nimport { S3RequestPresigner } from '@aws-sdk/s3-request-presigner';\nimport { AxiosHttpHandler } from './axios-http-handler';\nimport { AWSS3ProviderManagedUpload } from './AWSS3ProviderManagedUpload';\nimport * as events from 'events';\nvar logger = new Logger('AWSS3Provider');\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\n\nvar dispatchStorageEvent = function dispatchStorageEvent(track, event, attrs, metrics, message) {\n  if (track) {\n    var data = {\n      attrs: attrs\n    };\n\n    if (metrics) {\n      data['metrics'] = metrics;\n    }\n\n    Hub.dispatch('storage', {\n      event: event,\n      data: data,\n      message: message\n    }, 'Storage', AMPLIFY_SYMBOL);\n  }\n};\n\nvar localTestingStorageEndpoint = 'http://localhost:20005';\n/**\n * Provide storage methods to use AWS S3\n */\n\nvar AWSS3Provider =\n/** @class */\nfunction () {\n  /**\n   * Initialize Storage with AWS configurations\n   * @param {Object} config - Configuration object for storage\n   */\n  function AWSS3Provider(config) {\n    this._config = config ? config : {};\n    logger.debug('Storage Options', this._config);\n  }\n  /**\n   * get the category of the plugin\n   */\n\n\n  AWSS3Provider.prototype.getCategory = function () {\n    return AWSS3Provider.CATEGORY;\n  };\n  /**\n   * get provider name of the plugin\n   */\n\n\n  AWSS3Provider.prototype.getProviderName = function () {\n    return AWSS3Provider.PROVIDER_NAME;\n  };\n  /**\n   * Configure Storage part with aws configuration\n   * @param {Object} config - Configuration of the Storage\n   * @return {Object} - Current configuration\n   */\n\n\n  AWSS3Provider.prototype.configure = function (config) {\n    logger.debug('configure Storage', config);\n    if (!config) return this._config;\n    var amplifyConfig = Parser.parseMobilehubConfig(config);\n    this._config = Object.assign({}, this._config, amplifyConfig.Storage);\n\n    if (!this._config.bucket) {\n      logger.debug('Do not have bucket yet');\n    }\n\n    return this._config;\n  };\n  /**\n   * Get a presigned URL of the file or the object data when download:true\n   *\n   * @param {string} key - key of the object\n   * @param {Object} [config] - { level : private|protected|public, download: true|false }\n   * @return - A promise resolves to Amazon S3 presigned URL on success\n   */\n\n\n  AWSS3Provider.prototype.get = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, download, cacheControl, contentDisposition, contentEncoding, contentLanguage, contentType, expires, track, prefix, final_key, s3, params, getObjectCommand, response, error_1, signer, request, url, _a, error_2;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _b.sent();\n\n            if (!credentialsOK) {\n              return [2\n              /*return*/\n              , Promise.reject('No credentials')];\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, download = opt.download, cacheControl = opt.cacheControl, contentDisposition = opt.contentDisposition, contentEncoding = opt.contentEncoding, contentLanguage = opt.contentLanguage, contentType = opt.contentType, expires = opt.expires, track = opt.track;\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            s3 = this._createNewS3Client(opt);\n            logger.debug('get ' + key + ' from ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key\n            }; // See: https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/S3.html#getObject-property\n\n            if (cacheControl) params.ResponseCacheControl = cacheControl;\n            if (contentDisposition) params.ResponseContentDisposition = contentDisposition;\n            if (contentEncoding) params.ResponseContentEncoding = contentEncoding;\n            if (contentLanguage) params.ResponseContentLanguage = contentLanguage;\n            if (contentType) params.ResponseContentType = contentType;\n            if (!(download === true)) return [3\n            /*break*/\n            , 5];\n            getObjectCommand = new GetObjectCommand(params);\n            _b.label = 2;\n\n          case 2:\n            _b.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , s3.send(getObjectCommand)];\n\n          case 3:\n            response = _b.sent();\n            dispatchStorageEvent(track, 'download', {\n              method: 'get',\n              result: 'success'\n            }, {\n              fileSize: Number(response.Body['size'] || response.Body['length'])\n            }, \"Download success for \" + key);\n            return [2\n            /*return*/\n            , response];\n\n          case 4:\n            error_1 = _b.sent();\n            dispatchStorageEvent(track, 'download', {\n              method: 'get',\n              result: 'failed'\n            }, null, \"Download failed with \" + error_1.message);\n            throw error_1;\n\n          case 5:\n            params.Expires = expires || 900; // Default is 15 mins as defined in V2 AWS SDK\n\n            _b.label = 6;\n\n          case 6:\n            _b.trys.push([6, 9,, 10]);\n\n            signer = new S3RequestPresigner(__assign({}, s3.config));\n            return [4\n            /*yield*/\n            , createRequest(s3, new GetObjectCommand(params))];\n\n          case 7:\n            request = _b.sent();\n            _a = formatUrl;\n            return [4\n            /*yield*/\n            , signer.presign(request, {\n              expiresIn: params.Expires\n            })];\n\n          case 8:\n            url = _a.apply(void 0, [_b.sent()]);\n            dispatchStorageEvent(track, 'getSignedUrl', {\n              method: 'get',\n              result: 'success'\n            }, null, \"Signed URL: \" + url);\n            return [2\n            /*return*/\n            , url];\n\n          case 9:\n            error_2 = _b.sent();\n            logger.warn('get signed url error', error_2);\n            dispatchStorageEvent(track, 'getSignedUrl', {\n              method: 'get',\n              result: 'failed'\n            }, null, \"Could not get a signed URL for \" + key);\n            throw error_2;\n\n          case 10:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Put a file in S3 bucket specified to configure method\n   * @param {string} key - key of the object\n   * @param {Object} object - File to be put in Amazon S3 bucket\n   * @param {Object} [config] - { level : private|protected|public, contentType: MIME Types,\n   *  progressCallback: function }\n   * @return - promise resolves to object on success\n   */\n\n\n  AWSS3Provider.prototype.put = function (key, object, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, progressCallback, contentType, contentDisposition, cacheControl, expires, metadata, tagging, acl, serverSideEncryption, SSECustomerAlgorithm, SSECustomerKey, SSECustomerKeyMD5, SSEKMSKeyId, type, prefix, final_key, params, emitter, uploader, response, error_3;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK) {\n              return [2\n              /*return*/\n              , Promise.reject('No credentials')];\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track, progressCallback = opt.progressCallback;\n            contentType = opt.contentType, contentDisposition = opt.contentDisposition, cacheControl = opt.cacheControl, expires = opt.expires, metadata = opt.metadata, tagging = opt.tagging, acl = opt.acl;\n            serverSideEncryption = opt.serverSideEncryption, SSECustomerAlgorithm = opt.SSECustomerAlgorithm, SSECustomerKey = opt.SSECustomerKey, SSECustomerKeyMD5 = opt.SSECustomerKeyMD5, SSEKMSKeyId = opt.SSEKMSKeyId;\n            type = contentType ? contentType : 'binary/octet-stream';\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            logger.debug('put ' + key + ' to ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key,\n              Body: object,\n              ContentType: type\n            };\n\n            if (cacheControl) {\n              params.CacheControl = cacheControl;\n            }\n\n            if (contentDisposition) {\n              params.ContentDisposition = contentDisposition;\n            }\n\n            if (expires) {\n              params.Expires = expires;\n            }\n\n            if (metadata) {\n              params.Metadata = metadata;\n            }\n\n            if (tagging) {\n              params.Tagging = tagging;\n            }\n\n            if (serverSideEncryption) {\n              params.ServerSideEncryption = serverSideEncryption;\n\n              if (SSECustomerAlgorithm) {\n                params.SSECustomerAlgorithm = SSECustomerAlgorithm;\n              }\n\n              if (SSECustomerKey) {\n                params.SSECustomerKey = SSECustomerKey;\n              }\n\n              if (SSECustomerKeyMD5) {\n                params.SSECustomerKeyMD5 = SSECustomerKeyMD5;\n              }\n\n              if (SSEKMSKeyId) {\n                params.SSEKMSKeyId = SSEKMSKeyId;\n              }\n            }\n\n            emitter = new events.EventEmitter();\n            uploader = new AWSS3ProviderManagedUpload(params, opt, emitter);\n\n            if (acl) {\n              params.ACL = acl;\n            }\n\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            emitter.on('sendProgress', function (progress) {\n              if (progressCallback) {\n                if (typeof progressCallback === 'function') {\n                  progressCallback(progress);\n                } else {\n                  logger.warn('progressCallback should be a function, not a ' + typeof progressCallback);\n                }\n              }\n            });\n            return [4\n            /*yield*/\n            , uploader.upload()];\n\n          case 3:\n            response = _a.sent();\n            logger.debug('upload result', response);\n            dispatchStorageEvent(track, 'upload', {\n              method: 'put',\n              result: 'success'\n            }, null, \"Upload success for \" + key);\n            return [2\n            /*return*/\n            , {\n              key: key\n            }];\n\n          case 4:\n            error_3 = _a.sent();\n            logger.warn('error uploading', error_3);\n            dispatchStorageEvent(track, 'upload', {\n              method: 'put',\n              result: 'failed'\n            }, null, \"Error uploading \" + key);\n            throw error_3;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * Remove the object for specified key\n   * @param {string} key - key of the object\n   * @param {Object} [config] - { level : private|protected|public }\n   * @return - Promise resolves upon successful removal of the object\n   */\n\n\n  AWSS3Provider.prototype.remove = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, prefix, final_key, s3, params, deleteObjectCommand, response, error_4;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK) {\n              return [2\n              /*return*/\n              , Promise.reject('No credentials')];\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track;\n            prefix = this._prefix(opt);\n            final_key = prefix + key;\n            s3 = this._createNewS3Client(opt);\n            logger.debug('remove ' + key + ' from ' + final_key);\n            params = {\n              Bucket: bucket,\n              Key: final_key\n            };\n            deleteObjectCommand = new DeleteObjectCommand(params);\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , s3.send(deleteObjectCommand)];\n\n          case 3:\n            response = _a.sent();\n            dispatchStorageEvent(track, 'delete', {\n              method: 'remove',\n              result: 'success'\n            }, null, \"Deleted \" + key + \" successfully\");\n            return [2\n            /*return*/\n            , response];\n\n          case 4:\n            error_4 = _a.sent();\n            dispatchStorageEvent(track, 'delete', {\n              method: 'remove',\n              result: 'failed'\n            }, null, \"Deletion of \" + key + \" failed with \" + error_4);\n            throw error_4;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * List bucket objects relative to the level and prefix specified\n   * @param {string} path - the path that contains objects\n   * @param {Object} [config] - { level : private|protected|public }\n   * @return - Promise resolves to list of keys for all objects in path\n   */\n\n\n  AWSS3Provider.prototype.list = function (path, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var credentialsOK, opt, bucket, track, maxKeys, prefix, final_path, s3, params, listObjectsCommand, response, list, error_5;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this._ensureCredentials()];\n\n          case 1:\n            credentialsOK = _a.sent();\n\n            if (!credentialsOK) {\n              return [2\n              /*return*/\n              , Promise.reject('No credentials')];\n            }\n\n            opt = Object.assign({}, this._config, config);\n            bucket = opt.bucket, track = opt.track, maxKeys = opt.maxKeys;\n            prefix = this._prefix(opt);\n            final_path = prefix + path;\n            s3 = this._createNewS3Client(opt);\n            logger.debug('list ' + path + ' from ' + final_path);\n            params = {\n              Bucket: bucket,\n              Prefix: final_path,\n              MaxKeys: maxKeys\n            };\n            listObjectsCommand = new ListObjectsCommand(params);\n            _a.label = 2;\n\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n\n            return [4\n            /*yield*/\n            , s3.send(listObjectsCommand)];\n\n          case 3:\n            response = _a.sent();\n            list = [];\n\n            if (response && response.Contents) {\n              list = response.Contents.map(function (item) {\n                return {\n                  key: item.Key.substr(prefix.length),\n                  eTag: item.ETag,\n                  lastModified: item.LastModified,\n                  size: item.Size\n                };\n              });\n            }\n\n            dispatchStorageEvent(track, 'list', {\n              method: 'list',\n              result: 'success'\n            }, null, list.length + \" items returned from list operation\");\n            logger.debug('list', list);\n            return [2\n            /*return*/\n            , list];\n\n          case 4:\n            error_5 = _a.sent();\n            logger.warn('list error', error_5);\n            dispatchStorageEvent(track, 'list', {\n              method: 'list',\n              result: 'failed'\n            }, null, \"Listing items failed: \" + error_5.message);\n            throw error_5;\n\n          case 5:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  };\n  /**\n   * @private\n   */\n\n\n  AWSS3Provider.prototype._ensureCredentials = function () {\n    var _this = this;\n\n    return Credentials.get().then(function (credentials) {\n      if (!credentials) return false;\n      var cred = Credentials.shear(credentials);\n      logger.debug('set credentials for storage', cred);\n      _this._config.credentials = cred;\n      return true;\n    }).catch(function (error) {\n      logger.warn('ensure credentials error', error);\n      return false;\n    });\n  };\n  /**\n   * @private\n   */\n\n\n  AWSS3Provider.prototype._prefix = function (config) {\n    var credentials = config.credentials,\n        level = config.level;\n    var customPrefix = config.customPrefix || {};\n    var identityId = config.identityId || credentials.identityId;\n    var privatePath = (customPrefix.private !== undefined ? customPrefix.private : 'private/') + identityId + '/';\n    var protectedPath = (customPrefix.protected !== undefined ? customPrefix.protected : 'protected/') + identityId + '/';\n    var publicPath = customPrefix.public !== undefined ? customPrefix.public : 'public/';\n\n    switch (level) {\n      case 'private':\n        return privatePath;\n\n      case 'protected':\n        return protectedPath;\n\n      default:\n        return publicPath;\n    }\n  };\n  /**\n   * @private creates an S3 client with new V3 aws sdk\n   */\n\n\n  AWSS3Provider.prototype._createNewS3Client = function (config, emitter) {\n    var region = config.region,\n        credentials = config.credentials,\n        dangerouslyConnectToHttpEndpointForTesting = config.dangerouslyConnectToHttpEndpointForTesting;\n    var localTestingConfig = {};\n\n    if (dangerouslyConnectToHttpEndpointForTesting) {\n      localTestingConfig = {\n        endpoint: localTestingStorageEndpoint,\n        tls: false,\n        bucketEndpoint: false,\n        forcePathStyle: true\n      };\n    }\n\n    var s3client = new S3Client(__assign(__assign({\n      region: region,\n      credentials: credentials,\n      customUserAgent: getAmplifyUserAgent()\n    }, localTestingConfig), {\n      requestHandler: new AxiosHttpHandler({}, emitter)\n    }));\n    return s3client;\n  };\n\n  AWSS3Provider.CATEGORY = 'Storage';\n  AWSS3Provider.PROVIDER_NAME = 'AWSS3';\n  return AWSS3Provider;\n}();\n\nexport { AWSS3Provider };\n/**\n * @deprecated use named import\n */\n\nexport default AWSS3Provider;","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { ConsoleLogger as Logger, Parser } from '@aws-amplify/core';\nimport { AWSS3Provider } from './providers';\nvar logger = new Logger('StorageClass');\nvar DEFAULT_PROVIDER = 'AWSS3';\n/**\n * Provide storage methods to use AWS S3\n */\n\nvar Storage =\n/** @class */\nfunction () {\n  /**\n   * Initialize Storage\n   * @param {Object} config - Configuration object for storage\n   */\n  function Storage() {\n    this._config = {};\n    this._pluggables = [];\n    logger.debug('Storage Options', this._config);\n    this.get = this.get.bind(this);\n    this.put = this.put.bind(this);\n    this.remove = this.remove.bind(this);\n    this.list = this.list.bind(this);\n  }\n\n  Storage.prototype.getModuleName = function () {\n    return 'Storage';\n  };\n  /**\n   * add plugin into Storage category\n   * @param {Object} pluggable - an instance of the plugin\n   */\n\n\n  Storage.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategory() === 'Storage') {\n      this._pluggables.push(pluggable);\n\n      var config = {};\n      config = pluggable.configure(this._config[pluggable.getProviderName()]);\n      return config;\n    }\n  };\n  /**\n   * Get the plugin object\n   * @param providerName - the name of the plugin\n   */\n\n\n  Storage.prototype.getPluggable = function (providerName) {\n    var pluggable = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === providerName;\n    });\n\n    if (pluggable === undefined) {\n      logger.debug('No plugin found with providerName', providerName);\n      return null;\n    } else return pluggable;\n  };\n  /**\n   * Remove the plugin object\n   * @param providerName - the name of the plugin\n   */\n\n\n  Storage.prototype.removePluggable = function (providerName) {\n    this._pluggables = this._pluggables.filter(function (pluggable) {\n      return pluggable.getProviderName() !== providerName;\n    });\n    return;\n  };\n  /**\n   * Configure Storage\n   * @param {Object} config - Configuration object for storage\n   * @return {Object} - Current configuration\n   */\n\n\n  Storage.prototype.configure = function (config) {\n    var _this = this;\n\n    logger.debug('configure Storage');\n    if (!config) return this._config;\n    var amplifyConfig = Parser.parseMobilehubConfig(config);\n    var storageKeysFromConfig = Object.keys(amplifyConfig.Storage);\n    var storageArrayKeys = ['bucket', 'region', 'level', 'track', 'customPrefix', 'serverSideEncryption', 'SSECustomerAlgorithm', 'SSECustomerKey', 'SSECustomerKeyMD5', 'SSEKMSKeyId'];\n\n    var isInStorageArrayKeys = function isInStorageArrayKeys(k) {\n      return storageArrayKeys.some(function (x) {\n        return x === k;\n      });\n    };\n\n    var checkConfigKeysFromArray = function checkConfigKeysFromArray(k) {\n      return k.find(function (k) {\n        return isInStorageArrayKeys(k);\n      });\n    };\n\n    if (storageKeysFromConfig && checkConfigKeysFromArray(storageKeysFromConfig) && !amplifyConfig.Storage[DEFAULT_PROVIDER]) {\n      amplifyConfig.Storage[DEFAULT_PROVIDER] = {};\n    }\n\n    Object.entries(amplifyConfig.Storage).map(function (_a) {\n      var _b = __read(_a, 2),\n          key = _b[0],\n          value = _b[1];\n\n      if (key && isInStorageArrayKeys(key) && value !== undefined) {\n        amplifyConfig.Storage[DEFAULT_PROVIDER][key] = value;\n        delete amplifyConfig.Storage[key];\n      }\n    }); // only update new values for each provider\n\n    Object.keys(amplifyConfig.Storage).forEach(function (providerName) {\n      if (typeof amplifyConfig.Storage[providerName] !== 'string') {\n        _this._config[providerName] = __assign(__assign({}, _this._config[providerName]), amplifyConfig.Storage[providerName]);\n      }\n    });\n\n    this._pluggables.forEach(function (pluggable) {\n      pluggable.configure(_this._config[pluggable.getProviderName()]);\n    });\n\n    if (this._pluggables.length === 0) {\n      this.addPluggable(new AWSS3Provider());\n    }\n\n    return this._config;\n  };\n  /**\n   * Get a presigned URL of the file or the object data when download:true\n   *\n   * @param {string} key - key of the object\n   * @param {Object} [config] - { level : private|protected|public, download: true|false }\n   * @return - A promise resolves to either a presigned url or the object\n   */\n\n\n  Storage.prototype.get = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, provider, prov;\n\n      return __generator(this, function (_b) {\n        _a = (config || {}).provider, provider = _a === void 0 ? DEFAULT_PROVIDER : _a;\n        prov = this._pluggables.find(function (pluggable) {\n          return pluggable.getProviderName() === provider;\n        });\n\n        if (prov === undefined) {\n          logger.debug('No plugin found with providerName', provider);\n          Promise.reject('No plugin found in Storage for the provider');\n        }\n\n        return [2\n        /*return*/\n        , prov.get(key, config)];\n      });\n    });\n  };\n  /**\n   * Put a file in storage bucket specified to configure method\n   * @param {string} key - key of the object\n   * @param {Object} object - File to be put in bucket\n   * @param {Object} [config] - { level : private|protected|public, contentType: MIME Types,\n   *  progressCallback: function }\n   * @return - promise resolves to object on success\n   */\n\n\n  Storage.prototype.put = function (key, object, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, provider, prov;\n\n      return __generator(this, function (_b) {\n        _a = (config || {}).provider, provider = _a === void 0 ? DEFAULT_PROVIDER : _a;\n        prov = this._pluggables.find(function (pluggable) {\n          return pluggable.getProviderName() === provider;\n        });\n\n        if (prov === undefined) {\n          logger.debug('No plugin found with providerName', provider);\n          Promise.reject('No plugin found in Storage for the provider');\n        }\n\n        return [2\n        /*return*/\n        , prov.put(key, object, config)];\n      });\n    });\n  };\n  /**\n   * Remove the object for specified key\n   * @param {string} key - key of the object\n   * @param {Object} [config] - { level : private|protected|public }\n   * @return - Promise resolves upon successful removal of the object\n   */\n\n\n  Storage.prototype.remove = function (key, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, provider, prov;\n\n      return __generator(this, function (_b) {\n        _a = (config || {}).provider, provider = _a === void 0 ? DEFAULT_PROVIDER : _a;\n        prov = this._pluggables.find(function (pluggable) {\n          return pluggable.getProviderName() === provider;\n        });\n\n        if (prov === undefined) {\n          logger.debug('No plugin found with providerName', provider);\n          Promise.reject('No plugin found in Storage for the provider');\n        }\n\n        return [2\n        /*return*/\n        , prov.remove(key, config)];\n      });\n    });\n  };\n  /**\n   * List bucket objects relative to the level and prefix specified\n   * @param {String} path - the path that contains objects\n   * @param {Object} [config] - { level : private|protected|public, maxKeys: NUMBER }\n   * @return - Promise resolves to list of keys for all objects in path\n   */\n\n\n  Storage.prototype.list = function (path, config) {\n    return __awaiter(this, void 0, void 0, function () {\n      var _a, provider, prov;\n\n      return __generator(this, function (_b) {\n        _a = (config || {}).provider, provider = _a === void 0 ? DEFAULT_PROVIDER : _a;\n        prov = this._pluggables.find(function (pluggable) {\n          return pluggable.getProviderName() === provider;\n        });\n\n        if (prov === undefined) {\n          logger.debug('No plugin found with providerName', provider);\n          Promise.reject('No plugin found in Storage for the provider');\n        }\n\n        return [2\n        /*return*/\n        , prov.list(path, config)];\n      });\n    });\n  };\n\n  return Storage;\n}();\n\nexport { Storage };\n/**\n * @deprecated use named import\n */\n\nexport default Storage;","/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { Storage as StorageClass } from './Storage';\nimport { Amplify, ConsoleLogger as Logger } from '@aws-amplify/core';\nvar logger = new Logger('Storage');\nvar _instance = null;\n\nvar getInstance = function getInstance() {\n  if (_instance) {\n    return _instance;\n  }\n\n  logger.debug('Create Storage Instance, debug');\n  _instance = new StorageClass();\n  _instance.vault = new StorageClass();\n  var old_configure = _instance.configure;\n\n  _instance.configure = function (options) {\n    logger.debug('storage configure called');\n\n    var vaultConfig = __assign({}, old_configure.call(_instance, options)); // set level private for each provider for the vault\n\n\n    Object.keys(vaultConfig).forEach(function (providerName) {\n      if (typeof vaultConfig[providerName] !== 'string') {\n        vaultConfig[providerName] = __assign(__assign({}, vaultConfig[providerName]), {\n          level: 'private'\n        });\n      }\n    });\n    logger.debug('storage vault configure called');\n\n    _instance.vault.configure(vaultConfig);\n  };\n\n  return _instance;\n};\n\nexport var Storage = getInstance();\nAmplify.register(Storage);\n/**\n * @deprecated use named import\n */\n\nexport default Storage;\nexport { StorageClass };\nexport * from './providers';","var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nimport { e as NO_STORAGE_MODULE_FOUND } from './constants-d1abe7de.js';\nimport { Storage } from '@aws-amplify/storage';\nvar imageFileType = new Set(['apng', 'bmp', 'gif', 'ico', 'cur', 'jpg', 'jpeg', 'jfif', 'pjpeg', 'pjp', 'png', 'svg', 'tif', 'tiff', 'webp']);\n\nvar calcKey = function calcKey(file, fileToKey) {\n  var name = file.name,\n      size = file.size,\n      type = file.type;\n  var key = encodeURI(name);\n\n  if (fileToKey) {\n    if (typeof fileToKey === 'string') {\n      key = fileToKey;\n    } else if (typeof fileToKey === 'function') {\n      key = fileToKey({\n        name: name,\n        size: size,\n        type: type\n      });\n    } else {\n      key = encodeURI(JSON.stringify(fileToKey));\n    }\n\n    if (!key) {\n      key = 'empty_key';\n    }\n  }\n\n  return key.replace(/\\s/g, '_');\n};\n\nvar getStorageObject = function getStorageObject(key, level, track, identityId, logger) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var src, error_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!Storage || typeof Storage.get !== 'function') {\n            throw new Error(NO_STORAGE_MODULE_FOUND);\n          }\n\n          _a.label = 1;\n\n        case 1:\n          _a.trys.push([1, 3,, 4]);\n\n          return [4\n          /*yield*/\n          , Storage.get(key, {\n            level: level,\n            track: track,\n            identityId: identityId\n          })];\n\n        case 2:\n          src = _a.sent();\n          logger.debug('Storage image get', src);\n          return [2\n          /*return*/\n          , src];\n\n        case 3:\n          error_1 = _a.sent();\n          throw new Error(error_1);\n\n        case 4:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n};\n\nvar readFileAsync = function readFileAsync(blob) {\n  return new Promise(function (resolve, reject) {\n    var reader = new FileReader();\n\n    reader.onload = function () {\n      resolve(reader.result);\n    };\n\n    reader.onerror = function () {\n      reject('Failed to read file!');\n      reader.abort();\n    };\n\n    reader.readAsText(blob);\n  });\n};\n\nvar getTextSource = function getTextSource(key, level, track, identityId, logger) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var textSrc, text, error_2;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!Storage || typeof Storage.get !== 'function') {\n            throw new Error(NO_STORAGE_MODULE_FOUND);\n          }\n\n          _a.label = 1;\n\n        case 1:\n          _a.trys.push([1, 4,, 5]);\n\n          return [4\n          /*yield*/\n          , Storage.get(key, {\n            download: true,\n            level: level,\n            track: track,\n            identityId: identityId\n          })];\n\n        case 2:\n          textSrc = _a.sent();\n          logger.debug(textSrc);\n          return [4\n          /*yield*/\n          , readFileAsync(textSrc['Body'])];\n\n        case 3:\n          text = _a.sent();\n          return [2\n          /*return*/\n          , text];\n\n        case 4:\n          error_2 = _a.sent();\n          throw new Error(error_2);\n\n        case 5:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n};\n\nvar putStorageObject = function putStorageObject(key, body, level, track, contentType, logger) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, error_3;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (!Storage || typeof Storage.put !== 'function') {\n            throw new Error(NO_STORAGE_MODULE_FOUND);\n          }\n\n          _a.label = 1;\n\n        case 1:\n          _a.trys.push([1, 3,, 4]);\n\n          return [4\n          /*yield*/\n          , Storage.put(key, body, {\n            contentType: contentType,\n            level: level,\n            track: track\n          })];\n\n        case 2:\n          data = _a.sent();\n          logger.debug('Upload data', data);\n          return [3\n          /*break*/\n          , 4];\n\n        case 3:\n          error_3 = _a.sent();\n          throw new Error(error_3);\n\n        case 4:\n          return [2\n          /*return*/\n          ];\n      }\n    });\n  });\n};\n\nexport { getTextSource as a, calcKey as c, getStorageObject as g, imageFileType as i, putStorageObject as p };","'use strict';\n\nvar util = require('./util');\n\nvar buildOptions = require('./util').buildOptions;\n\nvar xmlNode = require('./xmlNode');\n\nvar regx = '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'.replace(/NAME/g, util.nameRegexp); //const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n//polyfill\n\nif (!Number.parseInt && window.parseInt) {\n  Number.parseInt = window.parseInt;\n}\n\nif (!Number.parseFloat && window.parseFloat) {\n  Number.parseFloat = window.parseFloat;\n}\n\nvar defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  ignoreNameSpace: false,\n  allowBooleanAttributes: false,\n  //a tag can have attributes without any value\n  //ignoreRootElement : false,\n  parseNodeValue: true,\n  parseAttributeValue: false,\n  arrayMode: false,\n  trimValues: true,\n  //Trim string values of tag and attributes\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  tagValueProcessor: function tagValueProcessor(a, tagName) {\n    return a;\n  },\n  attrValueProcessor: function attrValueProcessor(a, attrName) {\n    return a;\n  },\n  stopNodes: [] //decodeStrict: false,\n\n};\nexports.defaultOptions = defaultOptions;\nvar props = ['attributeNamePrefix', 'attrNodeName', 'textNodeName', 'ignoreAttributes', 'ignoreNameSpace', 'allowBooleanAttributes', 'parseNodeValue', 'parseAttributeValue', 'arrayMode', 'trimValues', 'cdataTagName', 'cdataPositionChar', 'tagValueProcessor', 'attrValueProcessor', 'parseTrueNumberOnly', 'stopNodes'];\nexports.props = props;\n/**\n * Trim -> valueProcessor -> parse value\n * @param {string} tagName\n * @param {string} val\n * @param {object} options\n */\n\nfunction processTagValue(tagName, val, options) {\n  if (val) {\n    if (options.trimValues) {\n      val = val.trim();\n    }\n\n    val = options.tagValueProcessor(val, tagName);\n    val = parseValue(val, options.parseNodeValue, options.parseTrueNumberOnly);\n  }\n\n  return val;\n}\n\nfunction resolveNameSpace(tagname, options) {\n  if (options.ignoreNameSpace) {\n    var tags = tagname.split(':');\n    var prefix = tagname.charAt(0) === '/' ? '/' : '';\n\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n\n  return tagname;\n}\n\nfunction parseValue(val, shouldParse, parseTrueNumberOnly) {\n  if (shouldParse && typeof val === 'string') {\n    var parsed;\n\n    if (val.trim() === '' || isNaN(val)) {\n      parsed = val === 'true' ? true : val === 'false' ? false : val;\n    } else {\n      if (val.indexOf('0x') !== -1) {\n        //support hexa decimal\n        parsed = Number.parseInt(val, 16);\n      } else if (val.indexOf('.') !== -1) {\n        parsed = Number.parseFloat(val);\n        val = val.replace(/\\.?0+$/, \"\");\n      } else {\n        parsed = Number.parseInt(val, 10);\n      }\n\n      if (parseTrueNumberOnly) {\n        parsed = String(parsed) === val ? parsed : val;\n      }\n    }\n\n    return parsed;\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n} //TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\n\n\nvar attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])(.*?)\\\\3)?', 'g');\n\nfunction buildAttributesMap(attrStr, options) {\n  if (!options.ignoreAttributes && typeof attrStr === 'string') {\n    attrStr = attrStr.replace(/\\r?\\n/g, ' '); //attrStr = attrStr || attrStr.trim();\n\n    var matches = util.getAllMatches(attrStr, attrsRegx);\n    var len = matches.length; //don't make it inline\n\n    var attrs = {};\n\n    for (var i = 0; i < len; i++) {\n      var attrName = resolveNameSpace(matches[i][1], options);\n\n      if (attrName.length) {\n        if (matches[i][4] !== undefined) {\n          if (options.trimValues) {\n            matches[i][4] = matches[i][4].trim();\n          }\n\n          matches[i][4] = options.attrValueProcessor(matches[i][4], attrName);\n          attrs[options.attributeNamePrefix + attrName] = parseValue(matches[i][4], options.parseAttributeValue, options.parseTrueNumberOnly);\n        } else if (options.allowBooleanAttributes) {\n          attrs[options.attributeNamePrefix + attrName] = true;\n        }\n      }\n    }\n\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n\n    if (options.attrNodeName) {\n      var attrCollection = {};\n      attrCollection[options.attrNodeName] = attrs;\n      return attrCollection;\n    }\n\n    return attrs;\n  }\n}\n\nvar getTraversalObj = function getTraversalObj(xmlData, options) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\");\n  options = buildOptions(options, defaultOptions, props);\n  var xmlObj = new xmlNode('!xml');\n  var currentNode = xmlObj;\n  var textData = \"\"; //function match(xmlData){\n\n  for (var i = 0; i < xmlData.length; i++) {\n    var ch = xmlData[i];\n\n    if (ch === '<') {\n      if (xmlData[i + 1] === '/') {\n        //Closing Tag\n        var closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\");\n        var tagName = xmlData.substring(i + 2, closeIndex).trim();\n\n        if (options.ignoreNameSpace) {\n          var colonIndex = tagName.indexOf(\":\");\n\n          if (colonIndex !== -1) {\n            tagName = tagName.substr(colonIndex + 1);\n          }\n        }\n        /* if (currentNode.parent) {\n          currentNode.parent.val = util.getValue(currentNode.parent.val) + '' + processTagValue2(tagName, textData , options);\n        } */\n\n\n        if (currentNode) {\n          if (currentNode.val) {\n            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(tagName, textData, options);\n          } else {\n            currentNode.val = processTagValue(tagName, textData, options);\n          }\n        }\n\n        if (options.stopNodes.length && options.stopNodes.includes(currentNode.tagname)) {\n          currentNode.child = [];\n\n          if (currentNode.attrsMap == undefined) {\n            currentNode.attrsMap = {};\n          }\n\n          currentNode.val = xmlData.substr(currentNode.startIndex + 1, i - currentNode.startIndex - 1);\n        }\n\n        currentNode = currentNode.parent;\n        textData = \"\";\n        i = closeIndex;\n      } else if (xmlData[i + 1] === '?') {\n        i = findClosingIndex(xmlData, \"?>\", i, \"Pi Tag is not closed.\");\n      } else if (xmlData.substr(i + 1, 3) === '!--') {\n        i = findClosingIndex(xmlData, \"-->\", i, \"Comment is not closed.\");\n      } else if (xmlData.substr(i + 1, 2) === '!D') {\n        var _closeIndex = findClosingIndex(xmlData, \">\", i, \"DOCTYPE is not closed.\");\n\n        var tagExp = xmlData.substring(i, _closeIndex);\n\n        if (tagExp.indexOf(\"[\") >= 0) {\n          i = xmlData.indexOf(\"]>\", i) + 1;\n        } else {\n          i = _closeIndex;\n        }\n      } else if (xmlData.substr(i + 1, 2) === '![') {\n        var _closeIndex2 = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n\n        var _tagExp = xmlData.substring(i + 9, _closeIndex2); //considerations\n        //1. CDATA will always have parent node\n        //2. A tag with CDATA is not a leaf node so it's value would be string type.\n\n\n        if (textData) {\n          currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(currentNode.tagname, textData, options);\n          textData = \"\";\n        }\n\n        if (options.cdataTagName) {\n          //add cdata node\n          var childNode = new xmlNode(options.cdataTagName, currentNode, _tagExp);\n          currentNode.addChild(childNode); //for backtracking\n\n          currentNode.val = util.getValue(currentNode.val) + options.cdataPositionChar; //add rest value to parent node\n\n          if (_tagExp) {\n            childNode.val = _tagExp;\n          }\n        } else {\n          currentNode.val = (currentNode.val || '') + (_tagExp || '');\n        }\n\n        i = _closeIndex2 + 2;\n      } else {\n        //Opening tag\n        var result = closingIndexForOpeningTag(xmlData, i + 1);\n        var _tagExp2 = result.data;\n        var _closeIndex3 = result.index;\n\n        var separatorIndex = _tagExp2.indexOf(\" \");\n\n        var _tagName = _tagExp2;\n        var shouldBuildAttributesMap = true;\n\n        if (separatorIndex !== -1) {\n          _tagName = _tagExp2.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n          _tagExp2 = _tagExp2.substr(separatorIndex + 1);\n        }\n\n        if (options.ignoreNameSpace) {\n          var _colonIndex = _tagName.indexOf(\":\");\n\n          if (_colonIndex !== -1) {\n            _tagName = _tagName.substr(_colonIndex + 1);\n            shouldBuildAttributesMap = _tagName !== result.data.substr(_colonIndex + 1);\n          }\n        } //save text to parent node\n\n\n        if (currentNode && textData) {\n          if (currentNode.tagname !== '!xml') {\n            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(currentNode.tagname, textData, options);\n          }\n        }\n\n        if (_tagExp2.length > 0 && _tagExp2.lastIndexOf(\"/\") === _tagExp2.length - 1) {\n          //selfClosing tag\n          if (_tagName[_tagName.length - 1] === \"/\") {\n            //remove trailing '/'\n            _tagName = _tagName.substr(0, _tagName.length - 1);\n            _tagExp2 = _tagName;\n          } else {\n            _tagExp2 = _tagExp2.substr(0, _tagExp2.length - 1);\n          }\n\n          var _childNode = new xmlNode(_tagName, currentNode, '');\n\n          if (_tagName !== _tagExp2) {\n            _childNode.attrsMap = buildAttributesMap(_tagExp2, options);\n          }\n\n          currentNode.addChild(_childNode);\n        } else {\n          //opening tag\n          var _childNode2 = new xmlNode(_tagName, currentNode);\n\n          if (options.stopNodes.length && options.stopNodes.includes(_childNode2.tagname)) {\n            _childNode2.startIndex = _closeIndex3;\n          }\n\n          if (_tagName !== _tagExp2 && shouldBuildAttributesMap) {\n            _childNode2.attrsMap = buildAttributesMap(_tagExp2, options);\n          }\n\n          currentNode.addChild(_childNode2);\n          currentNode = _childNode2;\n        }\n\n        textData = \"\";\n        i = _closeIndex3;\n      }\n    } else {\n      textData += xmlData[i];\n    }\n  }\n\n  return xmlObj;\n};\n\nfunction closingIndexForOpeningTag(data, i) {\n  var attrBoundary;\n  var tagExp = \"\";\n\n  for (var index = i; index < data.length; index++) {\n    var ch = data[index];\n\n    if (attrBoundary) {\n      if (ch === attrBoundary) attrBoundary = \"\"; //reset\n    } else if (ch === '\"' || ch === \"'\") {\n      attrBoundary = ch;\n    } else if (ch === '>') {\n      return {\n        data: tagExp,\n        index: index\n      };\n    } else if (ch === '\\t') {\n      ch = \" \";\n    }\n\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg) {\n  var closingIndex = xmlData.indexOf(str, i);\n\n  if (closingIndex === -1) {\n    throw new Error(errMsg);\n  } else {\n    return closingIndex + str.length - 1;\n  }\n}\n\nexports.getTraversalObj = getTraversalObj;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null;\nvar ReflectApply = R && typeof R.apply === 'function' ? R.apply : function ReflectApply(target, receiver, args) {\n  return Function.prototype.apply.call(target, receiver, args);\n};\nvar ReflectOwnKeys;\n\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys;\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n};\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\n\nmodule.exports = EventEmitter;\nmodule.exports.once = once; // Backwards-compat with node 0.10.x\n\nEventEmitter.EventEmitter = EventEmitter;\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined; // By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\n\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function get() {\n    return defaultMaxListeners;\n  },\n  set: function set(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function () {\n  if (this._events === undefined || this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n}; // Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\n\n\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined) return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args.push(arguments[i]);\n  }\n\n  var doError = type === 'error';\n  var events = this._events;\n  if (events !== undefined) doError = doError && events.error === undefined;else if (!doError) return false; // If there is no 'error' event listener then throw.\n\n  if (doError) {\n    var er;\n    if (args.length > 0) er = args[0];\n\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    } // At least give some kind of context to the user\n\n\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n  if (handler === undefined) return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n\n    for (var i = 0; i < len; ++i) {\n      ReflectApply(listeners[i], this, args);\n    }\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n  checkListener(listener);\n  events = target._events;\n\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type, listener.listener ? listener.listener : listener); // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n\n      events = target._events;\n    }\n\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] = prepend ? [listener, existing] : [existing, listener]; // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    } // Check for listener leak\n\n\n    m = _getMaxListeners(target);\n\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true; // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n\n      var w = new Error('Possible EventEmitter memory leak detected. ' + existing.length + ' ' + String(type) + ' listeners ' + 'added. Use emitter.setMaxListeners() to ' + 'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener = function prependListener(type, listener) {\n  return _addListener(this, type, listener, true);\n};\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0) return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = {\n    fired: false,\n    wrapFn: undefined,\n    target: target,\n    type: type,\n    listener: listener\n  };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener = function prependOnceListener(type, listener) {\n  checkListener(listener);\n  this.prependListener(type, _onceWrap(this, type, listener));\n  return this;\n}; // Emits a 'removeListener' event if and only if the listener was removed.\n\n\nEventEmitter.prototype.removeListener = function removeListener(type, listener) {\n  var list, events, position, i, originalListener;\n  checkListener(listener);\n  events = this._events;\n  if (events === undefined) return this;\n  list = events[type];\n  if (list === undefined) return this;\n\n  if (list === listener || list.listener === listener) {\n    if (--this._eventsCount === 0) this._events = Object.create(null);else {\n      delete events[type];\n      if (events.removeListener) this.emit('removeListener', type, list.listener || listener);\n    }\n  } else if (typeof list !== 'function') {\n    position = -1;\n\n    for (i = list.length - 1; i >= 0; i--) {\n      if (list[i] === listener || list[i].listener === listener) {\n        originalListener = list[i].listener;\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0) return this;\n    if (position === 0) list.shift();else {\n      spliceOne(list, position);\n    }\n    if (list.length === 1) events[type] = list[0];\n    if (events.removeListener !== undefined) this.emit('removeListener', type, originalListener || listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(type) {\n  var listeners, events, i;\n  events = this._events;\n  if (events === undefined) return this; // not listening for removeListener, no need to emit\n\n  if (events.removeListener === undefined) {\n    if (arguments.length === 0) {\n      this._events = Object.create(null);\n      this._eventsCount = 0;\n    } else if (events[type] !== undefined) {\n      if (--this._eventsCount === 0) this._events = Object.create(null);else delete events[type];\n    }\n\n    return this;\n  } // emit removeListener for all listeners on all events\n\n\n  if (arguments.length === 0) {\n    var keys = Object.keys(events);\n    var key;\n\n    for (i = 0; i < keys.length; ++i) {\n      key = keys[i];\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n\n    this.removeAllListeners('removeListener');\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n    return this;\n  }\n\n  listeners = events[type];\n\n  if (typeof listeners === 'function') {\n    this.removeListener(type, listeners);\n  } else if (listeners !== undefined) {\n    // LIFO order\n    for (i = listeners.length - 1; i >= 0; i--) {\n      this.removeListener(type, listeners[i]);\n    }\n  }\n\n  return this;\n};\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n  if (events === undefined) return [];\n  var evlistener = events[type];\n  if (evlistener === undefined) return [];\n  if (typeof evlistener === 'function') return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n  return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function (emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\n\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n\n  for (var i = 0; i < n; ++i) {\n    copy[i] = arr[i];\n  }\n\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++) {\n    list[index] = list[index + 1];\n  }\n\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n\n      resolve([].slice.call(arguments));\n    }\n\n    ;\n    eventTargetAgnosticAddListener(emitter, name, resolver, {\n      once: true\n    });\n\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, {\n        once: true\n      });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Crc32 = exports.crc32 = void 0;\n\nvar tslib_1 = require(\"tslib\");\n\nfunction crc32(data) {\n  return new Crc32().update(data).digest();\n}\n\nexports.crc32 = crc32;\n\nvar Crc32 =\n/** @class */\nfunction () {\n  function Crc32() {\n    this.checksum = 0xffffffff;\n  }\n\n  Crc32.prototype.update = function (data) {\n    var e_1, _a;\n\n    try {\n      for (var data_1 = tslib_1.__values(data), data_1_1 = data_1.next(); !data_1_1.done; data_1_1 = data_1.next()) {\n        var byte = data_1_1.value;\n        this.checksum = this.checksum >>> 8 ^ lookupTable[(this.checksum ^ byte) & 0xff];\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (data_1_1 && !data_1_1.done && (_a = data_1.return)) _a.call(data_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return this;\n  };\n\n  Crc32.prototype.digest = function () {\n    return (this.checksum ^ 0xffffffff) >>> 0;\n  };\n\n  return Crc32;\n}();\n\nexports.Crc32 = Crc32; // prettier-ignore\n\nvar lookupTable = Uint32Array.from([0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3, 0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91, 0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE, 0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7, 0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5, 0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B, 0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59, 0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F, 0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924, 0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D, 0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433, 0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01, 0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457, 0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65, 0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2, 0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, 0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9, 0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F, 0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD, 0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683, 0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8, 0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, 0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7, 0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5, 0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B, 0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79, 0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236, 0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, 0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D, 0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713, 0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, 0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777, 0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C, 0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45, 0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB, 0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9, 0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF, 0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D]);","'use strict';\n\nvar nodeToJson = require('./node2json');\n\nvar xmlToNodeobj = require('./xmlstr2xmlnode');\n\nvar x2xmlnode = require('./xmlstr2xmlnode');\n\nvar buildOptions = require('./util').buildOptions;\n\nvar validator = require('./validator');\n\nexports.parse = function (xmlData, options, validationOption) {\n  if (validationOption) {\n    if (validationOption === true) validationOption = {};\n    var result = validator.validate(xmlData, validationOption);\n\n    if (result !== true) {\n      throw Error(result.err.msg);\n    }\n  }\n\n  options = buildOptions(options, x2xmlnode.defaultOptions, x2xmlnode.props);\n  var traversableObj = xmlToNodeobj.getTraversalObj(xmlData, options); //print(traversableObj, \"  \");\n\n  return nodeToJson.convertToJson(traversableObj, options);\n};\n\nexports.convertTonimn = require('./nimndata').convert2nimn;\nexports.getTraversalObj = xmlToNodeobj.getTraversalObj;\nexports.convertToJson = nodeToJson.convertToJson;\nexports.convertToJsonString = require('./node2json_str').convertToJsonString;\nexports.validate = validator.validate;\nexports.j2xParser = require('./json2xml');\n\nexports.parseToNimn = function (xmlData, schema, options) {\n  return exports.convertTonimn(exports.getTraversalObj(xmlData, options), schema, options);\n};\n\nfunction print(xmlNode, indentation) {\n  if (xmlNode) {\n    console.log(indentation + \"{\");\n    console.log(indentation + \"  \\\"tagName\\\": \\\"\" + xmlNode.tagname + \"\\\", \");\n\n    if (xmlNode.parent) {\n      console.log(indentation + \"  \\\"parent\\\": \\\"\" + xmlNode.parent.tagname + \"\\\", \");\n    }\n\n    console.log(indentation + \"  \\\"val\\\": \\\"\" + xmlNode.val + \"\\\", \");\n    console.log(indentation + \"  \\\"attrs\\\": \" + JSON.stringify(xmlNode.attrsMap, null, 4) + \", \");\n\n    if (xmlNode.child) {\n      console.log(indentation + \"\\\"child\\\": {\");\n      var indentation2 = indentation + indentation;\n      Object.keys(xmlNode.child).forEach(function (key) {\n        var node = xmlNode.child[key];\n\n        if (Array.isArray(node)) {\n          console.log(indentation + \"\\\"\" + key + \"\\\" :[\");\n          node.forEach(function (item, index) {\n            //console.log(indentation + \" \\\"\"+index+\"\\\" : [\")\n            print(item, indentation2);\n          });\n          console.log(indentation + \"],\");\n        } else {\n          console.log(indentation + \" \\\"\" + key + \"\\\" : {\");\n          print(node, indentation2);\n          console.log(indentation + \"},\");\n        }\n      });\n      console.log(indentation + \"},\");\n    }\n\n    console.log(indentation + \"},\");\n  }\n}","'use strict';\n\nvar util = require('./util');\n\nvar convertToJson = function convertToJson(node, options, parentTagName) {\n  var jObj = {}; // when no child node or attr is present\n\n  if ((!node.child || util.isEmptyObject(node.child)) && (!node.attrsMap || util.isEmptyObject(node.attrsMap))) {\n    return util.isExist(node.val) ? node.val : '';\n  } // otherwise create a textnode if node has some text\n\n\n  if (util.isExist(node.val) && !(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n    var asArray = util.isTagNameInArrayMode(node.tagname, options.arrayMode, parentTagName);\n    jObj[options.textNodeName] = asArray ? [node.val] : node.val;\n  }\n\n  util.merge(jObj, node.attrsMap, options.arrayMode);\n  var keys = Object.keys(node.child);\n\n  for (var index = 0; index < keys.length; index++) {\n    var tagName = keys[index];\n\n    if (node.child[tagName] && node.child[tagName].length > 1) {\n      jObj[tagName] = [];\n\n      for (var tag in node.child[tagName]) {\n        if (node.child[tagName].hasOwnProperty(tag)) {\n          jObj[tagName].push(convertToJson(node.child[tagName][tag], options, tagName));\n        }\n      }\n    } else {\n      var result = convertToJson(node.child[tagName][0], options, tagName);\n\n      var _asArray = options.arrayMode === true && typeof result === 'object' || util.isTagNameInArrayMode(tagName, options.arrayMode, parentTagName);\n\n      jObj[tagName] = _asArray ? [result] : result;\n    }\n  } //add value\n\n\n  return jObj;\n};\n\nexports.convertToJson = convertToJson;","'use strict';\n\nmodule.exports = function (tagname, parent, val) {\n  this.tagname = tagname;\n  this.parent = parent;\n  this.child = {}; //child tags\n\n  this.attrsMap = {}; //attributes map\n\n  this.val = val; //text only\n\n  this.addChild = function (child) {\n    if (Array.isArray(this.child[child.tagname])) {\n      //already presents\n      this.child[child.tagname].push(child);\n    } else {\n      this.child[child.tagname] = [child];\n    }\n  };\n};","'use strict';\n\nvar util = require('./util');\n\nvar defaultOptions = {\n  allowBooleanAttributes: false //A tag can have attributes without any value\n\n};\nvar props = ['allowBooleanAttributes']; //const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\n\nexports.validate = function (xmlData, options) {\n  options = util.buildOptions(options, defaultOptions, props); //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n\n  var tags = [];\n  var tagFound = false; //indicates that the root tag has been closed (aka. depth 0 has been reached)\n\n  var reachedRoot = false;\n\n  if (xmlData[0] === \"\\uFEFF\") {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n\n  for (var i = 0; i < xmlData.length; i++) {\n    if (xmlData[i] === '<' && xmlData[i + 1] === '?') {\n      i += 2;\n      i = readPI(xmlData, i);\n      if (i.err) return i;\n    } else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      i++;\n\n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        var closingTag = false;\n\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        } //read tagname\n\n\n        var tagName = '';\n\n        for (; i < xmlData.length && xmlData[i] !== '>' && xmlData[i] !== ' ' && xmlData[i] !== '\\t' && xmlData[i] !== '\\n' && xmlData[i] !== '\\r'; i++) {\n          tagName += xmlData[i];\n        }\n\n        tagName = tagName.trim(); //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1); //continue;\n\n          i--;\n        }\n\n        if (!validateTagName(tagName)) {\n          var msg = void 0;\n\n          if (tagName.trim().length === 0) {\n            msg = \"There is an unnecessary space between tag name and backward slash '</ ..'.\";\n          } else {\n            msg = \"Tag '\" + tagName + \"' is an invalid name.\";\n          }\n\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        var result = readAttributeStr(xmlData, i);\n\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\" + tagName + \"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n\n        var attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          var isValid = validateAttributeString(attrStr, options);\n\n          if (isValid === true) {\n            tagFound = true; //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\" + tagName + \"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\" + tagName + \"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, i));\n          } else {\n            var otg = tags.pop();\n\n            if (tagName !== otg) {\n              return getErrorObject('InvalidTag', \"Closing tag '\" + otg + \"' is expected inplace of '\" + tagName + \"'.\", getLineNumberForPosition(xmlData, i));\n            } //when there are no more tags, we reached the root level.\n\n\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          var _isValid = validateAttributeString(attrStr, options);\n\n          if (_isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(_isValid.err.code, _isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + _isValid.err.line));\n          } //if the root level has been reached before ...\n\n\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else {\n            tags.push(tagName);\n          }\n\n          tagFound = true;\n        } //skip tag text value\n        //It may include comments and CDATA value\n\n\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i + 1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else {\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            var afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1) return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }\n        } //end of reading tag text value\n\n\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if (xmlData[i] === ' ' || xmlData[i] === '\\t' || xmlData[i] === '\\n' || xmlData[i] === '\\r') {\n        continue;\n      }\n\n      return getErrorObject('InvalidChar', \"char '\" + xmlData[i] + \"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  } else if (tags.length > 0) {\n    return getErrorObject('InvalidXml', \"Invalid '\" + JSON.stringify(tags, null, 4).replace(/\\r?\\n/g, '') + \"' found.\", 1);\n  }\n\n  return true;\n};\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\n\n\nfunction readPI(xmlData, i) {\n  var start = i;\n\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      var tagname = xmlData.substr(start, i - start);\n\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (xmlData.length > i + 8 && xmlData[i + 1] === 'D' && xmlData[i + 2] === 'O' && xmlData[i + 3] === 'C' && xmlData[i + 4] === 'T' && xmlData[i + 5] === 'Y' && xmlData[i + 6] === 'P' && xmlData[i + 7] === 'E') {\n    var angleBracketsCount = 1;\n\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (xmlData.length > i + 9 && xmlData[i + 1] === '[' && xmlData[i + 2] === 'C' && xmlData[i + 3] === 'D' && xmlData[i + 4] === 'A' && xmlData[i + 5] === 'T' && xmlData[i + 6] === 'A' && xmlData[i + 7] === '[') {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nvar doubleQuote = '\"';\nvar singleQuote = \"'\";\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\n\nfunction readAttributeStr(xmlData, i) {\n  var attrStr = '';\n  var startChar = '';\n  var tagClosed = false;\n\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n        continue;\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n\n    attrStr += xmlData[i];\n  }\n\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n/**\n * Select all the attributes whether valid or invalid.\n */\n\n\nvar validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g'); //attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n  //if(attrStr.trim().length === 0) return true; //empty string\n  var matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  var attrNames = {};\n\n  for (var i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\" + matches[i][2] + \"' has no space in starting.\", getPositionFromMatch(attrStr, matches[i][0]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\" + matches[i][2] + \"' is not allowed.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n\n\n    var attrName = matches[i][2];\n\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\" + attrName + \"' is an invalid name.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\" + attrName + \"' is repeated.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  var re = /\\d/;\n\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';') return i;\n    if (!xmlData[i].match(re)) break;\n  }\n\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';') return -1;\n\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n\n  var count = 0;\n\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20) continue;\n    if (xmlData[i] === ';') break;\n    return -1;\n  }\n\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber\n    }\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n} // const startsWithXML = /^xml/i;\n\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname)\n  /* && !tagname.match(startsWithXML) */\n  ;\n} //this function returns the line number for the character at the given index\n\n\nfunction getLineNumberForPosition(xmlData, index) {\n  var lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return lines.length;\n} //this function returns the position of the last character of match within attrStr\n\n\nfunction getPositionFromMatch(attrStr, match) {\n  return attrStr.indexOf(match) + match.length;\n}","'use strict';\n\nvar char = function char(a) {\n  return String.fromCharCode(a);\n};\n\nvar chars = {\n  nilChar: char(176),\n  missingChar: char(201),\n  nilPremitive: char(175),\n  missingPremitive: char(200),\n  emptyChar: char(178),\n  emptyValue: char(177),\n  //empty Premitive\n  boundryChar: char(179),\n  objStart: char(198),\n  arrStart: char(204),\n  arrayEnd: char(185)\n};\nvar charsArr = [chars.nilChar, chars.nilPremitive, chars.missingChar, chars.missingPremitive, chars.boundryChar, chars.emptyChar, chars.emptyValue, chars.arrayEnd, chars.objStart, chars.arrStart];\n\nvar _e = function _e(node, e_schema, options) {\n  if (typeof e_schema === 'string') {\n    //premitive\n    if (node && node[0] && node[0].val !== undefined) {\n      return getValue(node[0].val, e_schema);\n    } else {\n      return getValue(node, e_schema);\n    }\n  } else {\n    var hasValidData = hasData(node);\n\n    if (hasValidData === true) {\n      var str = '';\n\n      if (Array.isArray(e_schema)) {\n        //attributes can't be repeated. hence check in children tags only\n        str += chars.arrStart;\n        var itemSchema = e_schema[0]; //var itemSchemaType = itemSchema;\n\n        var arr_len = node.length;\n\n        if (typeof itemSchema === 'string') {\n          for (var arr_i = 0; arr_i < arr_len; arr_i++) {\n            var r = getValue(node[arr_i].val, itemSchema);\n            str = processValue(str, r);\n          }\n        } else {\n          for (var _arr_i = 0; _arr_i < arr_len; _arr_i++) {\n            var _r = _e(node[_arr_i], itemSchema, options);\n\n            str = processValue(str, _r);\n          }\n        }\n\n        str += chars.arrayEnd; //indicates that next item is not array item\n      } else {\n        //object\n        str += chars.objStart;\n        var keys = Object.keys(e_schema);\n\n        if (Array.isArray(node)) {\n          node = node[0];\n        }\n\n        for (var i in keys) {\n          var key = keys[i]; //a property defined in schema can be present either in attrsMap or children tags\n          //options.textNodeName will not present in both maps, take it's value from val\n          //options.attrNodeName will be present in attrsMap\n\n          var _r2 = void 0;\n\n          if (!options.ignoreAttributes && node.attrsMap && node.attrsMap[key]) {\n            _r2 = _e(node.attrsMap[key], e_schema[key], options);\n          } else if (key === options.textNodeName) {\n            _r2 = _e(node.val, e_schema[key], options);\n          } else {\n            _r2 = _e(node.child[key], e_schema[key], options);\n          }\n\n          str = processValue(str, _r2);\n        }\n      }\n\n      return str;\n    } else {\n      return hasValidData;\n    }\n  }\n};\n\nvar getValue = function getValue(a\n/*, type*/\n) {\n  switch (a) {\n    case undefined:\n      return chars.missingPremitive;\n\n    case null:\n      return chars.nilPremitive;\n\n    case '':\n      return chars.emptyValue;\n\n    default:\n      return a;\n  }\n};\n\nvar processValue = function processValue(str, r) {\n  if (!isAppChar(r[0]) && !isAppChar(str[str.length - 1])) {\n    str += chars.boundryChar;\n  }\n\n  return str + r;\n};\n\nvar isAppChar = function isAppChar(ch) {\n  return charsArr.indexOf(ch) !== -1;\n};\n\nfunction hasData(jObj) {\n  if (jObj === undefined) {\n    return chars.missingChar;\n  } else if (jObj === null) {\n    return chars.nilChar;\n  } else if (jObj.child && Object.keys(jObj.child).length === 0 && (!jObj.attrsMap || Object.keys(jObj.attrsMap).length === 0)) {\n    return chars.emptyChar;\n  } else {\n    return true;\n  }\n}\n\nvar x2j = require('./xmlstr2xmlnode');\n\nvar buildOptions = require('./util').buildOptions;\n\nvar convert2nimn = function convert2nimn(node, e_schema, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n  return _e(node, e_schema, options);\n};\n\nexports.convert2nimn = convert2nimn;","'use strict';\n\nvar util = require('./util');\n\nvar buildOptions = require('./util').buildOptions;\n\nvar x2j = require('./xmlstr2xmlnode'); //TODO: do it later\n\n\nvar convertToJsonString = function convertToJsonString(node, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n  options.indentBy = options.indentBy || '';\n  return _cToJsonStr(node, options, 0);\n};\n\nvar _cToJsonStr = function _cToJsonStr(node, options, level) {\n  var jObj = '{'; //traver through all the children\n\n  var keys = Object.keys(node.child);\n\n  for (var index = 0; index < keys.length; index++) {\n    var tagname = keys[index];\n\n    if (node.child[tagname] && node.child[tagname].length > 1) {\n      jObj += '\"' + tagname + '\" : [ ';\n\n      for (var tag in node.child[tagname]) {\n        jObj += _cToJsonStr(node.child[tagname][tag], options) + ' , ';\n      }\n\n      jObj = jObj.substr(0, jObj.length - 1) + ' ] '; //remove extra comma in last\n    } else {\n      jObj += '\"' + tagname + '\" : ' + _cToJsonStr(node.child[tagname][0], options) + ' ,';\n    }\n  }\n\n  util.merge(jObj, node.attrsMap); //add attrsMap as new children\n\n  if (util.isEmptyObject(jObj)) {\n    return util.isExist(node.val) ? node.val : '';\n  } else {\n    if (util.isExist(node.val)) {\n      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n        jObj += '\"' + options.textNodeName + '\" : ' + stringval(node.val);\n      }\n    }\n  } //add value\n\n\n  if (jObj[jObj.length - 1] === ',') {\n    jObj = jObj.substr(0, jObj.length - 2);\n  }\n\n  return jObj + '}';\n};\n\nfunction stringval(v) {\n  if (v === true || v === false || !isNaN(v)) {\n    return v;\n  } else {\n    return '\"' + v + '\"';\n  }\n}\n\nfunction indentate(options, level) {\n  return options.indentBy.repeat(level);\n}\n\nexports.convertToJsonString = convertToJsonString;","'use strict'; //parse Empty Node as self closing node\n\nvar buildOptions = require('./util').buildOptions;\n\nvar defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  format: false,\n  indentBy: '  ',\n  supressEmptyNode: false,\n  tagValueProcessor: function tagValueProcessor(a) {\n    return a;\n  },\n  attrValueProcessor: function attrValueProcessor(a) {\n    return a;\n  }\n};\nvar props = ['attributeNamePrefix', 'attrNodeName', 'textNodeName', 'ignoreAttributes', 'cdataTagName', 'cdataPositionChar', 'format', 'indentBy', 'supressEmptyNode', 'tagValueProcessor', 'attrValueProcessor'];\n\nfunction Parser(options) {\n  this.options = buildOptions(options, defaultOptions, props);\n\n  if (this.options.ignoreAttributes || this.options.attrNodeName) {\n    this.isAttribute = function ()\n    /*a*/\n    {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  if (this.options.cdataTagName) {\n    this.isCDATA = isCDATA;\n  } else {\n    this.isCDATA = function ()\n    /*a*/\n    {\n      return false;\n    };\n  }\n\n  this.replaceCDATAstr = replaceCDATAstr;\n  this.replaceCDATAarr = replaceCDATAarr;\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function () {\n      return '';\n    };\n\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.supressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n}\n\nParser.prototype.parse = function (jObj) {\n  return this.j2x(jObj, 0).val;\n};\n\nParser.prototype.j2x = function (jObj, level) {\n  var attrStr = '';\n  var val = '';\n  var keys = Object.keys(jObj);\n  var len = keys.length;\n\n  for (var i = 0; i < len; i++) {\n    var key = keys[i];\n\n    if (typeof jObj[key] === 'undefined') {// supress undefined node\n    } else if (jObj[key] === null) {\n      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      var attr = this.isAttribute(key);\n\n      if (attr) {\n        attrStr += ' ' + attr + '=\"' + this.options.attrValueProcessor('' + jObj[key]) + '\"';\n      } else if (this.isCDATA(key)) {\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAstr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAstr('', jObj[key]);\n        }\n      } else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          if (jObj[this.options.cdataTagName]) {//value will added while processing cdata\n          } else {\n            val += this.options.tagValueProcessor('' + jObj[key]);\n          }\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      if (this.isCDATA(key)) {\n        val += this.indentate(level);\n\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAarr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAarr('', jObj[key]);\n        }\n      } else {\n        //nested nodes\n        var arrLen = jObj[key].length;\n\n        for (var j = 0; j < arrLen; j++) {\n          var item = jObj[key][j];\n\n          if (typeof item === 'undefined') {// supress undefined node\n          } else if (item === null) {\n            val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          } else if (typeof item === 'object') {\n            var result = this.j2x(item, level + 1);\n            val += this.buildObjNode(result.val, key, result.attrStr, level);\n          } else {\n            val += this.buildTextNode(item, key, '', level);\n          }\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attrNodeName && key === this.options.attrNodeName) {\n        var Ks = Object.keys(jObj[key]);\n        var L = Ks.length;\n\n        for (var _j = 0; _j < L; _j++) {\n          attrStr += ' ' + Ks[_j] + '=\"' + this.options.attrValueProcessor('' + jObj[key][Ks[_j]]) + '\"';\n        }\n      } else {\n        var _result = this.j2x(jObj[key], level + 1);\n\n        val += this.buildObjNode(_result.val, key, _result.attrStr, level);\n      }\n    }\n  }\n\n  return {\n    attrStr: attrStr,\n    val: val\n  };\n};\n\nfunction replaceCDATAstr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata + ']]' + this.tagEndChar;\n  } else {\n    return str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata + ']]' + this.tagEndChar);\n  }\n}\n\nfunction replaceCDATAarr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata.join(']]><![CDATA[') + ']]' + this.tagEndChar;\n  } else {\n    for (var v in cdata) {\n      str = str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata[v] + ']]>');\n    }\n\n    return str + this.newLine;\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  if (attrStr && !val.includes('<')) {\n    return this.indentate(level) + '<' + key + attrStr + '>' + val + //+ this.newLine\n    // + this.indentate(level)\n    '</' + key + this.tagEndChar;\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + this.tagEndChar + val + //+ this.newLine\n    this.indentate(level) + '</' + key + this.tagEndChar;\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar; //+ this.newLine\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  return this.indentate(level) + '<' + key + attrStr + '>' + this.options.tagValueProcessor(val) + '</' + key + this.tagEndChar;\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name\n/*, options*/\n) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nfunction isCDATA(name) {\n  return name === this.options.cdataTagName;\n} //formatting\n//indentation\n//\\n after each closing or self closing tag\n\n\nmodule.exports = Parser;"],"sourceRoot":""}