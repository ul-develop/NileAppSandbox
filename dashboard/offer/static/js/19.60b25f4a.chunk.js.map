{"version":3,"sources":["components/BuyerOfferStep/Step700/ActionButton.js"],"names":["ActionButton","offer","isLoading","updateOfferStep","useState","anchorEl","setAnchorEl","offerId","_get","scarForm","find","form","FORM_TYPE_IDS","scar","formId","scarUrl","APP_BASE_URL","OFFER_STEPS","submitCorrectiveAction","type","className","onClick","event","currentTarget","disabled","keepMounted","open","Boolean","onClose","component","href","structuredSelector","createStructuredSelector","state","mapDispatchToProps","connect"],"mappings":"8PAsBaA,EAAe,SAAC,GAIW,IAHtCC,EAGqC,EAHrCA,MAEAC,GACqC,EAFrCC,gBAEqC,EADrCD,WACqC,EACLE,mBAAS,MADJ,mBAC9BC,EAD8B,KACpBC,EADoB,KAE/BC,EAAUC,IAAKP,EAAO,CAAC,YACvBQ,EAAWD,IAAKP,EAAO,CAAC,UAAUS,MACtC,SAAAC,GAAI,OAAIH,IAAKG,EAAM,CAAC,iBAAmBC,KAAcC,QAEjDC,EAASN,IAAKC,EAAU,CAAC,WAUzBM,EAAO,UAAMC,IAAN,0BAAoCT,EAApC,iBAAoDU,KAAYC,uBAAhE,mBAAiGJ,GAE9G,OACE,oCACE,4BACEK,KAAK,SACLC,UAAU,+BACVC,QAfc,SAAAC,GAClBhB,EAAYgB,EAAMC,gBAedC,SAAUtB,GAEV,uBAAGkB,UAAU,sBAEf,kBAAC,IAAD,CACEf,SAAUA,EACVoB,aAAW,EACXC,KAAMC,QAAQtB,GACduB,QApBc,WAClBtB,EAAY,QAqBR,kBAAC,IAAD,CAAUuB,UAAU,IAAIC,KAAMf,GAA9B,kBAQFgB,EAAqBC,YAAyB,CAClD9B,UAAW,SAAA+B,GAAK,OAAIzB,IAAKyB,EAAO,CAAC,aAAc,iBAG3CC,EAAqB,CACzB/B,qBAGcgC,4BACdJ,EACAG,EAFcC,CAGdnC","file":"static/js/19.60b25f4a.chunk.js","sourcesContent":["// @flow\nimport React, { useState, Fragment } from 'react';\nimport type { Element, AbstractComponent } from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport _get from 'lodash/get';\nimport { APP_BASE_URL, FORM_TYPE_IDS, OFFER_STEPS } from 'shared/Consts';\nimport { createStructuredSelector } from 'reselect';\nimport { updateOfferStep } from 'containers/BuyerOffer/redux/Actions';\nimport { connect } from 'react-redux';\nimport type { Offer } from 'types/Offer';\n\ntype PropsWithoutRedux = {\n  offer: Offer,\n};\n\ntype Props = {\n  ...PropsWithoutRedux,\n  updateOfferStep: Function,\n  isLoading: boolean,\n};\n\nexport const ActionButton = ({\n  offer,\n  updateOfferStep,\n  isLoading,\n}: Props): Element<typeof Fragment> => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const offerId = _get(offer, ['OfferId']);\n  const scarForm = _get(offer, ['Forms']).find(\n    form => _get(form, ['FormTypeId']) === FORM_TYPE_IDS.scar,\n  );\n  const formId = _get(scarForm, ['FormId']);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const scarUrl = `${APP_BASE_URL}/offer?offerId=${offerId}&step=${OFFER_STEPS.submitCorrectiveAction}&formId=${formId}`;\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"minimal-btn animated_fastest\"\n        onClick={handleClick}\n        disabled={isLoading}\n      >\n        <i className=\"fa fa-ellipsis-h\"></i>\n      </button>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem component=\"a\" href={scarUrl}>\n          Submit SCAR\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  isLoading: state => _get(state, ['buyerOffer', 'isLoading']),\n});\n\nconst mapDispatchToProps = {\n  updateOfferStep,\n};\n\nexport default (connect(\n  structuredSelector,\n  mapDispatchToProps,\n)(ActionButton): AbstractComponent<PropsWithoutRedux>);\n"],"sourceRoot":""}