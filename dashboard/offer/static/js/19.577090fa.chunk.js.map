{"version":3,"sources":["components/BuyerOfferStep/Step500/ActionButton.js"],"names":["ActionButton","offer","isLoading","handleOpenModalConfirmTransfer","useState","anchorEl","setAnchorEl","type","className","onClick","event","currentTarget","disabled","keepMounted","open","Boolean","onClose","component","structuredSelector","createStructuredSelector","state","_get","connect"],"mappings":"+OAoBaA,EAAe,SAAC,GAIW,IAHtCC,EAGqC,EAHrCA,MACAC,EAEqC,EAFrCA,UACAC,EACqC,EADrCA,+BACqC,EACLC,mBAAS,MADJ,mBAC9BC,EAD8B,KACpBC,EADoB,KAerC,OACE,oCACE,4BACEC,KAAK,SACLC,UAAU,+BACVC,QAjBc,SAAAC,GAClBJ,EAAYI,EAAMC,gBAiBdC,SAAUV,GAEV,uBAAGM,UAAU,sBAEf,kBAAC,IAAD,CACEH,SAAUA,EACVQ,aAAW,EACXC,KAAMC,QAAQV,GACdW,QAtBc,WAClBV,EAAY,QAuBR,kBAAC,IAAD,CAAUW,UAAU,SAASR,QApBL,WAC5BN,EAA+BF,KAmB3B,cAQFiB,EAAqBC,YAAyB,CAClDjB,UAAW,SAAAkB,GAAK,OAAIC,IAAKD,EAAO,CAAC,aAAc,iBAGjCE,4BACdJ,EACA,KAFcI,CAGdtB","file":"static/js/19.577090fa.chunk.js","sourcesContent":["// @flow\nimport React, { useState, Fragment } from 'react';\nimport type { Element, AbstractComponent } from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport _get from 'lodash/get';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport type { Offer } from 'types/Offer';\n\ntype PropsWithoutRedux = {\n  offer: Offer,\n  handleOpenModalConfirmTransfer: Function,\n};\n\ntype Props = {\n  ...PropsWithoutRedux,\n  isLoading: boolean,\n};\n\nexport const ActionButton = ({\n  offer,\n  isLoading,\n  handleOpenModalConfirmTransfer,\n}: Props): Element<typeof Fragment> => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onClickConfirmHandler = () => {\n    handleOpenModalConfirmTransfer(offer);\n  };\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"minimal-btn animated_fastest\"\n        onClick={handleClick}\n        disabled={isLoading}\n      >\n        <i className=\"fa fa-ellipsis-h\"></i>\n      </button>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem component=\"button\" onClick={onClickConfirmHandler}>\n          Wire 3%\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  isLoading: state => _get(state, ['buyerOffer', 'isLoading']),\n});\n\nexport default (connect(\n  structuredSelector,\n  null,\n)(ActionButton): AbstractComponent<PropsWithoutRedux>);\n"],"sourceRoot":""}