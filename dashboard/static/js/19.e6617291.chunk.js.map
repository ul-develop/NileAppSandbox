{"version":3,"sources":["components/BuyerOfferStep/Step500/ActionButton.js"],"names":["ActionButton","offer","isLoading","updateOfferStep","useState","anchorEl","setAnchorEl","offerId","_get","onClickConfirmHandler","event","a","currentTarget","newStep","OFFER_STEPS","close","toastr","success","SURVEYS_SUCCESS_MESSAGE","COMMON","FORM_DATA_SAVED_SUCCESS","remove","error","SURVEYS_ERROR_MESSAGE","message","type","className","onClick","disabled","keepMounted","open","Boolean","onClose","component","structuredSelector","createStructuredSelector","state","mapDispatchToProps","connect"],"mappings":"uSA2BaA,EAAe,SAAC,GAIW,IAHtCC,EAGqC,EAHrCA,MACAC,EAEqC,EAFrCA,UACAC,EACqC,EADrCA,gBACqC,EACLC,mBAAS,MADJ,mBAC9BC,EAD8B,KACpBC,EADoB,KAE/BC,EAAUC,IAAKP,EAAO,CAAC,YAUvBQ,EAAqB,uCAAG,WAAMC,GAAN,eAAAC,EAAA,6DACpBC,EAAkBF,EAAlBE,cADoB,kBAIpBT,EAAgB,CACpBI,UACAM,QAASC,KAAYC,QANG,OAS1BC,SAAOC,QACLC,IAAwBC,OACxBD,IAAwBE,yBAGtBR,GACFA,EAAcS,SAfU,uDAkB1BL,SAAOM,MAAMC,IAAsBJ,OAAQ,KAAMK,SAlBvB,4EAAH,sDAuB3B,OACE,oCACE,4BACEC,KAAK,SACLC,UAAU,+BACVC,QApCc,SAAAjB,GAClBJ,EAAYI,EAAME,gBAoCdgB,SAAU1B,GAEV,uBAAGwB,UAAU,sBAEf,kBAAC,IAAD,CACErB,SAAUA,EACVwB,aAAW,EACXC,KAAMC,QAAQ1B,GACd2B,QAzCc,WAClB1B,EAAY,QA0CR,kBAAC,IAAD,CAAU2B,UAAU,SAASN,QAASlB,GAAtC,uBAQFyB,EAAqBC,YAAyB,CAClDjC,UAAW,SAAAkC,GAAK,OAAI5B,IAAK4B,EAAO,CAAC,aAAc,iBAG3CC,EAAqB,CACzBlC,qBAGcmC,4BACdJ,EACAG,EAFcC,CAGdtC","file":"static/js/19.e6617291.chunk.js","sourcesContent":["// @flow\nimport React, { useState, Fragment } from 'react';\nimport type { Element, AbstractComponent } from 'react';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport _get from 'lodash/get';\nimport { OFFER_STEPS } from 'shared/Consts';\nimport { createStructuredSelector } from 'reselect';\nimport { updateOfferStep } from 'containers/BuyerOffer/redux/Actions';\nimport { connect } from 'react-redux';\nimport {\n  SURVEYS_ERROR_MESSAGE,\n  SURVEYS_SUCCESS_MESSAGE,\n} from 'components/FormBuilder/Messages';\nimport { toastr } from 'react-redux-toastr';\nimport type { Offer } from 'types/Offer';\n\ntype PropsWithoutRedux = {\n  offer: Offer,\n};\n\ntype Props = {\n  ...PropsWithoutRedux,\n  updateOfferStep: Function,\n  isLoading: boolean,\n};\n\nexport const ActionButton = ({\n  offer,\n  isLoading,\n  updateOfferStep,\n}: Props): Element<typeof Fragment> => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const offerId = _get(offer, ['OfferId']);\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const onClickConfirmHandler = async event => {\n    const { currentTarget } = event;\n\n    try {\n      await updateOfferStep({\n        offerId,\n        newStep: OFFER_STEPS.close,\n      });\n\n      toastr.success(\n        SURVEYS_SUCCESS_MESSAGE.COMMON,\n        SURVEYS_SUCCESS_MESSAGE.FORM_DATA_SAVED_SUCCESS,\n      );\n\n      if (currentTarget) {\n        currentTarget.remove();\n      }\n    } catch (error) {\n      toastr.error(SURVEYS_ERROR_MESSAGE.COMMON, error.message);\n      return;\n    }\n  };\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        className=\"minimal-btn animated_fastest\"\n        onClick={handleClick}\n        disabled={isLoading}\n      >\n        <i className=\"fa fa-ellipsis-h\"></i>\n      </button>\n      <Menu\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem component=\"button\" onClick={onClickConfirmHandler}>\n          Confirm Transfer\n        </MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nconst structuredSelector = createStructuredSelector({\n  isLoading: state => _get(state, ['buyerOffer', 'isLoading']),\n});\n\nconst mapDispatchToProps = {\n  updateOfferStep,\n};\n\nexport default (connect(\n  structuredSelector,\n  mapDispatchToProps,\n)(ActionButton): AbstractComponent<PropsWithoutRedux>);\n"],"sourceRoot":""}